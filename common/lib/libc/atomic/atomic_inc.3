.\"	$NetBSD: atomic_inc.3,v 1.1.2.1 2007/04/12 15:47:42 thorpej Exp $
.\"
.\" Copyright (c) 2007 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Jason R. Thorpe.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\" notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\" notice, this list of conditions and the following disclaimer in the
.\" documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\" must display the following acknowledgement:
.\"	This product includes software developed by the NetBSD
.\"	Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\" contributors may be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd April 11, 2007
.Dt ATOMIC_INC 3
.Os
.Sh NAME
.Nm atomic_inc ,
.Nm atomic_inc_8 ,
.Nm atomic_inc_uchar ,
.Nm atomic_inc_16 ,
.Nm atomic_inc_ushort ,
.Nm atomic_inc_32 ,
.Nm atomic_inc_uint ,
.Nm atomic_inc_ulong ,
.Nm atomic_inc_ptr ,
.Nm atomic_inc_64 ,
.Nm atomic_inc_8_nv ,
.Nm atomic_inc_uchar_nv ,
.Nm atomic_inc_16_nv ,
.Nm atomic_inc_ushort_nv ,
.Nm atomic_inc_32_nv ,
.Nm atomic_inc_uint_nv ,
.Nm atomic_inc_ulong_nv ,
.Nm atomic_inc_ptr_nv ,
.Nm atomic_inc_64_nv
.Nd atomic increment operations
.\" .Sh LIBRARY
.\" .Lb libc
.Sh SYNOPSIS
.In sys/atomic.h
.Ft void
.Fn atomic_inc_8 "volatile uint8_t *ptr"
.Ft void
.Fn atomic_inc_uchar "volatile unsigned char *ptr"
.Ft void
.Fn atomic_inc_16 "volatile uint16_t *ptr"
.Ft void
.Fn atomic_inc_ushort "volatile unsigned short *ptr"
.Ft void
.Fn atomic_inc_32 "volatile uint32_t *ptr"
.Ft void
.Fn atomic_inc_uint "volatile unsigned int *ptr"
.Ft void
.Fn atomic_inc_ulong "volatile unsigned long *ptr"
.Ft void
.Fn atomic_inc_ptr "volatile void *ptr"
.Ft void
.Fn atomic_inc_64 "volatile uint64_t *ptr"
.Ft uint8_t
.Fn atomic_inc_8_nv "volatile uint8_t *ptr"
.Ft unsigned char
.Fn atomic_inc_uchar_nv "volatile unsigned char *ptr"
.Ft uint16_t
.Fn atomic_inc_16_nv "volatile uint16_t *ptr"
.Ft unsigned short
.Fn atomic_inc_ushort_nv "volatile unsigned short *ptr"
.Ft uint32_t
.Fn atomic_inc_32_nv "volatile uint32_t *ptr"
.Ft unsigned int
.Fn atomic_inc_uint_nv "volatile unsigned int *ptr"
.Ft unsigned long
.Fn atomic_inc_ulong_nv "volatile unsigned long *ptr"
.Ft void *
.Fn atomic_inc_ptr_nv "volatile void *ptr"
.Ft uint64_t
.Fn atomic_inc_64_nv "volatile uint64_t *ptr"
.Sh DESCRIPTION
The
.Nm atomic_inc
family of functions increment
.Pq by one
the variable referenced by
.Fa ptr
in an atomic fashion.
.Pp
The
.Fn *_nv
variants of these functions return the new value.
.Pp
The 64-bit variants of these functions are available only on platforms
that can support atomic 64-bit memory access.
Applications can check for the availability of 64-bit atomic memory
operations by testing if the pre-processor macro
.Dv __HAVE_ATOMIC64_OPS
is defined.
.Sh SEE ALSO
.Xr atomic_ops 3
.Sh HISTORY
The
.Nm atomic_inc
functions first appeared in
.Nx 5.0 .
