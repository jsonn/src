
- priority scheduling!

- Finish interfaces: pthread_cond_*()

- non-i386 platform support.

- stress-test spinlock-preemption handling.

- Mutexes should have an internal simple_lock, not counted against a
  per-thread spinlock, so that there can be an optimistic fast-path lock.

- Mutexes should support adaptive spin/sleep locks.

- Supporting different mutex types would be nice (normal, debugging,
  recursive, etc).

- Currently, each thread uses two real pages of memory: one at the top
  of the stack for actual stack data, and one at the bottom for the
  pthread_st. If we can get suitable space above the initial stack for
  main(), we can cut this to one page per thread. Perhaps crt0 should
  do something different (give us more space) if libpthread is linked
  in?

- Figure out whether/how to expose the inline version of
  pthread_self().

- Look at regression rests in Proven's pthreads package.
