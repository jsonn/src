.\" $NetBSD: pthread_suspend_np.3,v 1.3.8.2 2008/04/30 13:10:53 martin Exp $
.\"
.\" Copyright (c) 2003 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Christos Zoulas.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd November 12, 2003
.Dt PTHREAD_SUSPEND_NP 3
.Os
.Sh NAME
.Nm pthread_suspend_np ,
.Nm pthread_resume_np
.Nd suspend/resume the given thread
.Sh LIBRARY
.Lb libpthread
.Sh SYNOPSIS
.In pthread.h
.Ft int
.Fn pthread_suspend_np "pthread_t thread"
.Ft int
.Fn pthread_resume_np "pthread_t thread"
.Sh DESCRIPTION
The
.Fn pthread_suspend_np
function suspends the
.Ar thread
given as argument.
If
.Ar thread
is the currently running thread as returned by
.Xr pthread_self 3 ,
the function fails and returns
.Er EDEADLK .
Otherwise, it removes the named thread from the running queue, and
adds it to the suspended queue.
The
.Ar thread
will remain blocked until
.Fn pthread_resume_np
is called on it.
.Pp
.Fn pthread_resume_np
resumes the
.Ar thread
given as argument, if it was suspended.
.Sh RETURN VALUES
The
.Fn pthread_suspend_np
function returns 0 on success and an error number indicating the
reason for the failure.
The
.Fn pthread_resume_np
function always returns 0.
.Sh ERRORS
.Fn pthread_suspend_np
shall fail if:
.Bl -tag -width Er
.It Bq Er EDEADLK
The thread requested to suspend was the currently running thread.
.El
.Pp
.Fn pthread_resume_np
never fails.
.Sh NOTES
Some
.Fn pthread_suspend_np
implementations may allow suspending the current thread.
This is dangerous, because the semantics of the function would then
require the scheduler to schedule another thread, causing a thread
context switch.
Since that context switch can happen in a signal handler by someone
calling
.Fn pthread_suspend_np
in a signal handler, this is currently not allowed.
.Pp
In
.Fn pthread_resume_np
we don't check if the
.Ar thread
argument is not already suspended.
Some implementations might return an error condition if
.Fn pthread_resume_np
is called on a non-suspended thread.
.Sh SEE ALSO
.Xr pthread_attr_setcreatesuspend_np 3 ,
.Xr pthread_self 3
