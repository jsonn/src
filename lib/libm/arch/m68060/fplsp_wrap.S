/* $NetBSD: fplsp_wrap.S,v 1.3.4.1 1999/12/27 18:30:00 wrstuden Exp $ */

/*
 * FPLSP wrapper.
 *
 * DO NOT EDIT - this file is automatically generated!
 */

#include <machine/asm.h>


ENTRY(__ieee754_acosf)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0000
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP0000
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(__ieee754_acos)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0008
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP0008
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

ENTRY(__ieee754_asinf)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0018
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP0018
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(__ieee754_asin)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0020
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP0020
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

ENTRY(atanf)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0030
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP0030
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(atan)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0038
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP0038
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

ENTRY(__ieee754_atanhf)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0048
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP0048
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(__ieee754_atanh)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0050
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP0050
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

ENTRY(cosf)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0060
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP0060
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(cos)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0068
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP0068
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

ENTRY(__ieee754_coshf)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0078
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP0078
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(__ieee754_cosh)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0080
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP0080
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

ENTRY(__ieee754_expf)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0090
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP0090
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(__ieee754_exp)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0098
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP0098
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

ENTRY(expm1f)
#ifdef __SVR4_ABI__
	jbra L060FPLSP00a8
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP00a8
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(expm1)
#ifdef __SVR4_ABI__
	jbra L060FPLSP00b0
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP00b0
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

ENTRY(__ieee754_log10f)
#ifdef __SVR4_ABI__
	jbra L060FPLSP00f0
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP00f0
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(__ieee754_log10)
#ifdef __SVR4_ABI__
	jbra L060FPLSP00f8
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP00f8
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

ENTRY(logbf)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0108
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP0108
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(logb)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0110
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP0110
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

ENTRY(__ieee754_logf)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0120
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP0120
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(__ieee754_log)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0128
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP0128
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

ENTRY(log1pf)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0138
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP0138
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(log1p)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0140
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP0140
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

ENTRY(sinf)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0198
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP0198
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(sin)
#ifdef __SVR4_ABI__
	jbra L060FPLSP01a0
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP01a0
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

ENTRY(__ieee754_sinhf)
#ifdef __SVR4_ABI__
	jbra L060FPLSP01c8
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP01c8
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(__ieee754_sinh)
#ifdef __SVR4_ABI__
	jbra L060FPLSP01d0
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP01d0
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

ENTRY(tanf)
#ifdef __SVR4_ABI__
	jbra L060FPLSP01e0
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP01e0
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(tan)
#ifdef __SVR4_ABI__
	jbra L060FPLSP01e8
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP01e8
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

ENTRY(tanhf)
#ifdef __SVR4_ABI__
	jbra L060FPLSP01f8
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP01f8
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(tanh)
#ifdef __SVR4_ABI__
	jbra L060FPLSP0200
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP0200
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

ENTRY(__ieee754_sqrtf)
#ifdef __SVR4_ABI__
	jbra L060FPLSP02e8
#else
	movel %sp@(4),%sp@-
	jbsr L060FPLSP02e8
	fmoves %fp0,%sp@
	movel %sp@+,%d0
	rts
#endif

ENTRY(__ieee754_sqrt)
#ifdef __SVR4_ABI__
	jbra L060FPLSP02f0
#else
	movel %sp@(8),%sp@-
	movel %sp@(8),%sp@-
	jbsr L060FPLSP02f0
	fmoved %fp0,%sp@
	movel %sp@+,%d0
	movel %sp@+,%d1
	rts
#endif

L060FPLSP_BASE:
#include "fplsp.hex"
