.\" $NetBSD: mbrtowc.3,v 1.3.2.2 2002/03/22 20:42:16 nathanw Exp $
.\"
.\" Copyright (c)2002 Citrus Project,
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd February 4, 2002
.Dt MBRTOWC 3
.Os
.\" ----------------------------------------------------------------------
.Sh NAME
.Nm mbrtowc
.Nd converts a multibyte character to a wide character (restartable)
.\" ----------------------------------------------------------------------
.Sh LIBRARY
.Lb libc
.\" ----------------------------------------------------------------------
.Sh SYNOPSIS
.Fd #include \*[Lt]wchar.h\*[Gt]
.Ft size_t
.Fn mbrtowc "wchar_t * restrict pwc" "const char * restrict s" "size_t n" \
"mbstate_t * restrict ps"
.\" ----------------------------------------------------------------------
.Sh DESCRIPTION
The
.Fn mbrtowc
usually converts the multibyte character pointed by
.Fa s
to the wide character, and store the wide character
to the wchar_t object pointed by
.Fa pwc
if
.Fa pwc
is non-null and
.Fa s
points a valid character.
The conversion is taken place
with conforming to and changing the conversion state
described in the mbstate_t object pointed by
.Fa ps .
This function may examine at most
.Fa n
bytes of the array beginning from
.Fa s .
.Pp
If
.Fa s
points a valid character and the character corresponds to a null wide
character, then the
.Fn mbrtowc
places the mbstate_t object pointed by
.Fa ps
to an initial conversion state.
.Pp
Unlike
.Xr mbtowc 3 ,
the
.Fn mbrtowc
may accept the byte sequence pointed by
.Fa s
not forming complete multibyte character
but being possible for a part of a valid character.
In this case, this function will accept the all of such bytes
and save them into the conversion state object pointed by
.Fa ps .
They will be used at the subsequent call of this function to restart
the conversion suspended.
.Pp
The behaviour of the
.Fn mbrtowc
is affected by LC_CTYPE category of the current locale.
.Pp
There are the special cases:
.Bl -tag -width 012345678901
.It "s == NULL"
The
.Fn mbrtowc
sets the conversion state object pointed by
.Fa ps
to an initial state and always return 0.
Unlike
.Xr mbtowc 3 ,
the value returned does not indicate whether the current encoding of
the locale is state-dependent.
.Pp
In this case,
The
.Fn mbrtowc
ignores
.Fa pwc
and
.Fa n ,
and is equivalent to the following call:
.Pp
.Bd -literal
mbrtowc(NULL, "", 1, ps);
.Ed
.It "pwc == NULL"
The conversion from a multibyte character to a wide character is
taken place and the conversion state may be affected, but the result
wide character is discarded.
.It "ps == NULL"
The
.Fn mbrtowc
uses its own internal state object to keep the conversion state,
instead of
.Fa ps
mentioned in this manual page.
.Pp
Calling any other functions in the
.Lb libc
never change the internal
state of the
.Fn mbrtowc ,
that is initialized at startup time of the program.
.El
.\" ----------------------------------------------------------------------
.Sh RETURN VALUES
In the usual cases, the
.Fn mbrtowc
returns:
.Bl -tag -width 012345678901
.It 0
The next bytes pointed by
.Fa s
forms a null character.
.It positive
If
.Fa s
is points an valid character,
the
.Fn mbrtowc
returns the number of bytes consisting the character.
.It (size_t)-2
.Fa s
points the byte sequence which is possible to consist a part of valid
multibyte character but incomplete.
When
.Fa n
is at least MB_CUR_MAX,
this case can only occur if the array pointed
.Fa s
contains redundant shift sequence.
.It (size_t)-1
.Fa s
points a illegal byte sequence which does not form a valid multibyte
character.
In this case, the
.Fn mbrtowc
sets errno to indicate the error.
.El
.\" ----------------------------------------------------------------------
.Sh ERRORS
The
.Fn mbrtowc
may causes an error in the following case:
.Bl -tag -width Er
.It Bq Er EILSEQ
.Fa s
points an invalid or incomplete multibyte character.
.It Bq Er EINVAL
.Fa ps
points an invalid or uninitialized mbstate_t object.
.El
.\" ----------------------------------------------------------------------
.Sh SEE ALSO
.Xr mbrlen 3 ,
.Xr mbtowc 3 ,
.Xr setlocale 3
.\" ----------------------------------------------------------------------
.Sh STANDARDS
The
.Fn mbrtowc
function conforms to
.St -isoC-amd1 .
The restrict qualifier is added at
.St -isoC99 .
