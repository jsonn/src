.\"	$NetBSD: directory.3,v 1.26.28.1 2009/01/04 17:02:19 christos Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)directory.3	8.1 (Berkeley) 6/4/93
.\"
.Dd December 5, 2008
.Dt DIRECTORY 3
.Os
.Sh NAME
.Nm fdopendir ,
.Nm opendir ,
.Nm readdir ,
.Nm readdir_r ,
.Nm telldir ,
.Nm seekdir ,
.Nm rewinddir ,
.Nm closedir ,
.Nm dirfd
.Nd directory operations
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In dirent.h
.Ft DIR *
.Fn fdopendir "int fd"
.Ft DIR *
.Fn opendir "const char *filename"
.Ft struct dirent *
.Fn readdir "DIR *dirp"
.Ft int
.Fn readdir_r "DIR * restrict dirp" "struct dirent * restrict entry" "struct dirent ** restrict result"
.Ft long
.Fn telldir "DIR *dirp"
.Ft void
.Fn seekdir "DIR *dirp" "long  loc"
.Ft void
.Fn rewinddir "DIR *dirp"
.Ft int
.Fn closedir "DIR *dirp"
.Ft int
.Fn dirfd "DIR *dirp"
.Sh DESCRIPTION
The
.Fn opendir
function opens the directory named by
.Fa filename
and associates a
.Em directory stream
with it.
.Pp
The
.Fn fdopendir
function associates a
.Em directory stream
with the directory file descriptor
.Fa fd .
The file descriptor
.Fa fd
must not be used further by the caller in any way.
.Pp
Both functions return a pointer to be used to identify the
.Em directory stream
in subsequent operations.
The pointer
.Dv NULL
is returned if
.Fa filename
cannot be accessed, or if it cannot
.Xr malloc 3
enough memory to hold the whole thing.
.Pp
The
.Fn readdir
function
returns a pointer to the next directory entry.
It returns
.Dv NULL
upon reaching the end of the directory or detecting an invalid
.Fn seekdir
operation.
.Pp
The
.Fn readdir_r
function
provides the same functionality as
.Fn readdir ,
but the caller must provide a directory
.Fa entry
buffer to store the results in.
If the read succeeds,
.Fa result
is pointed at the
.Fa entry ;
upon reaching the end of the directory
.Fa result
is set to
.Dv NULL .
The
.Fn readdir_r
function
returns 0 on success or an error number to indicate failure.
.Pp
The
.Fn telldir
function
returns the current location associated with the named
.Em directory stream .
.Pp
The
.Fn seekdir
function
sets the position of the next
.Fn readdir
operation on the
.Em directory stream .
The new position reverts to the one associated with the
.Em directory stream
when the
.Fn telldir
operation was performed.
Values returned by
.Fn telldir
are good only for the lifetime of the
.Dv DIR
pointer,
.Fa dirp ,
from which they are derived.
If the directory is closed and then reopened, the
.Fn telldir
value cannot be re-used.
.Pp
The
.Fn rewinddir
function
resets the position of the named
.Em directory stream
to the beginning of the directory.
.Pp
The
.Fn closedir
function
closes the named
.Em directory stream
and frees the structure associated with the
.Fa dirp
pointer,
returning 0 on success.
On failure, \-1 is returned and the global variable
.Va errno
is set to indicate the error.
.Pp
The
.Fn dirfd
function
returns the integer file descriptor associated with the named
.Em directory stream ,
see
.Xr open 2 .
.Sh EXAMPLES
Sample code which searches a directory for entry
.Dq name
is:
.Bd -literal -offset indent
len = strlen(name);
dirp = opendir(".");
if (dirp != NULL) {
	while ((dp = readdir(dirp)) != NULL)
		if (dp-\*[Gt]d_namlen == len \*[Am]\*[Am]
		    !strcmp(dp-\*[Gt]d_name, name)) {
			(void)closedir(dirp);
			return (FOUND);
		}
	(void)closedir(dirp);
}
return (NOT_FOUND);
.Ed
.Sh SEE ALSO
.Xr close 2 ,
.Xr lseek 2 ,
.Xr open 2 ,
.Xr read 2 ,
.Xr dir 5
.Sh STANDARDS
The
.Fn opendir ,
.Fn readdir ,
.Fn rewinddir
and
.Fn closedir
functions conform to
.St -p1003.1-90 .
.Sh HISTORY
The
.Fn opendir ,
.Fn readdir ,
.Fn telldir ,
.Fn seekdir ,
.Fn rewinddir ,
.Fn closedir ,
and
.Fn dirfd
functions appeared in
.Bx 4.2 .
