.\"	$NetBSD: puffs_cc.3,v 1.6.4.1 2007/11/06 23:11:53 matt Exp $
.\"
.\" Copyright (c) 2007 Antti Kantee.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd October 21, 2007
.Dt PUFFS_CC 3
.Os
.Sh NAME
.Nm puffs_cc
.Nd puffs continuation routines
.Sh LIBRARY
.Lb libpuffs
.Sh SYNOPSIS
.In puffs.h
.Ft struct puffs_usermount *
.Fn puffs_cc_getusermount "struct puffs_cc *pcc"
.Ft void *
.Fn puffs_cc_getspecific "struct puffs_cc *pcc"
.Ft void
.Fn puffs_cc_yield "struct puffs_cc *pcc"
.Ft void
.Fn puffs_cc_continue "struct puffs_cc *pcc"
.Ft void
.Fn puffs_cc_schedule "struct puffs_cc *pcc"
.Ft int
.Fn puffs_docc "struct puffs_cc *pcc" "struct puffs_putreq *ppr"
.Sh DESCRIPTION
.Em IMPORTANT NOTE!
This document describes interfaces which are not yet guaranteed to be
stable.
In case you update your system sources, please recompile everything
and fix complation errors.
If your sources are out-of-sync, incorrect operation may result.
The interfaces in this document will most likely be hugely simplified
in later versions or made transparent to the implementation.
.Pp
These functions enable the use of continuations within the framework.
Every operation callback within a file system implementation is
automatically passed an opaque cookie,
.Va pcc ,
to be used as a continuation handle.
.Pp
File systems using continuations should define their own event loop
instead of using
.Fn puffs_mainloop .
.Pp
.Bl -tag -width xxxx
.It Fn puffs_cc_getusermount "pcc"
Returns a pointer to the file system structure
.Va struct puffs_usermount
the context is associated with.
.It Fn puffs_cc_getspecific "pcc"
Returns a pointer to file system private data.
This is shorthand for
calling
.Fn puffs_getspecific
with the result from
.Fn puffs_cc_getusermount .
.It Fn puffs_cc_yield "pcc"
Suspend and save the current execution context and return control
to the previous point.
In practice, from the file system author perspective, control returns
back to where either
.Fn puffs_req_handle
or
.Fn puffs_docc
was called.
.It Fn puffs_cc_continue pcc
Will suspend current execution and return control to where it was
before before calling
.Fn puffs_cc_yield .
This is rarely called directly.
.It Fn puffs_cc_schedule "pcc"
Schedule a continuation.
As opposed to
.Fn puffs_cc_continue
this call returns immediately.
.Fa pcc
will be scheduled sometime in the future.
.It Fn puffs_docc "pcc" "ppr"
Continues request suspended with
.Fn puffs_cc_yield .
If the request completes without yielding again, the result can be
found from
.Fa ppr .
.El
.Pp
Before calling
.Fn puffs_cc_yield
a file system will typically want to record some cookie value into its
own internal bookkeeping.
This cookie should be hooked to the
.Va pcc
so that the correct continuation can be continued when the event it
was waiting for triggers.
.Pp
The puffs ssh file system is supposed to be the canonical example
for the use of the continuation framework.
.Sh SEE ALSO
.Xr puffs 3 ,
.Xr puffs_framebuf 3 ,
.Xr puffs_req 3 ,
.Xr mount_psshfs 8
