.\"	$NetBSD: lfs_cleanerd.8,v 1.6.10.1 2000/09/14 18:53:19 perseant Exp $
.\"
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	from: @(#)lfs_cleanerd.8	8.2 (Berkeley) 12/11/93
.\"
.Dd December 11, 1993
.Dt LFS_CLEANERD 8
.Os
.Sh NAME
.Nm lfs_cleanerd
.Nd garbage collect a log-structured file system
.Sh SYNOPSIS
.Nm
.Op Fl bdfmqs
.Op Fl l Ar load-threshhold
.Op Fl n Ar number-of-segments
.Op Fl r Ar report-frequency
.Op Fl t Ar timeout
.Pa node
.Sh DESCRIPTION
The
.Nm
command starts a daemon process which garbage-collects
the log-structured file system residing at the point named by
.Ar node
in the global file system namespace.
This command is normally executed by
.Xr mount_lfs 8
when the log-structured file system is mounted.
The daemon will exit within a few minutes
of when the file system it was cleaning is unmounted.
.Pp
Garbage collection on a log-structured file system is done by scanning
the file system's segments for active, i.e. referenced, data and copying
it to new segments.
When all of the active data in a given segment has been copied to a new
segment that segment can be marked as empty, thus reclaiming the space
taken by the inactive data which was in it.
.Pp
The following options are available:
.Bl -tag -width indent
.It Fl b
Use bytes written, rather than segments read, when determining how many
segments to clean at once.
.It Fl d
Run in debug mode.
Do not become a daemon process, and print debugging information.  More
.Fl d
s give more detailed debugging information.
.It Fl f
Use filesystem idle time as the criterion for aggressive cleaning,
instead of system load.
.It Fl l Ar load-threshhold
Clean more aggressively when the system load is below the given
threshhold.  The default threshhold is 0.2.
.It Fl m
Use mmap, rather than rereading the Ifile to update the cleaner's
knowledge of the filesystem.  Do not use this option.
.It Fl n Ar number-of-segments
Clean this number of segments at a time: that is, pass this many
segments' blocks through a single call to lfs_markv, or, if
.Fl b
was also given, pass this many segments' worth of blocks through a
single call to lfs_markv.
.It Fl q
Quit after cleaning once.
.It Fl r Ar report-frequency
Give an efficiency report after every 
.Ar report-frequency
times through the main loop.
.It Fl s
When cleaning the file system, send only a few blocks through lfs_markv
at a time.  Don't use this option.
.It Fl t Ar timeout
Poll the filesystem every
.Ar timeout
seconds, looking for opportunities to clean.  The default is 300, that
is, five minutes.  Note that
.Nm
will be automatically awakened when the filesystem is active, so it is
not usually necessary to set
.Ar timeout
to a low value.
.El
.Sh SEE ALSO
.Xr mount_lfs 8
.Xr lfs_bmapv 2
.Xr lfs_markv 2
.Xr lfs_segwait 2
.Sh HISTORY
The
.Nm
utility first appeared in
.Bx 4.4 .
