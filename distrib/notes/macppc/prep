.\"	$NetBSD: prep,v 1.2.8.4 2000/11/04 05:19:25 lukem Exp $
.
.Ss2 Open Firmware System Preparation
.
Most \*M systems have Open Firmware bugs. Luckily, Open Firmware has a small
Non-Volatile RAM variable (NVRAM) which is reserved for FORTH commands which
will be run before booting an operating system. Apple has released a freeware
.Tn MacOS
tool called System Disk, which patches
most of these bugs. We
.Em strongly
recommend that you use this tool to patch your Open Firmware,
as several systems cannot boot without these patches.
.Pp
Download System Disk from Apple's site:
.Lk ftp://ftp.apple.com/developer/macosxserver/utilities/SystemDisk2.3.1.smi.bin
.Pp
For a brief tutorial on how to use System Disk, see:
.Lk http://www.netbsd.org/Ports/macppc/SystemDisk-tutorial/
.Pp
Make sure you click the
.Dq Save
button, or the patches will not be saved to NVRAM.
.(Note
NVRAM patches and Open Firmware settings will be erased if you
.Sq zap your PRAM
by holding down
.Key COMMAND-OPTION-P-R
keys during the boot chimes
.Note)
.Pp
.
.Ss2 Updating your firmware
.
Open Firmware 3 systems have a rewritable firmware. Go to the
.Sq Apple Software Updates
web site at
.Lk http://asu.info.apple.com/
and search for
.Sq firmware
and install the most recent version for your model.
.
.Ss2 Getting to the Open Firmware Prompt
.
There are various methods to get to the Open Firmware prompt. They may
or may not work, depending on which system model you have.  Most models
can use the on-board video and an ADB or USB keyboard to access Open
Firmware.  Those that cannot must use a serial console.  Likewise, most
systems can be set up to use a serial console if you do not wish to use
the on-board video.
.Pp
Open Firmware has two variables,
.Sq input-device
and
.Sq output-device No Ns ,
which specify which devices to use for input and output.  Most early models
(Open Firmware versions 1.x and 2.0.x) will default to using a serial
console.  The later models (Open Firmware versions 2.4 and 3) will default
to using the on-board video and keyboard.  The instructions below describe
how to set your system up to access Open Firmware from the on-board video 
and keyboard.
.Pp
If, for some reason, you need to use a serial console, you can use a
normal 
.Sq printer
cable (mini-DIN 8 to mini-DIN 8) and a 
.Tn MacOS
tool, such as ZTerm to
connect a 
.Tn MacOS
system to your
.Nx*M
system.
.Lk http://hyperarchive.lcs.mit.edu/HyperArchive/Archive/comm/term/zterm-101.hqx
.
.Ss2 Getting to the Open Firmware Prompt (Easy method using MacOS)
.
Launch the
.Tn MacOS
System Disk tool. Click on
.Dq "Power User (Open Firmware)"
then click on the
.Dq "Advanced Options"
button. Now, click on the checkbox that says
.Dq "Stop Boot at Open Firmware prompt"
and select
.Dq OK .
Click the
.Dq Save
button and reboot your system.
.Pp
If your
.Sq output-device
is
.Sq Li /chaos/control
(i.e. you have a PowerMacintosh 7300 - 8600 system), there is a chance that
your monitor will not sync. See
.Lk http://www.netbsd.org/Ports/macppc/SystemDisk-tutorial/of105patch.html
.Pp
You should now see the Open Firmware command prompt:
.Pp
.Dl 0 >
.Pp
If your screen is black, then your model does not support using the 
on-board video in
Open Firmware. You will need to connect up a serial console
(38400 bps, 8 bits, no parity, 1 stop bit, no handshaking).
.(Note
The
.Dq Stop Boot at Open Firmware prompt
setting is persistent.  Your system will always stop at the Open Firmware
prompt unless you uncheck this checkbox or tell Open Firmware
.Pp
.Dl 0 > Ic "setenv auto-boot? true
.Note)
.(Note
Unfortunately, there are a few models that are better off without the System
Disk patches.  If you find that your machine doesn't boot, then try:
.Pp
.Dl 0 > Ic "setenv use-nvramrc? false"
.Dl 0 > Ic "reset-all"
.Note)
.
.Ss2 Getting to the Open Firmware Prompt (Harder method using MacOS)
.
If System Disk doesn't work because your version of
.Tn MacOS
is too old or because
System Disk says that it doesn't support your model, then you may try using
the 
.Tn MacOS
BootVars tool on your Open Firmware 1 or 2 system (it will crash 
Open Firmware 3 systems).
.Pp
.Lk ftp://ftp.netbsd.org/pub/NetBSD/arch/macppc/macos-utils/bootvars/bootvars.sit.hqx
.(Note
BootVars does
.Em not
apply the (possibly critical) NVRAM patches that System Disk does.
Expect devices to not work.
.Note)
.Pp
Look up the proper
.Sq output-device
for your model on the
.Nx*M
Model Support webpage.
.Lk http://www.netbsd.org/Ports/macppc/models.html
If the 
.Nx*M
Model support webpage does not list an 
.Sq output-device
for your model, then your system will default to using the on-board
video.  You needn't fill in the
.Sq output-device
and
.Sq input-device
variables.
.Pp
Launch the
.Tn MacOS
BootVars tool.  Click on the
.Dq auto-boot?
checkbox, then click on the
.Dq All Variables
checkbox and type
.Ic kbd
into the
.Sq input-device
box, and the proper device name into the
.Sq output-device
box. 
Click on the
.Dq write
button, and restart.
.Pp
If your
.Sq output-device
is
.Sq Li /chaos/control
(i.e. you have a PowerMacintosh 7300 - 8600 system), there is a chance that
your monitor will not sync. See
.Lk http://www.netbsd.org/Ports/macppc/SystemDisk-tutorial/of105patch.html
.Pp
You should now see the Open Firmware command prompt:
.Pp
.Dl 0 >
.Pp
If your screen is black, then your model has defaulted to using a serial 
console.  This is fairly common on Open Firmware 1 and 2 models if you do not
use the System Disk tool to set up Open Firmware. You must hook up a serial
console (38400 bps, 8 bits, no parity, 1 stop bit, no handshaking).
.(Note
The
.Dq auto-boot?
setting is persistent.  Your system will always stop at the Open Firmware
prompt unless you uncheck this checkbox or tell Open Firmware
.Pp
.Dl 0 > Ic "setenv auto-boot? true
.Note)
.
.Ss2 Getting to the Open Firmware Prompt (Without using MacOS)
.
If you don't have
.Tn MacOS ,
then you need to hold down a special key combination when your system boots.
.(Note
Your Open Firmware 1 or 2 system will
.Em not
have the (possibly critical) NVRAM patches that System Disk applies.
Expect devices to not work.
.Note)
.Pp
After the chime starts, but before it stops, hold down the
.Key COMMAND-OPTION-O-F
keys (the
.Key COMMAND
key looks like a four-leaf clover or an open apple, and the
.Key OPTION
key may look like a two-way switch with four straight line segments).
.Pp
You should now see the Open Firmware command prompt:
.Pp
.Dl 0 >
.Pp
If your screen is black, then your system has defaulted to using a serial
console. This is fairly common on Open Firmware 1 and 2 models if you do
not use the System
Disk tool to set up Open Firmware. You must hook up a serial console
(38400 bps, 8 bits, no parity, 1 stop bit, no handshaking).
.Pp
The Apple Network Server uses
.Sq Port 2
(the
.Sq Li ttya
device in Open Firmware) as the console port.
.Pp
Now, set your system to always stop at the Open Firmware prompt.
.Pp
.Dl 0 > Ic "setenv auto-boot? false
.Pp
To allow Open Firmware to automatically boot the specified operating
system when the system is booted, type:
.Pp
.Dl 0 > Ic "setenv auto-boot? true
.Pp
To use your on-board video and keyboard, look up the proper
.Sq output-device
for your model on the
.Nx*M
webpage
.Lk http://www.netbsd.org/Ports/macppc/models.html
Run the following commands to use your screen instead of
a serial console
(replace
.Sq Li screen
with the correct
.Sq output-device
for your model):
.Pp
.Dl 0 > Ic "setenv output-device screen"
.Dl 0 > Ic "setenv input-device kbd"
.Dl 0 > Ic "reset-all"
.Pp
Now you should see the Open Firmware prompt on your screen.
.Pp
If your
.Sq output-device
is
.Sq Li /chaos/control
(i.e. you have a PowerMacintosh 7300 - 8600 system), there is a chance that
your monitor will not sync. See
.Lk http://www.netbsd.org/Ports/macppc/SystemDisk-tutorial/of105patch.html
.
.Ss2 Setting Open Firmware up to boot NetBSD
.
Check your Open Firmware version; you will need to know this in order
to make decisions further on:
.Pp
.Dl 0 > Ic "dev /openprom"
.Dl 0 > Ic ".properties"
.Pp
If your system has Open Firmware prior to version 3, then you must set
some Open Firmware variables before
.Nx
can boot.  Do
.Em not
run these commands on Open Firmware 3 machines, as you may overwrite your
firmware requiring a trip to Apple for repairs.
.Pp
.Dl 0 > Ic "setenv load-base 600000"
.Dl 0 > Ic "setenv real-base F00000"
.Dl 0 > Ic "reset-all"
.Pp
The last command reboots your machine so that the
.Li real-base
setting takes effect.
.Pp
If you will be netbooting your system, you can look up your MAC address.
.Pp
.Dl 0 > Ic "dev enet .properties"
.Dl "[...]"
.Dl "local-mac-address   CCCCCCCC CCCC"
.Dl "[...]"
.(Note
Some early Open Firmware 1.0.5 machines had their MAC address stored
incorrectly on the motherboard (little- vs. big-endian problems).
The patches the System Disk installs will correct this.
Without the patch, the machine will still work, but its MAC address
may conflict with another ethernet device on your network.
.Note)
.(Note
Some Open Firmware 3 machines have their MAC address stored incorrectly
(little- vs. big-endian problem). If you look up your MAC address in
.Tn MacOS ,
it will be different than what Open Firmware 3 uses to contact your netboot
server. Your machine will still work, but its MAC address may conflict with
another ethernet device on your network.
.Note)
.Pp
For future reference, when you want to boot into
.Tn MacOS ,
type:
.(bullet -offset indent
Open Firmware 1, Open Firmware 2
.Pp
.Dl 0 > Ic bye
.It
Open Firmware 3
.Pp
.Dl 0 > Ic mac-boot
.bullet)
.(Note
Open Firmware 1.0.5 settings and nvram patches will be erased if you boot into
.Tn MacOS .
You will need to re-enter them before booting
.Nx
again.
.Note)
.Pp
.(Note
Open Firmware 2.x systems will set the
.Li real-base
environment variable to its default value (which doesn't work) if you boot
into 
.Tn MacOS .
.Note)
.
.
.Ss2 Available Boot Media
.
Each version of Open Firmware is capable of booting from a variety of
media.  To boot the
.Nx
kernel, Open Firmware must first open a
.Sq bootloader
which knows how to load the
.Nx
kernel.  There are two approaches, the 
.Pa ofwboot.xcf
bootloader and the
.Sq partition zero
bootloader.  In the former case, the user tells Open Firmware to
load
.Pa ofwboot.xcf
and it will load the kernel.  In the latter case, the user tells Open
Firmware to boot from a particular device, and a primary bootloader
.Pa bootxx
is loaded, which then loads the secondary bootloader
.Pa ofwboot
which then loads the kernel.
.Pp
Open Firmware 3 systems can load the kernel without the use of a
bootloader, although, some kernels do not
.Dq just work ,
and you will need to load the bootloader to load the kernel.
Feel free to experiment and load the kernel with the command you use to load
the bootloader, bypassing a step, however we recommend using a bootloader.
.Pp
The following bootable media are available for loading the bootloader
.Pq Pa ofwboot No or Pa ofwboot.xcf :
.(bullet -offset indent
.
.Em "Partition zero"
.br
(Open Firmware 1.x, Open Firmware 2.x)
.Pp
This method loads a primary bootloader called
.Pa bootxx
which then loads the secondary bootloader
.Pa ofwboot
(functionally identical to
.Pa ofwboot.xcf
(q.v.))
which then loads the kernel.
This is the method used by the boot floppies, and when you're
installing
.Nx
on the entire disk.
Unfortunately, it appears that the Open Firmare 2.4 floppy disk driver
is broken.
.
.It
.Em "Partition zero"
.br
(Open Firmware 3)
.Pp
While Open Firmware 3 supports this boot method, 
.Nx*M
does not yet support it on these systems.
.Pp
.It
.Em "HFS or HFS+ file system"
.br
(Open Firmware 2.4, Open Firmware 3)
.Pp
Whilst you can load
.Pa ofwboot.xcf
from an HFS or HFS+ partition, you will not be able to load the kernel
from HFS or HFS+ filesystems. This will be resolved in a future release of
.Nx*M
.
.It
.Em "MS-DOS file system"
.br
(All Open Firmware versions)
.Pp
This cannot be used, as neither the
.Pa ofwboot.xcf
bootloader nor the kernel can read files directly from a
.Tn MS-DOS
file system.
.
.It
.Em "Ethernet (network boot)"
.br
(All Open Firmware versions)
.Pp
You can run your entire system diskless or netboot only the files necessary
to boot (i.e. the bootloader and the installation kernel),
but you must have root access on another
.Ux
machine on your subnet.
.(Note
Some Open Firmware 1.0.5 machines do not retrieve the BOOTP information
correctly. These machines cannot netboot.
.Note)
.
.It
.Em "ISO9660 CD-ROM file system"
.br
(Open Firmware 1.x, Open Firmware 2.x)
.Pp
Load the
.Pa ofwboot.xcf
bootloader from an ISO 9660 CD-ROM.  It can then load a
.Nx
kernel from the ISO 9660 CD-ROM.
.Pp
Open Firmware 1.0.5 and 2.0.x machines will
.Em not
boot from the ISO 9660 file system if you create a hybrid HFS/ISO
format CD-R. Make sure that it the CD
.Em only
has ISO 9660 data and does not have an Apple Partition Map.
.(Note
Open Firmware can only open files on the first session of a multi-session
CD-R
.Note)
.
.It
.Em "Hybrid HFS/ISO 9660 CD-ROM file system"
.br
(Open Firmware 2.4, Open Firmware 3)
.Pp
Load the
.Pa ofwboot.xcf
bootloader from the CD-ROM's HFS filesystem.  It can then load a
.Nx
kernel from the ISO 9660 filesystem.
.Pp
Make sure that the CD has an Apple Partition Map.
.(Note
Open Firmware can only open files on the first session of a multi-session
CD-R
.Note)
.bullet)
.Pp
Once
.Pa ofwboot
or
.Pa ofwboot.xcf
is loaded, it can open the kernel from one of the following sources:
.(bullet -offset indent
.
.Em "Ethernet (NFS)"
.
.It
.Em "NetBSD FFS file system"
.Pp
This is not available the first time you install
.Nx
on your system.
.
.It
.Em "ISO 9660 CD-ROM file system"
.bullet)
.Pp
The boot floppy image provided with the distribution sets has a
.Sq partition zero
bootloader and a
.Nx
file system with an installation kernel.
.
.Ss2 Installation techniques
.
Run the installer to place
.Nx
on a hard drive on your \*M system.
.Pp
If you will be running your system diskless (i.e. entirely over NFS, not
using any local hard drives), then you do not need to run the installer
although you may still do so.
.Pp
.(Note
Some
.Tn MacOS
.Ic ftp
clients default to downloading files in 
.Sq ASCII
mode.  This will render the
.Nx
files useless.  Make sure to set your ftp program to download in
.Sq binary
mode.
.Note)
.Pp
Here are some common techniques for booting the
.Nx
install kernel:
.Pp
.(bullet
.
.Em "Boot off a floppy"
.br
(Open Firmware 1.x, Open Firmware 2.0.x)
.Pp
Use some tool to write the boot floppy image 
.Pa installation/boot.fs
to a floppy disk, and boot
from that.
The primary bootloader (in
.Sq "partition zero" )
will load
.Pa ofwboot
which will load the installation kernel.
.Pp
.(bullet -compact
.Em From a UNIX machine
.Pp
.Dl # Ic "dd if=boot.fs of=/dev/rfd0a bs=36k"
.Pp
.It
.Em From a Windows machine
.Pp
Get either the
.Ic rawrite.exe
program from the NetBSD/i386 distribution or
.Ic rawrite32.exe
from
.Lk http://www.duskware.com/rawrite32/
.Pp
.It
.Em From a MacOS machine
.Pp
Get
.Ic suntar
from 
.Lk http://hyperarchive.lcs.mit.edu/HyperArchive/Archive/cmp/suntar-222.hqx
.(enum
Open the 
.Sq Preferences
menu and pick
.Sq Expert Mode
.Pp
.It
Open the 
.Sq Special
menu and pick
.Sq Overwrite Sectors ...
.Pp
.It
Insert a floppy disk
.Pp
.It
Hit return (i.e. start at sector number zero)
.Pp
.It
Select
.Pa boot.fs
and click
.Dq Open
.Pp
.It
Open the
.Sq File
menu and pick
.Sq Eject
.enum)
.bullet)
.
.It
.Em "Boot off an ISO 9660 CD-ROM"
.br
(Open Firmware 1.x, Open Firmware 2.x)
.Pp
Place
.Pa ofwboot.xcf
and the installation kernel at the top level of the CD.
You may also place the
.Nx \*V
distribution sets on the disk.
Have Open Firmware load
.Pa ofwboot.xcf
from the disk, and it will then load the installation kernel.
.Pp
.(bullet
.Em From a UNIX machine
.Pp
.Dl # Ic "mkhybrid -o output.iso -a -l -J -r -L /cdsources"
.Pp
See the 
.Nx 
Bootable CD-ROM HOW-TO for more detail:
.Lk http://www.netbsd.org/Documentation/bootcd.html
.Pp
.It
.Em From a MacOS machine (using Toast)
.Pp
.(enum
Open the
.Sq Format
menu and pick
.Sq ISO 9660
.Pp
.It
Click the
.Dq Data...
button and drag
.Pa installation/ofwboot.xcf
and
.Pa installation/netbsd.ram.gz
into the window
.Pp
.It
Click the
.Dq Settings
tab, open the 
.Dq Naming
popup menu, and pick
.Dq Macintosh Names
.Pp
.It
Click the 
.Dq Done
button
.Pp
.It
Click the
.Dq Write CD...
button
.enum)
.bullet)
.
.It
.Em "Boot off a hybrid HFS/ISO 9660 CD-ROM"
.br
(Open Firmware 2.4, Open Firmware 3)
.Pp
Place
.Pa ofwboot.xcf
and the installation kernel at the top level of the CD. Make sure that the
bootloader is present on the HFS partition, and the kernel is on the ISO
partition. You may also place the
.Nx \*V
distribution sets on the ISO partition. Have Open Firmware load
.Pa ofwboot.xcf
from the HFS partition, and it will load the installation kernel from the
ISO partition.
.Pp
.(bullet
.Em From a UNIX machine
.Pp
.Dl # Ic "mkhybrid -o output.iso -hfs -part -a -l -J -r -L /cdsources"
.Pp
See the 
.Nx 
Bootable CD-ROM HOW-TO for more detail:
.Lk http://www.netbsd.org/Documentation/bootcd.html
.Pp
.It
.Em From a MacOS machine (using Toast)
.Pp
.(enum
Open the
.Sq Format
menu and pick
.Sq Mac/ISO Hybrid
.Pp
.It
Open the
.Sq Utilities
menu and pick
.Sq Create Temporary Partition...
.Pp
.It
Make this temporary partition large enough for all of the files you will
be placing on the HFS portion of the CD (only 
.Pa ofwboot.xcf
is necessary).
.Pp
.It
Copy
.Pa installation/ofwboot.xcf
to the temporary partition
.Pp
.It
Click the
.Dq Data...
button and select the temporary partition you just created
.Pp
.It
Click the
.Dq ISO...
button and drag
.Pa installation/netbsd.ram.gz
into the window
.Pp
.It
Click the
.Dq Settings
tab, open the 
.Dq Naming
popup menu, and pick
.Dq Macintosh Names
.Pp
.It
Click the 
.Dq Done
button
.Pp
.It
Click the
.Dq Write CD...
button
.enum)
.bullet)
.
.It
.Em "Boot off an HFS or HFS+ partition"
.br
(Open Firmware 3)
.Pp
Download the install kernel 
.Pa installation/netbsd.ram.gz
and place it at the top level of any partition.
Use a
.Tn MacOS
utility such as 
.Ic Stuffit Expander
to uncompress the kernel.
Get to the Open Firmware prompt. Boot the kernel directly (i.e. without 
the use of a bootloader) and use it to install
.Nx
on your hard drive.
.It
.Em "Boot over the ethernet"
.br
(All Open Firmware versions)
.Pp
Set up the DHCP daemon in BOOTP compatable mode, the TFTP daemon, and
the NFS daemons on your netboot server.
Tell Open Firmware to boot over ethernet, and it will send a BOOTP
request, which will tell Open Firmware what your system's IP address
is, and where its bootloader can be downloaded via TFTP.
Once Open FIrmware has downloaded the bootloader via TFTP, it will
then load the installation kernel via an NFS connection.
.Pp
Follow these instructions to configure a
.Nx
machine as your netboot server.  We will use 
.Sq Li CC:CC:CC:CC:CC:CC
as the MAC address (ethernet hardware address) of your netboot client machine
that you wish to install
.Nx
on.  We use 
.Sq Li 192.168.1.10
as the IP address of your client, and
.Sq Li client.test.net
as the name.  The server name is
.Sq Li server.test.net ,
and the path on the server to the NFS exported directory is 
.Pa /export/client/root
although you may choose to use a different path.
.Pp
Now, set up your 
.Ic dhcpd
server.  Make sure the following lines are in
.Pa /etc/dhcpd.conf :
.(disp
allow bootp;	# Allow bootp requests, thus the dhcp server
		# will act as a bootp server.

subnet 192.168.1.0 netmask 255.255.255.0 {
		# Which network interface the server will
		# listen on.  The zeros indicate which
		# range of addresses are allowed to connect.
}

group {                                
		# Set of parameters common to all clients
		# in this "group".
		#
	option broadcast-address	192.168.1.255;
	option domain-name		"test.net";
	option domain-name-servers	dns.test.net;
	option routers			router.test.net;
	option subnet-mask		255.255.255.0;

		# An individual client.
		#
	host client.test.net {
		hardware ethernet	CC:CC:CC:CC:CC:CC;
		fixed-address		192.168.1.10;

		# Name of the host (if the fixed address
		# doesn't resolve to a simple name).
		#
		option host-name	"client";

		# Name of the bootloader or kernel
		# to download via tftp.
		#
		filename		"ofwboot.xcf";

		# The path on the NFS server.
		#
		option	root-path	"/export/client/root";
	}
}
.disp)
.Pp
You will need to make sure that the
.Pa dhcpd.leases
file exists.
.Pp
.Dl # Ic "touch /var/db/dhcpd.leases"
.Pp
You will need to 
.Ic kill
the
.Ic dhcpd
and restart it to get it to re-read its configuration file.
If the server is running
.Nx 1.5 ,
you can achieve this with:
.Pp
.Dl # Ic "/etc/rc.d/dhcpd restart"
.Pp
Now, place a copy of the
.Pa installation/ofwboot.xcf
bootloader in 
.Pa /tftpboot
.Pp
.Dl # Ic "cp ofwboot.xcf /tftpboot"
.Pp
Now, you should edit
.Pa /etc/inetd.conf
and make sure that the line starting with 
.Li tftp
is uncommented.  You will need to
.Ic kill -HUP
the
.Ic inetd
process to enable tftp if this line was previously commented out.  The next
step is to set up NFS exports.  Create the directory you are exporting for
the netboot client:
.Pp
.Dl # Ic "mkdir -p /export/client/root"
.Pp
Put the following line in
.Pa /etc/exports
to enable NFS sharing:
.Pp
.Dl "/export/client/root -maproot=root client.test.net"
.Pp
If your server is currently running NFS services, you only need to 
.Ic "kill -HUP"
the
.Ic mountd
process.  Otherwise, you need to run:
.Pp
.Dl # Ic "/sbin/mountd"
.Dl # Ic "/sbin/nfsd -tun 4"
.Pp
Now, you need to place the files your netboot client will need.
As noted above in the section
.Pa Preparing your System for NetBSD Installation
you have several options when choosing a location to store the
distribution
filesets. However, the easiest way is to put the distribution
files into the exported directory for your client on the server.
.Pp
.Dl # Ic "mv *.tgz /export/client/root"
.Pp
Your client will need a kernel to boot (use 
.Pa installation/netbsd.ram.gz ) .
.Pp
.Dl # Ic "gunzip netbsd.ram.gz"
.Dl # Ic "mv netbsd.ram /export/client/root/netbsd"
.
.It
.Em "Boot the floppy image off a bootable hard drive"
.br
(Open Firmware 1.x, Open Firmware 2.x)
.Pp
Find a spare bootable drive (i.e. SCSI or IDE), and use some tool to write
the floppy disk image 
.Pa installation/boot.fs
to your spare drive, and boot from that drive.
The floppy image has a
.Sq partition zero
bootloader which ultimately loads the installation kernel from the FFS
filesystem from the disk image.
.Pp
.(bullet -compact
.Em From a UNIX machine
.Pp
.Dl # Ic "dd if=boot.fs of=/dev/rsd0c"
.Pp
where 
.Pa /dev/rsd0c
is the 
.Sq whole disk
partition for the drive you will be using.  Be certain you have typed this
correctly, as it will erase the disk.
.Pp
.It
.Em From a Windows machine
.Pp
Get
.Ic rawrite32.exe
from
.Lk http://www.duskware.com/rawrite32/
.Pp
Be certain you have selected the correct disk, as it will erase the
contents.
.Pp
.It
.Em From a MacOS machine
.Pp
Get
.Ic suntar
from 
.Lk http://hyperarchive.lcs.mit.edu/HyperArchive/Archive/cmp/suntar-222.hqx
.(enum
Open the 
.Sq Preferences
menu and pick
.Sq Expert Mode
.Pp
.It
Open the 
.Sq File
menu and pick
.Sq Open Device ...
.Pp
.It
Click on the
.Dq scan SCSI
button to get a list of which drives are attached.
.Pp
.It
Pick the correct drive.  Be certain you have selected the correct disk, as
it will erase the contents.
.Pp
.It
Open the
.Sq Special
menu and pick
.Sq Overwrite Sectors ...
.Pp
.It
Hit return (i.e. start at sector number zero)
.Pp
.It
Select
.Pa boot.fs
and click
.Dq Open
.Pp
.It
Open the
.Sq File
menu and pick
.Sq Close Device
.enum)
.bullet)
.bullet)
.
.Ss2 Partitioning the drive NetBSD will be installed on
.
You have two options.  You may use the 
.Nx
installer to partition your drive, in which case you may use a
.Sq partition zero
bootloader, but you cannot have HFS or HFS+ filesystems; or you may use a
.Tn MacOS
tool to partition your drive, in which case you cannot use a
.Sq partition zero
bootloader, but you can have HFS and HFS+ filesystems.
.Pp
If you have an Open Firmware 1.x or 2.0.x system, you must use the
.Nx
installer to partition your drive if you wish it to be bootable.  You may
partition your drive in 
.Tn MacOS
but you will have to load
.Pa ofwboot.xcf
from some other media (such as over the network, from a floppy, or from a
CD-ROM).
.Pp
If you have an Open Firmware 2.4 system, either partitioning method will
produce a bootable disk.  If you use a 
.Tn MacOS
tool, you must manually place
.Pa ofwboot.xcf
on one of your HFS or HFS+ partitions.
.Pp
If you have an Open Firmware 3 system, you must use a 
.Tn MacOS
tool to create a bootable disk.  You will need to manually place
.Pa ofwboot.xcf
on one of your HFS or HFS+ partitions.  If you use the
.Nx
installer to partition your drive, you will need to load
.Pa ofwboot.xcf
from some other media (such as over the network or from
a CD-ROM).
.Pp
Unfortunately, the partitioning tools for
.Nx
are not advanced enough to create HFS or HFS+ file systems. Therefore,
if you wish to share this drive with
.Tn MacOS ,
you will need to use the 
.Tn MacOS
Drive Setup tool (versions 1.9.1 and later are
known to work) to divide the hard drive you will be using for
.Nx
into the following partitions:
.(tag "A/UX_Rootxxx" -offset indent
.It Em HFS No or Em HFS+
Must be large enough to hold the bootloader, over 100 KB.
.It Em A/UX Root
Must be at least 20 MB. Alternatively, you may decide to use one partition for
your entire
.Nx
installation, in which case it should be at least 200 MB.
.It Em A/UX Swap
Any size. The recommenation is 1.5 times your RAM, although this is not
strictly necessary for machines with a lot of RAM.
.It Em A/UX User, A/UX Free1, A/UX Free2, A/UX Free3
Use these for any additional partitions you may want to use under
.Nx .
.tag)
