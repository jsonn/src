.\"	$NetBSD: install,v 1.2.10.2 2000/11/03 02:45:33 tv Exp $
.
.Ss2 Booting the installer
.
The syntax of the Open Firmware
.Ic boot
command is:
.Pp
.Dl boot device[:partition][,filename] [kernel_location] [-as]
.Pp
where the
.Fl a
flag will ask you for the location of the next item to load (i.e.
.Pa ofwboot.xcf
will ask where the kernel is, or the kernel will ask where the root
file system is).
The
.Fl s
flag will boot into
.Sq single-user
mode.
.Li kernel_location
is either a filename if the kernel is on the same partition as the
bootloader, or another complete
.Sq Li device:partition,filename .
And, there's no reason (other than Open Firmware bugginess) that you can't
specify an entirely different device for the kernel.
For instance, you could have a
.Tn MacOS
drive on your
.Em ultra0
(ATA) bus, and a
.Nx
drive on your
.Em ultra1
bus.
.Pp
The exact command you will be using depends on which version of Open Firmware
your machine has and which device you will be booting from. You can find out
what device aliases Open Firmware has on your machine by typing:
.Pp
.Dl 0 > Ic devalias
.Pp
To get a complete listing of what hardware is recognized by Open
Firmware, type:
.Pp
.Dl 0 > Ic dev / ls
.Pp
To determine if a device is bootable, type:
.Pp
.Dl 0 > Ic dev /path/to/device
.Dl 0 > Ic words
.Pp
If the word
.Sq open
is in the list of words, then this device might be bootable.
.Pp
SCSI disks are usually of the form:
.Pp
.Dl boot scsi_devalias/sd@i:p
.Pp
where
.Sq Li scsi_devalias
is the Open Firmware
.Sq devalias
for your SCSI interface,
.Sq Li i
is the SCSI ID, and
.Sq Li p
is the partition.
.Pp
.(bullet
.Em Floppy disk
.Pp
The floppy disk has a
.Sq partition zero
bootloader. All you need to do is:
.Pp
.Dl 0 > Ic boot fd:0
.Pp
You can eject a floppy by typing:
.Pp
.Dl 0 > Ic eject fd
.It
.Em Ethernet
.Pp
You only specify that you are booting from the ethernet:
.Pp
.(bullet -offset indent
Open Firmware 1, Open Firmware 2
.Pp
.Dl 0 > Ic "boot enet"
.It
Open Firmware 3
.Pp
.Dl 0 > Ic "boot enet:0"
.bullet)
.Pp
To make configuring your netboot server easier, you may specify the
bootloader filename and the kernel name:
.Pp
.(bullet -offset indent
Open Firmware 1, Open Firmware 2
.Pp
.Dl 0 > Ic boot "enet:,ofwboot.xcf enet:,netbsd.ram.gz"
.It
Open Firmware 3
.Pp
.Dl 0 > Ic boot "enet:0,ofwboot.xcf enet:0,netbsd.ram.gz"
.bullet)
.It
.Em CD-ROM
.Pp
Open Firmware doesn't understand long filenames (created with the RockRidge
and Joliet extensions), so you may need to figure out what your file is
called. For instance,
.Ic Toast
for
.Tn MacOS
creates CDs with long filenames, but uses
.Tn MS-DOS
style short names
as well. Instead of referencing
.Pa netbsd-GENERIC
you would need to open
.Pa NETBSD-G.ENE
.Pp
The
.Ic mkisofs
and
.Ic mkhybrid
programs have a similar problem. For them,
.Pa netbsd.ram.gz
becomes
.Pa NETBSD_RAM.GZ
.Pp
Another thing to note is that you
.Em must
use capital letters when specifying the filename to load.
Also, keep in mind what format your CD-R has to be for your version of
Open Firmware (pure ISO versus hybrid ISO/HFS) before giving up.
.Pp
Here are some examples of what you might use to boot from CD-ROM:
.Pp
.Dl 0 > Ic "boot scsi-int/sd@3:0,OFWBOOT.XCF NETBSD.RAM"
.Dl 0 > Ic "boot scsi/sd@3:0,OFWBOOT.XCF NETBSD.RAM"
.Dl 0 > Ic "boot scsi-ext/sd@3:0,OFWBOOT.XCF NETBSD.RAM"
.Dl 0 > Ic "boot ata/atapi-disk:0,OFWBOOT.XCF NETBSD.RAM"
.Dl 0 > Ic "boot ide1/disk@0:0,OFWBOOT.XCF NETBSD.RAM"
.Dl 0 > Ic "boot cd:0,OFWBOOT.XCF NETBSD.RAM"
.It
.Em IDE or SCSI drive with a
.Sq partition zero
bootloader
.br
(Open Firmware 1 and 2 only).
.Pp
You do not specify a file to load, since the
.Sq partition zero
booloader knows what to do. You would boot such a system if you have dumped
the boot floppy image to your drive, or if you have an already-installed
.Nx*M
system
.Pp
Remember, that SCSI Zip disks are usually ID 5 or 6.
Internal hard drives are usually SCSI ID 0.
.Pp
Here are some examples of what you might use to boot from such a drive:
.Pp
.Dl 0 > Ic "boot scsi-int/sd@0:0"
.Dl 0 > Ic "boot scsi/sd@0:0"
.Dl 0 > Ic "boot scsi-ext/sd@0:0"
.Dl 0 > Ic "boot ata/ata-disk@0:0"
.Dl 0 > Ic "boot ata/ATA-Disk@0:0"
.Dl 0 > Ic "boot ide0/disk@0:0"
.Dl 0 > Ic "boot zip:0"
.It
.Em IDE or SCSI drive from an HFS(+) partition
.br
(Open Firmware 2.4 and 3 only)
.Pp
.Tn MacOS
drives have several system-level
.Sq partitions reserved for
.Tn MacOS
drivers.
You may find that your first HFS(+) partition might be as high as partition 9.
You may need to keep trying higher partition numbers until you find the one
that has your bootloader.
.Pp
Also, since the bootloader is on a different partition from the
.Nx
kernel, you will need to specify where to find the kernel.
.Pp
Remember, that SCSI Zip disks are usually ID 5 or 6. Internal hard drives
are usually SCSI ID 0.
.Pp
Here are some examples of what you might use to boot from such a drive:
.Pp
.Dl 0 > Ic "boot scsi/sd@0:9,ofwboot.xcf scsi/sd@0:10,netbsd"
.Dl 0 > Ic "boot ide0/disk@0:7,ofwboot.xcf ide0/disk@0:9,ofwboot.xcf"
.Dl 0 > Ic "boot hd:8,ofwboot.xcf ultra1:3,netbsd"
.bullet)
.
.Ss2 Common Problems and Error Messages
See the
.Nx*M
FAQ for a thorough list.
.Lk http://www.netbsd.org/Ports/macppc/faq.html
.(Note
You may find it necessary to remove all non-Apple devices in your
machine.  Some users have found this necessary.
.Note)
.Pp
.(bullet
.Dq Li "DEFAULT CATCH!"
.Pp
If your machine is Open Firmware version 1.0.5 or 2.X, this error does
sometimes appear randomly. You might try the boot command a second time (this
is known to work on some models). Otherwise, if you are not using a serial
console, there might be a conflict between the screen driver and Open
Firmware which prevents Open Firmware from loading
.Pa ofwboot.xcf
There are several models that cannot be booted while
using the screen and keyboard. The only known workaround is to use a serial
console (i.e. set your input and output devices to ttya or ttyb).
.Pp
.Dl 0 > Ic "setenv output-device ttya"
.Dl 0 > Ic "setenv input-device ttya"
.Dl 0 > Ic "reset-all"
.It
.Dq Li "CLAIM failed"
.Pp
This is a general message from Open Firmware to the effect that it failed
to allocate some memory. There are several known causes for this to happen.
.Pp
This often means that the memory is messed up. If you tried something and
it failed, then you tried another and got a
.Dq Li "CLAIM failed"
message, then this is an indication that you should reboot between attempts
.Pp
If your machine is Open Firmware version 1.0.5 or 2.X, this error does
sometimes appear randomly. You might try the boot command a second time (this
is known to work on some models). Otherwise, if you are not using a serial
console, there might be a conflict between the screen driver and Open
Firmware which prevents Open Firmware from loading
.Pa ofwboot.xcf
There are several models that cannot be booted while using the screen and
keyboard. The only known workaround is to use a serial console
(i.e. set your input and output devices to ttya or ttyb).
.Pp
.Dl 0 > Ic "setenv output-device ttya"
.Dl 0 > Ic "setenv input-device ttya"
.Dl 0 > Ic "reset-all"
.It
.Dq Li "can't OPEN"
.Pp
Open Firmware either can't open the device you specified (because it is not
present or the device path is mistyped) or the file you specified. Check your
typing and check to make sure that the media has the files you think it has.
.It
.Dq Li "unrecognized Client Program formatstate not valid"
.Pp
This is a general Open Firmware error message indicating that the filename
you tried to open either doesn't exist or is in the wrong format. For
Open Firmware 1 and 2.machines, it must be an XCOFF file (such as
.Pa ofwboot.xcf )
and for Open Firmware 3 machines, it must be either XCOFF or ELF (such as
a kernel).
.It
Black screen
.Pp
You need a serial console. See the section entitled
.Sx Open Firmware 1.0.5 or 2.0.x System Preparation
.It
Grey screen with flashing question mark
.Pp
You mistyped the path to a device, and your system defaulted to
booting into
.Tn MacOS .
The flashing question mark means that the
.Tn MacOS
ROM has loaded and is looking for a bootable
.Tn MacOS
file system.
.It
.Pa ofwboot.xcf
hangs before the copyright notice and the kernel configuration
.Pp
You forgot to set
.Dq Li real-base
in Open Firmware or it got erased by your booting into
.Tn MacOS .
.Pp
.Dl 0 > "Ic setenv load-base 600000"
.Dl 0 > "Ic setenv real-base F00000"
.Dl 0 > "Ic reset-all"
.It
After the kernel loads, the first key you press repeats forever
.Pp
Press
.Key SHIFT
first.
.It
Hang after configuring devices, but before doing anything else
.Pp
Plug the USB keyboard directly into the computer (i.e. not through a hub)
.It
.Dq Li "pciide0:0:0: lost interrupt"
.Pp
See
.Lk http://www.netbsd.org/Ports/macppc/faq.html#pciide-lost-interrupt
.It
.Dq Li "Panic: mesh: FIFO != 0"
.Pp
Try unplugging your Zip drive. If that doesn't work, see
.Lk http://www.netbsd.org/Ports/macppc/faq.html#mesh-fifo
.bullet)
.
.so ../common/sysinst
.
Now, you can reboot to get to the Open Firmware prompt.  Once there, you
can set Open Firmware to always boot into 
.Nx
from the media of your choice.  First, make sure you know what command you
need to use to boot (see above).  If you are using a 
.Sq partition zero
style boot scheme, you would type something like the following:
.Pp
.Dl 0 > Ic "setenv auto-boot? true"
.Dl 0 > Ic "setenv boot-device scsi/sd@0:0"
.Dl 0 > Ic "setenv boot-file netbsd"
.Pp
replacing 
.Ic scsi/sd@0:0
with the actual device you will be booting from.  If you find that your
system tries booting before your hard drive has spun up, you may need to
also enter something like:
.Pp
.Dl 0 > Ic "setenv boot-command begin ['] boot catch 1000 ms cr again"
.Pp
If you are not using a
.Sq partition zero
style boot scheme, then you can still plug in all the information you
need:
.Pp
.Dl 0 > Ic "setenv auto-boot? true"
.Dl 0 > Ic "setenv boot-device ide0/disk@0:8,ofwboot.elf"
.Dl 0 > Ic "setenv boot-file ide0/disk@0:13,/netbsd"
.Dl 0 > Ic "setenv boot-command boot"
.Pp
