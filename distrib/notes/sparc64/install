.\"	$NetBSD: install,v 1.12.2.3 2002/07/11 18:41:51 thorpej Exp $
.\"
.\" Copyright (c) 1999-2002 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by the NetBSD
.\"        Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.
Installing
.Nx
is a relatively complex process, but if you have
this document in hand it shouldn't be too much trouble.
.Pp
There are several ways to install
.Nx
onto a disk.
The easiest way in terms of preliminary setup is to install from CDROM.
If you don't have access to a CDROM or CDROM burner, you
can use a miniroot image that can be booted off your local disk's swap
partition.
Alternatively, if your UltraSPARC is hooked up in a network
you can find a server and arrange for a diskless setup which is a convenient
way to install on a machine whose disk does not currently hold a usable
operating system (see the section
.Sx Installing NetBSD by using a diskless setup
below).
If you have problems with these, it
is possible to install NetBSD from Solaris (see the section `Installing
.Nx
using Solaris' below).
.
.Ss2 Installing NetBSD from CDROM
.
Installing from CDROM, whether it has the full distribution or just
a kernel and
.Ic sysinst
is the least painful way to install
.Nx .
Simply insert the CDROM in the drive, power up the computer, and
when you get to the
.Pp
.Dl ok
.Pp
prompt type:
.Pp
.Dl ok Ic "boot cdrom"
.Pp
If the machine starts booting automatically, hit the
.Ic L1
or
.Ic Stop
key and the
.Ic A
key on the keyboard or send a break if your console is serial port
to terminate the boot process.
.Pp
.Nx
should then boot and you will have the opportunity to use
.Ic sysinst .
.
.Ss2 Installing NetBSD by using the NetBSD miniroot
.
The miniroot is a self-contained
.Nx
file system holding all utilities
necessary to install
.Nx
on a local disk.
It is distributed as a plain
file designed to be transferred to a raw disk partition from which it can
be booted using the appropriate OpenBoot PROM command.
Usually, the miniroot will be loaded into the swap partition of a disk.
If needed, you can use any other unused partition,
but remember that the partition will then not
available during the installation process.
.Pp
Loading the miniroot onto your raw partition is simple.
On
.Nx
as well as
.Tn Solaris
you use a command like:
.Pp
.Dl # Ic "dd if=miniroot.fs of=/dev/rdsk/c0t0d0s1 bs=4k conv=sync"
.Pp
(Here,
.Li /dev/rdsk/c0t0d0s1
is assumed to be your swap partition.)
There's a potential problem here if
.Pa /dev/rdsk/c0t0d0s1
is actually in use as a swap
partition by your currently running system.
If you don't have another disk or partition to spare,
you can usually get away with running this
command anyway after first booting into single-user mode to ensure a
quiet system.
.Pp
After transferring the miniroot to disk, bring the system down by:
.Pp
.Dl # Ic halt
.Pp
Then boot the miniroot by typing the appropriate command at the OpenBoot PROM:
.Pp
.Dl ok Ic "boot disk:b netbsd -s"
.Pp
If you've loaded the miniroot onto some other disk than
.Li sd0
adapt
the boot specifier accordingly, e.g.:
.Pp
.Dl ok Ic "boot disk1:b netbsd -s"
.Pp
The monitor boot command will cause the
.Nx
kernel contained in the
miniroot image to be booted.
After the initial probe messages you'll be
asked to start the install or upgrade procedure.
Proceed to the section
.Sx Running the installation scripts
below.
.
.Ss2 Installing NetBSD by using a diskless setup
.
First, you must setup a diskless client configuration on a server.
If you are using a
.Nx
system as the boot-server, have a look at the
.Xr diskless 8
manual page for guidelines on how to proceed with this.
If the server runs another operating system, you'll have to consult
documentation that came with it.
(On
.Tn SunOS
systems,
.Xr add_client 8
is a good start.)
.Pp
Your UltraSPARC expects to be able to download a second stage bootstrap
program via TFTP after having acquired its IP address through RevARP when
instructed to boot
.Sq "over the net" .
It will look for a filename composed of the machine's IP address in
hexadecimal.
For example, a machine which has been assigned IP address
130.115.144.11, will make an TFTP request for
.Pa 8273900B .
Normally, this file is a symbolic link to an appropriate second-stage
boot program, which should be located in a place where the TFTP daemon
can find it (remember, many TFTP daemons run in a chroot'ed environment).
You can find the boot program in
.Pa /usr/mdec/ofwboot.net
in the
.Nx*M
distribution.
.(Note
The
.Pa /usr/mdec/ofwboot
does not know about netbooting.
.Note)
.Pp
After the boot program has been loaded into memory and given control by
the OpenBoot PROM, it starts locating the machine's remote root directory
through the BOOTPARAM protocol.
First a BOOTPARAM WHOAMI request is broadcast on the local net.
The answer to this request (if it comes in) contains
the client's name.
This name is used in next step, a BOOTPARAM GETFILE
request \(em sent to the server that responded to the WHOAMI request \(em
requesting the name and address of the machine that will serve the client's
root directory, as well as the path of the client's root on that server.
.Pp
Finally, this information (if it comes in) is used to issue a REMOTE MOUNT
request to the client's root file system server, asking for an NFS file
handle corresponding to the root file system.
If successful, the boot program starts reading from the remote root
file system in search of the kernel which is then read into memory.
.Pp
As noted above in the section
.Sx Preparing your System for NetBSD Installation
you have several options when choosing a location to store the installation
filesets.
However, the easiest way is to put the
.Pa *.tgz
files you want
to install into the root directory for your client on the server.
.Pp
From here there are two methods of netboot install.
The first is much simpler and is intended for clients with local disk
that will be used for installation.
The second is intended for clients that will use a network boot normally.
.Pp
If you are going to be installing onto local disk, place the
.Pa netbsd.INSTALL.gz
file, located in the
.Pa binary/kernel
directory, into the root directory for your machine.
The
.Pa netbsd.INSTALL.gz
file contains a kernel with an embedded ramdisk that has the basic
installer file system that is part of the normal miniroot.
Now you need to boot your workstation
from the server by entering the following command at the monitor prompt:
.Pp
.Dl "ok boot net netbsd.INSTALL.gz"
.Pp
And then follow the install instructions.
.Pp
If you are going to be installing to NFS, be sure to read the section
about preparing your system for installation.
If you have access to another
.Nx
machine, the
.Xr diskless 8
manual page contains information about diskless booting.
Unpack the
.Pa base.tgz
and
.Pa etc.tgz
sets on the server in the root
directory for your machine.
If you elect to use a separately NFS-mounted file system for
.Pa /usr
with your diskless setup, make sure the
.Pa ./usr
base
files in
.Pa base.tgz
end up in the correct location.
One way to do this is to temporarily use a loopback mount on the server,
re-routing
.Ar root Ns Pa /usr
to your server's exported
.Nx
.Pa /usr
directory.
.Pp
A few configuration files need to be edited:
.(tag indent
.It Ar root Ns Pa /etc/hosts
Add the IP addresses of both server and client.
.It Ar root Ns Pa /etc/myname
This files contains the client's hostname; use the same
name as in \*<root\*>/etc/hosts.
.It Ar root Ns Pa /etc/fstab
Enter the entries for the remotely mounted file systems.
For example:
.Pp
.Dl server:/export/root/client        /     nfs  rw 0 0
.Dl server:/export/exec/sun4u.netbsd  /usr  nfs  rw 0 0
.tag)
.Pp
Now you must populate the
.Pa /dev
directory for your client.
If your server runs
.Tn SunOS
4.x, you can simply change your working directory to
.Ar root Ns Pa /dev
and run the MAKEDEV script:
.Ic sh MAKEDEV all .
.Pp
On
.Tn Solaris
systems,
.Ic MAKEDEV
can also be used, but there'll be error
messages about unknown user and groups.
These errors are inconsequential for the purpose of installing
.Nx .
However, you may want to correct them
if you plan to use the diskless setup regularly.
In that case, you may re-run
.Ic MAKEDEV
on your
.Nx
machine once it has booted.
.Pp
Boot your workstation from the server by entering the following
command at the monitor prompt:
.Pp
.Dl "ok boot net netbsd -s"
.Pp
This will boot the
.Nx
kernel in single-user mode.
.Pp
If you use a diskless setup with a separately NFS-mounted
.Pa /usr
file system,
mount
.Pa /usr
by hand now:
.Pp
.Dl netbsd# Ic "mount /usr"
.Pp
.(Note
For miniroot installs, the text editor is vi.
.Note)
.Pp
When using
.Xr disklabel 8
to edit disklabels the -e switch will invoke the editor on the
label.
The -i switch will run an interactive session.
.Pp
At this point, it's worth checking the disk label and partition sizes on
the disk you want to install
.Nx
onto.
.Nx
understands
.Tn SunOS Ns No -style
disklabels, so if your disk was previously used by
.Tn SunOS
there will be
a usable label on it.
Use
.Ic "disklabel -e \*<disk\*>"
or
.Ic "disklabel -i \*<disk\*>"
(where
.Em \*<disk\*>
is the device name assigned by the
.Nx
kernel, e.g.
.Li sd0 )
to view and
modify the partition sizes.
See the section
.Sx Preparing your System for NetBSD Installation
above for suggestions about disk partition sizes.
.Pp
If you are installing on a SCSI disk that does
.Em not
have a
.Tn SunOS
or
.Nx
label on it, you may still be able to use
.Xr disklabel 8
but you'll have to create all partitions from scratch.
If your disk is listed in
.Pa /etc/disktab ,
you may use the entry (which in most cases only defines a
.Sq Li c
partition to describe the whole disk) to put an initial label on
the disk.
Then proceed with
.Ic "disklabel -e \*<disk\*>"
.Ic "disklabel -i \*<disk\*>"
to create a partition layout that suits your needs.
.(Note
Because of the built-in compatibility with
.Tn SunOS Ns No -style
labels,
.Em "Always make sure all your partitions start and end on cylinder boundaries."
.Note)
.Pp
Here follows an example of what you'll see while in the disklabel editor.
Do not touch any of the parameters except for the
.Sq Li label:
entry and
the actual partition size information at the bottom (the lines starting
with
.Sq Li a: ,
.Sq Li b: ,
...).
.Pp
The size and offset fields are given in sector units.
Be sure to make
these numbers multiples of the of the number of sectors per cylinder:
the kernel might be picky about these things, but aside from this you'll
have the least chance of wasting disk space.
Partitions on which you intend to have a mountable file system, should
be given fstype
.Li 4.2BSD .
Remember, the
.Sq Li c
partition should describe
The whole disk and typically does not require editing.
The
.Sq Li "(Cyl. x - y)"
info that appears after the hash
.Sq Li #
character is
treated as a comment and need not be filled in when altering partitions.
.(Note
The line containing
.Sq Li "8 partitions:"
is best left alone,
even if you define less than eight partitions.
If this line displays a different number and the program complains about it
(after you leave the editor), then try setting it to
.Sq Li "8 partitions:" .
.Note)
.
.Ss2 Sample disklabel screen
.(disp
netbsd# disklabel sd2
# /dev/rsd2c:
type: SCSI
disk: SCSI disk
label: Hold Your Breath
flags:
bytes/sector: 512
sectors/track: 64
tracks/cylinder: 7
sectors/cylinder: 448
cylinders: 1429
rpm: 3600
interleave: 1
trackskew: 0
cylinderskew: 0
headswitch: 0           # milliseconds
track-to-track seek: 0  # milliseconds
drivedata: 0

8 partitions:
#        size   offset    fstype [fsz bsz cpg]
  a:    50176        0    4.2BSD   0   0   0   # (Cyl.    0 - 111)
  b:    64512    50176      swap               # (Cyl.  112 - 255)
  c:   640192        0   unknown               # (Cyl.    0 - 1428)
  d:   525504   114688    4.2BSD   0   0   0   # (Cyl.  256 - 1428)
.disp)
.Pp
To begin installation or the upgrade procedure, run
.Ic sysinst :
.Pp
.Dl netbsd# Ic sysinst
.
.Ss2 Running sysinst
.
Once you have a miniroot booted, the first thing
.Nx
will ask you for is a terminal.
If you are running on the keyboard and mouse you want to select
.Ic sun
while if you are using a serial console from an X terminal you need to select
.Ic xterm
Selecting the wrong terminal settings may cause display corruption or
.Ic sysinst
may fail to run.
.Pp
.
The
.Ic sysinst
program will do most of the work of transferring the
system from the distribution sets onto your disk.
You will frequently be asked for confirmation before
.Ic sysinst
proceeds with each phase of the
installation process.
.Pp
Occasionally, you will have to provide a piece of information such as the
name of the disk you want to install on or IP addresses and domain names
you want to assign.
If your system has more than one disk, you may want
to look at the output of the
.Xr dmesg 8
command to see how your disks
have been identified by the kernel.
.Pp
The installation script goes through the following phases:
.(bullet
determination of the disk to install
.Nx
on
.It
checking of the partition information on the disk
.It
setting of the local timezone
.It
creating and mounting the
.Nx
file systems
.It
setup of IP configuration
.It
extraction of the distribution tar files
.It
installation of boot programs
.bullet)
.
.Ss2 Installing NetBSD using Solaris
.
These instructions were kindly contributed by
Murray Stokely \*<murray@osd.bsdi.com\*>
.Pp
.Ss2 Preparing the disk
The first step is to format and label the disk that you would like to
use with
.Nx .
This can be accomplished with the format command in Solaris.
The format command should allow you to create disk slices and
write a disklabel.
You will probably at least want to create a root
partition and a swap partition, plus potentially a /usr or /var partitions,
but of course you can layout the disk however you see fit.
.Pp
.Dl "partition\*> pr"
.Dl " Current partition table (original):"
.Dl " Total disk cylinders available: 8186 + 2 (reserved cylinders)"
.Dl " "
.Dl " Part      Tag   Flag   Cylinders     Size               Blocks"
.Dl "   0       root   wm     0 - 1923     1.00GB  (1924/0/0) 2097160"
.Dl "   1       swap   wu  1924 - 2863   500.29MB  (940/0/0)  1024600"
.Dl "   2     backup   wu     0 - 8185     4.25GB  (8186/0/0) 8922740"
.Dl "   3 unassigned   wm     0            0       (0/0/0)          0"
.Dl "   4        usr   wm  2864 - 8184     2.77GB  (5321/0/0) 5799890"
.Dl "   5 unassigned   wm     0            0       (0/0/0)          0"
.Dl "   6     backup   wm     0 - 8185     4.25GB  (8186/0/0) 8922740"
.Dl "   7 unassigned   wm     0            0       (0/0/0)          0"
.Pp
After your disk has been labeled you need to create file systems on
your slices.
The Solaris newfs command will create ffs file systems that can be used by
.Nx .
You should create file systems for all of
your slices except for root with a command similar to below, given we have
root on c1t2d0s0 and /usr on c1t2d0s4.
.Pp
.Dl # Ic "newfs /dev/dsk/c1t2d0s0"
.Dl # Ic "newfs /dev/dsk/c1t2d0s4"
.Pp
.Ss2 Installing NetBSD Software
You should now mount your
.Nx
root and
.Pa /usr partitions under
Solaris so that you can populate the file systems with
.Nx NetBSD
binaries.
.Pp
.Dl # Ic "mount /dev/dsk/c1t2d0s0 /mnt"
.Dl # Ic "mkdir /mnt/usr"
.Dl # Ic "mount /dev/dsk/c1t2d0s4 /mnt/usr"
.Pp
First, you should uncompress all of the binary distribution sets for
sparc64 into a temporary directory and then extract them into the
file systems you just mounted.
.Pp
.Dl # Ic "cd ~/netbsd/binary/sets"
.Dl # Ic "gunzip *.tar.gz"
.Dl # Ic "mkdir ~/netbsd/temp"
.Dl # Ic "cd ~/netbsd/temp"
.Dl # Ic "echo ~/netbsd/binary/sets/*.tar | (cd /mnt; xargs -n1 pax -rpe)"
.Pp
Now you should copy the
.Nx
kernel and second stage bootloader into
your new
.Nx
root partition and install the bootblocks using
Solaris's installboot command.
.Pp
.Dl # Ic "cp ~/netbsd/binary/kernel/netbsd.GENERIC /mnt"
.Dl # Ic "cp /mnt/netbsd.GENERIC /mnt/netbsd"
.Dl # Ic "cp ~/netbsd/installation/misc/ofwboot /mnt"
.Dl # Ic "installboot ~/netbsd/installation/misc/bootblk /dev/c1t2d0s0"
.Pp
.Ss2 Creating NetBSD Device Nodes under Solaris
Now you will need to create a minimum set of device nodes so that
.Nx
can boot correctly.
You should create all of the devices listed in the 'std' section of
.Nx 's
.Pa /dev/MAKEDEV .
You can use the Solaris
version of mknod to create device nodes but you must be careful to use
numeric group id's since the groups are numbered differently between
the two systems.
.Pp
.Dl # Ic "mknod console    c 0 0"
.Dl # Ic "mknod tty        c 2 0   ; chmod 666 tty"
.Dl # Ic "mknod kmem       c 3 1   ; chmod 640 kmem ; chgrp 2 kmem"
.Dl # Ic "mknod mem        c 3 0   ; chmod 640 mem ; chgrp 2 mem"
.Dl # Ic "mknod null       c 3 2   ; chmod 666 null"
.Dl # Ic "mknod zero       c 3 12  ; chmod 666 zero"
.Dl # Ic "mknod eeprom     c 3 11  ; chmod 640 eeprom ; chgrp 2 eeprom"
.Dl # Ic "mknod openprom   c 70 0  ; chmod 640 openprom;chgrp 2 openprom"
.Dl # Ic "mknod drum       c 7 0   ; chmod 640 drum ; chgrp 2 drum"
.Dl # Ic "mknod klog       c 16 0  ; chmod 600 klog"
.Dl # Ic "mknod stdin      c 24 0  ; chmod 666 stdin"
.Dl # Ic "mknod stdout     c 24 1  ; chmod 666 stdout"
.Dl # Ic "mknod stderr     c 24 2  ; chmod 666 stderr"
.Dl # Ic "mknod fb         c 22 0  ; chmod 666 fb"
.Dl # Ic "mknod mouse      c 13 0  ; chmod 666 mouse"
.Dl # Ic "mknod kbd        c 29 0  ; chmod 666 kbd"
.Pp
You also must create device nodes for the disk devices that you are installing
.Nx
onto, again you can use
.Nx 's
.Pa /dev/MAKEDEV
as a reference.
.Pp
.Dl # Ic "mknod sd0a       b 7 0"
.Dl # Ic "mknod sd0b       b 7 1"
.Dl # Ic "mknod sd0c       b 7 2"
.Dl # Ic "mknod sd0d       b 7 3"
.Dl # Ic "mknod sd0e       b 7 4"
.Dl # Ic "mknod sd0f       b 7 5"
.Dl # Ic "mknod sd0g       b 7 6"
.Dl # Ic "mknod sd0h       b 7 7"
.Dl # Ic "mknod sd1a       b 7 8"
.Dl # Ic "mknod sd1b       b 7 9"
.Dl # Ic "mknod sd1c       b 7 10"
.Dl # Ic "mknod sd1d       b 7 11"
.Dl # Ic "mknod sd1e       b 7 12"
.Dl # Ic "mknod sd1f       b 7 13"
.Dl # Ic "mknod sd1g       b 7 14"
.Dl # Ic "mknod sd1h       b 7 15"
.Dl # Ic "mknod rsd0a      c 17 0"
.Dl # Ic "mknod rsd0b      c 17 1"
.Dl # Ic "mknod rsd0c      c 17 2"
.Dl # Ic "mknod rsd0d      c 17 3"
.Dl # Ic "mknod rsd0e      c 17 4"
.Dl # Ic "mknod rsd0f      c 17 5"
.Dl # Ic "mknod rsd0g      c 17 6"
.Dl # Ic "mknod rsd0h      c 17 7"
.Dl # Ic "mknod rsd1a      c 17 8"
.Dl # Ic "mknod rsd1b      c 17 9"
.Dl # Ic "mknod rsd1c      c 17 10"
.Dl # Ic "mknod rsd1d      c 17 11"
.Dl # Ic "mknod rsd1e      c 17 12"
.Dl # Ic "mknod rsd1f      c 17 13"
.Dl # Ic "mknod rsd1g      c 17 14"
.Dl # Ic "mknod rsd1h      c 17 15"
.Dl # Ic "chgrp 5 *sd[0-1][a-h]"
.Dl # Ic "chmod 640 *sd[0-1][a-h]"
.Pp
For IDE disks, use 12 instead of 7 and 26 instead of 17, for
.Pa wd0a
and
.Pa rwd0a ,
etc.
.Ss2 Configuring the NetBSD system (still under Solaris)
.Pp
You will now need to configure some of the files in
.Pa /mnt/etc
to allow the system to work properly.
In particular, you will need to modify
.Pa /etc/rc.conf
or else you will only get to single user mode.
Read through the examples in
.Pa /etc/defaults/rc.conf
and override any settings in
.Pa /etc/rc.conf .
You will also need to create a
.Pa /etc/fstab
file to tell the system which slice to mount as
.Pa /usr ,
etc.
You should follow the examples in
.Pa /usr/share/examples/fstab/ .
You may also want to setup your
.Pa /etc/resolv.conf
file for name services and your
.Pa /etc/hosts file
if you are confident that you will get networking setup on your first try.
.Pp
.
.Ss Booting NetBSD for the first time
.
.Pp
Now it is time to boot
.Nx
for the first time.
Initially we'd suggest you
.Ic "boot netbsd -bs" ,
then try multiuser after that.
If you boot single-user the
.Nx
incantation to make the root file system
.Pq Pa /
writable is
.Pp
.Dl netbsd# Ic "mount -u /dev/sd0a /"
.Pp
.Em Congratulations ,
you have successfully installed
.Nx
\*V.
