.\"	$NetBSD: macros,v 1.4.8.1 2000/11/01 03:47:58 tv Exp $
.\"
.\" Copyright (c) 1999, 2000 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Ross Harvey.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by the NetBSD
.\"        Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.\"	--------------------  MACROS  --------------------
.
.
.\" Define a .CURDIR-relative include, with entertainment
.
.rn so so-real
.de so
.	tm ...reading \\$1
.	Pp
.	so-real \*[.CURDIR]/\\$1
.\"	tm ...back to INSTALL
..
.als source so
.
.\" -mdoc only has only two section levels (Sh & Ss)
.
.\" second-level subsection macro (third-level section)
.
.de Ss2
.	ie rHTML <h5><a name="\\$*">\\$*</a></h5>
.	el \{\
.		br
.		if t .ne 7P
.		Pp
.		Em "\\$*"
.		Pp
.	\}
..
.
.
.\" Standard indented literal display, with nice showmatch parens in the name.
.\" Be warned that using font change macros such as `Ic', `Em' and `Sy' inside
.\" may cause formatting problems further on; this is probably a bug in the
.\" mdoc macros...
.
.de (disp
.	Bd -literal -offset indent
..
.
.de disp)
.	Ed
..
.
.
.de br_ne
.	br
.	if t .ne \\$1
..
.
.
.
.\" Tagged lists:
.\"	(tag wid rest	Creates a tag with width wid and other args rest
.\"	tag)		End sequence
.\"
.
.de (tag
.	Bl -tag -width \\$*
..
.
.de tag)
.	El
..
.
.de (Note
.	(tag Note:
.	It Em Note:
..
.
.de Note)
.	tag)
..
.
.\" Bullet list, which swaps between bullet and hyphen at each alternate
.\" indent level.
.
.nr b_or_h 1
.
.de (bullet
.	ie \\n[b_or_h] .Bl -bullet \\$*
.	el .Bl -hyphen \\$*
.	nr b_or_h 1-\\n[b_or_h]
.	It
..
.
.de bullet)
.	El
.	nr b_or_h 1-\\n[b_or_h]
..
.
.\" Enumerated list
.\"
.
.de (enum
.	Bl -enum \\$*
.	It
..
.
.de enum)
.	El
..
.
.\" Item list
.\"
.
.de (item
.	Bl -item \\$*
.	It
..
.
.de item)
.	El
..
.
.\" Generate NetBSD/${MACHINE}, with NetBSD being done with .Nx.
.\" If there's trailing args to the macro, concatinate with no space.
.
.de Nx*M
.ie \\n[.$]>0 .Nx Ns / Ns \*M Ns \\$*
.el .Nx Ns / Ns \*M
..
.
.\" Key-cap; literal text one point size smaller
.
.de Key
.ps -1
.Li \\$*
.ps +1
..
.
.
.\" Macro for `UNIX-like', since we don't want to just use `UNIX'
.
.de Ul
.Ux -like
..
.
.\"	--------------------  MISC  --------------------
.
.\" set the unused target number registers to 0, so that we can turn on all
.\" the warnings but still do things like .if \n[amiga]:\n[alpha] \&stuff
.\" (The Makefile defines the target as 1, leaving the others undefined.)
.
.de define_all
.	while \\n[.$] \{\
.		if !r\\$1 .nr \\$1 0
.		shift
.	\}
..
.
.define_all \*[MACHINE_LIST]
.
.\" Supported CPUs:
.\"	alpha arm26 arm32 i386 m68k mips pc532 powerpc sh3 sparc sparc64 vax
.\" Define registers for MACHINE_ARCHs with multiple MACHINEs
.
.ds A \*M
.if \n[amiga]:\n[atari]:\n[hp300]:\n[luna68k]:\n[mac68k]:\n[mvme68k]:\n[news68k]:\n[next68k]:\n[sun3]:\n[x68k] .ds A m68k
.if \n[arc]:\n[cobalt]:\n[hpcmips]:\n[newsmips]:\n[pmax]:\n[sgimips] .ds A mips
.if \n[amigappc]:\n[bebox]:\n[macppc]:\n[ofppc]:\n[prep] .ds A powerpc
.if \n[evbsh3]:\n[mmeye] .ds A sh3
.if !r\*A .nr \*A 1
.
.
.\" Define _ versions, sometimes these look better as with .if r_xxx
.
.nr _\*M 1
.nr _\*A 1
.
.\" Other strings available:
.\"
.\"	\*M		${MACHINE} (e.g., `i386')
.\"	\*A		${MACHINE_ARCH} (e.g., `m68k')
.\"	\*V		Version (e.g., `1.5')
.\"	\*[.CURDIR]	${.CURDIR}
