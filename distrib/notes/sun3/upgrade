.\"	$NetBSD: upgrade,v 1.7.4.2 2000/11/04 06:44:19 lukem Exp $
.\"
.\" Copyright (c) 1999, 2000 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by the NetBSD
.\"        Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.
.if r_sun3 \{\
It is possible to easily upgrade your existing
.Nx*M
system
using the upgrade program in the miniroot. If you wish to upgrade
your system by this method, simply select the
.Ic upgrade
option once
the miniroot has booted. The upgrade program with then guide you
through the procedure. The upgrade program will:
.(bullet -offset indent
Enable the network based on your system's current network configuration.
.It
Mount your existing file systems.
.It
Extract binary sets from the media of your choice.
.It
Make new device nodes in your root file system under
.Pa /dev .
.It
Copy a new kernel onto your root partition
.Pq Pa / .
.(Note
the existing kernel
.Em will not
be backed up; doing
so would be pointless, since older kernels may not be
capable of running
.Nx \*V
executables.
.Note)
.It
Install a new boot block.
.It
Check your file systems for integrity.
.bullet)
.Pp
Using the miniroot's upgrade program is the preferred method
of upgrading your system.
.\}
.Pp
However, it is possible to upgrade your system
manually. To do this, follow the following procedure:
.(bullet -offset indent
Place
.Em at least
the
.Sy base
binary set in a file system
accessible to the target machine. A local file system
is preferred, since the NFS subsystem in the
.Nx \*V
kernel may be incompatible with your old binaries.
.It
Back up your pre-existing kernel and copy the \*V
kernel into your root partition
.Pq Pa / .
.It
Reboot with the \*V kernel into single-user mode.
(Otherwise you can not install the boot block.)
.It
Check all file systems:
.Pp
.Dl # Ic "/sbin/fsck -pf"
.It
Mount all local file systems:
.Pp
.Dl # Ic "/sbin/mount -a -t nonfs"
.It
If you keep
.Pa /usr
or
.Pa /usr/share
on an NFS server, you
will want to mount those file systems as well. To do
this, you will need to enable the network:
.Pp
.Dl # Ic "sh /etc/rc.d/network start"
.It
Run the
.Xr update 8
daemon, to ensure that new programs
are actually stored on disk.
.\" XXX: check this
.Pp
.Dl # Ic update
.It
Make sure you are in the root file system
.Pq Pa / and extract the
.Sy base
binary set:
.Pp
.Dl # Ic "cd /"
.Dl # Ic "pax -zrvpe -f Ar /path/to/base.tgz
.It
Install a new boot block:
(assuming root is on
.Pa /dev/rsd0a )
.Pp
.Dl # Ic "cd /usr/mdec"
.Dl # Ic "cp -p \&./ufsboot /mnt/ufsboot"
.Dl # Ic "sync ; sleep 1 ; sync"
.Dl # Ic "\&./installboot -v /ufsboot bootxx /dev/rsd0a"
.It
Sync the file systems:
.Pp
.Dl Ic sync
.It
At this point you may extract any other binary sets
you may have placed on local file systems, or you may
wish to extract additional sets at a later time.
To extract these sets, use the following commands:
.Pp
.Dl # "Ic cd /"
.Dl # "Ic pax -zrvpe -f" Ar "\&"path to set\&""
.bullet)
.(Note
.No You Em should not
extract the
.Sy etc
set if upgrading. Instead, you should extract that set into another
area and carefully merge the changes by hand.
.Note)
