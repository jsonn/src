# $NetBSD: README.kernelauth,v 1.1.2.6 2006/03/12 00:28:27 elad Exp $

This is the kernel authorization branch.

The purpose of this work is to replace the way credentials are stored
and managed in NetBSD. It's based on a clean-room implementation of
a subsystem of the same name available from Apple, as described in
Apple TN2127.

Some basic things you should know about this tree when working with
it:

  - suser(cred, &acflag) ->
        kauth_authorize_generic(cred, KAUTH_GENERIC_ISSUSER, &acflag);
  - struct ucred and struct pcred are now merged and appear as kauth_cred_t.
  - You have to use the accessor/mutator functions provided by the kernel
    authorization KPI.
  - KPI means Kernel Programming Interface and I didn't know there was a term
    like that before I saw it in Apple's documentation.

Todo:
  - kauth_cred_inherit() (for now just alloc & clone)
    * should look at all aspects (f_cred?)
  - Sync to -current
  - Look into referencing a kauth_cred_t from struct socket
  - Integration with securelevel ("system" scope?)
  - Get rid of comparisons against 0 ({,e}[ug]id)

More to come...
