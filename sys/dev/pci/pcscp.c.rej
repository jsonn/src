***************
*** 112,124 ****
  	sizeof(struct pcscp_softc), pcscp_match, pcscp_attach
  };
  
- struct scsipi_device pcscp_dev = {
- 	NULL,			/* Use default error handler */
- 	NULL,			/* have a queue, served by this */
- 	NULL,			/* have no async handler */
- 	NULL,			/* Use default 'done' routine */
- };
- 
  /*
   * Functions and the switch for the MI code.
   */
--- 112,117 ----
  	sizeof(struct pcscp_softc), pcscp_match, pcscp_attach
  };
  
  /*
   * Functions and the switch for the MI code.
   */
***************
*** 334,349 ****
  		return;
  	}
  
  	/* Do the common parts of attachment. */
  	printf("", sc->sc_dev.dv_xname);
- 
- 	sc->sc_adapter.scsipi_cmd = ncr53c9x_scsi_cmd;
- 	sc->sc_adapter.scsipi_minphys = minphys;
  
- 	ncr53c9x_attach(sc, &pcscp_dev);
  
- 	/* Turn on target selection using the `dma' method */
- 	ncr53c9x_dmaselect = 1;
  }
  
  /*
--- 327,342 ----
  		return;
  	}
  
+ 	/* Turn on target selection using the `dma' method */
+ 	ncr53c9x_dmaselect = 1;
+ 
  	/* Do the common parts of attachment. */
  	printf("", sc->sc_dev.dv_xname);
  
+ 	sc->sc_adapter.adapt_request = ncr53c9x_scsipi_request;
+ 	sc->sc_adapter.adapt_minphys = minphys;
  
+ 	ncr53c9x_attach(sc);
  }
  
  /*
***************
*** 573,585 ****
  		return 0;
  
  	error = bus_dmamap_load(esc->sc_dmat, dmap, *esc->sc_dmaaddr,
- 				*esc->sc_dmalen, NULL,
- 				sc->sc_nexus->xs->xs_control & XS_CTL_NOSLEEP ?
- 				BUS_DMA_NOWAIT : BUS_DMA_WAITOK);
- 	if (error) {
  		printf(": unable to load dmamap, error = 0\n",
- 		       sc->sc_dev.dv_xname, error);
- 		return error;
  	}
  
  	/* set transfer length */
--- 566,584 ----
  		return 0;
  
  	error = bus_dmamap_load(esc->sc_dmat, dmap, *esc->sc_dmaaddr,
+ 				*esc->sc_dmalen, NULL, BUS_DMA_NOWAIT);
+ 	switch (error) {
+ 	case 0:
+ 		break;
+ 
+ 	default:
  		printf(": unable to load dmamap, error = 0\n",
+ 		    sc->sc_dev.dv_xname, error);
+ 		/* FALLTHROUGH */
+ 
+ 	case ENOMEM:
+ 	case EAGAIN:
+ 		return (error);
  	}
  
  	/* set transfer length */
