#	$NetBSD: Makefile.rump,v 1.6.10.2 2009/05/04 08:14:24 yamt Exp $
#

WARNS?=		3	# XXX: src/sys won't compile with -Wsign-compare yet
NOLINT=		# kernel code

.include <bsd.own.mk>

# use kernel ABI instead of rump ABI (needs md code)
.ifndef RUMPKMOD
CPPFLAGS:=	-I${RUMPTOP}/include ${CPPFLAGS}
.endif

CFLAGS+=	-ffreestanding -fno-strict-aliasing
CPPFLAGS+=	-D_RUMPKERNEL
CPPFLAGS+=	-D_KERNEL -DMULTIPROCESSOR -D_MODULE -DMODULAR
CPPFLAGS+=	-DMAXUSERS=32
CPPFLAGS+=	-DDIAGNOSTIC
CPPFLAGS+=	-DCOMPAT_50
CPPFLAGS+=	-DDEBUGPRINT
CPPFLAGS+=	-I${.CURDIR} -I.
CPPFLAGS+=	-I${RUMPTOP}/../../common/include -I${RUMPTOP}/../arch
CPPFLAGS+=	-I${RUMPTOP}/include
CPPFLAGS+=	-I${RUMPTOP}/librump/rumpkern/opt
CPPFLAGS+=	-nostdinc -I${RUMPTOP}/..
#CPPFLAGS+=	-DDEBUG

RUMPKERNEL=	This is NetBSD and I am the rump.  Good evening.

# workaround: evbppc is not a well-defined arch
.if (${MACHINE} == "evbppc")
CPPFLAGS+=	-DPPC_OEA
.endif

# If this file changes, we need a full rebuild
DPSRCS+=	${RUMPTOP}/Makefile.rump

#
# Rename library symbols before use.  If a symbol does not already belong
# to a rump namespace ("rump" or "RUMP"), prefix it with "rumpns".  This
# avoids accidentally linking any kernel symbol against host platform
# libraries.  The only non-renamed symbols are linkset delimiters and
# the GOT, which are more a property of the compiler than the kernel.
#
# Some toolchains generate unresolved symbols which are supposed to be
# satisfied by the toolchain itself when the program is linked.
# Unfortunately, we do not know which of the symbols are generated by
# the toolchain.  Worse, they vary from platform to platform and
# toolchain to toolchain.  The good news, however, is that this will
# be detected by a compile-time failure, so we can fairly easily manage
# a quirktable here.
.if ${MACHINE_CPU} == "mips"
_SYMQUIRK='|_gp_disp'
.elif ${MACHINE_CPU} == "hppa"
_SYMQUIRK='|\$$\$$'
.endif
__archivebuild: .USE
	${_MKTARGET_BUILD}
	rm -f ${.TARGET}
	${AR} ${_ARFL} ${.TARGET} `NM=${NM} ${LORDER} ${.ALLSRC:M*o} | ${TSORT}`
	${NM} -go ${.TARGET} | ${TOOL_AWK} '	\
	    $$NF!~/^(rump|RUMP|__|_GLOBAL_OFFSET_TABLE'${_SYMQUIRK}')/ \
	      {printf "%s rumpns_%s\n", $$NF, $$NF}' \
	    | sort | uniq  > renametab.${.TARGET}
	${OBJCOPY} --preserve-dates --redefine-syms \
	    renametab.${.TARGET} ${.TARGET}
	rm -f renametab.${.TARGET}
	${AR} ${_ARRANFL} ${.TARGET}
