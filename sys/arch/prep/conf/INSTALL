#	$NetBSD: INSTALL,v 1.1.2.2 2001/01/18 09:22:57 bouyer Exp $
#
#	INSTALL -- Installation kernel
#

include "arch/prep/conf/std.prep"

makeoptions	COPTS="-Os -mmultiple"	# -Os -mmultiple to reduce size.

# Enable the hooks used for initializing the ram-disk.
options 	MEMORY_DISK_HOOKS
options 	MEMORY_DISK_IS_ROOT	# Force root on ram-disk
options 	MINIROOTSIZE=4096	# 2 Megabytes

maxusers	8

# Compatibility options
#options 	COMPAT_13	# NetBSD 1.3,
#options 	COMPAT_14	# NetBSD 1.4,
#options 	COMPAT_43	# and 4.3BSD

# File systems
file-system 	FFS		# UFS
file-system	EXT2FS		# second extended file system (linux)
file-system 	MFS		# memory file system
file-system 	NFS		# Network File System client
file-system 	CD9660		# ISO 9660 + Rock Ridge file system
file-system 	MSDOSFS		# MS-DOS file system

# File system options
options 	VNODE_OP_NOINLINE # Save space by not inlining vnode op calls
options 	FFS_EI		# FFS Endian Independant support
#options 	EXT2FS_SYSTEM_FLAGS # makes ext2fs file flags (append and
 				# immutable) behave as system flags.

# Networking options
options 	INET		# IP + ICMP + TCP + UDP
options 	NMBCLUSTERS=1024
options 	NFS_BOOT_BOOTPARAM
options 	NFS_BOOT_DHCP

# Kernel root file system and dump configuration.
config	netbsd	root on ? type ?


#
# Device configuration
#

mainbus0 at root
cpu0	at mainbus0


# Basic Bus Support

# PCI bus support
pci0	at mainbus0 bus ?
pci*	at pchb? bus ?

# PCI bridges
pchb*	at pci? dev ? function ?	# PCI-Host bridges
pcib*	at pci? dev ? function ?	# PCI-ISA bridges

# ISA bus support
isa*	at pcib?			# ISA on PCI-ISA bridge

# PCMCIA bus support
pcmcia* at pcic? controller ? socket ?

# ISA PCMCIA controllers
pcic0	at isa? port 0x3e0 iomem 0xd0000 iosiz 0x10000

#options 	PCIC_ISA_INTR_ALLOC_MASK=0x4a00 # free irq 9,11,14
#options 	PCIC_ISA_ALLOC_IOBASE=0x0400
#options 	PCIC_ISA_ALLOC_IOSIZE=0x0100

# ISA Plug-and-Play bus support
isapnp0 at isa?

# Console Devices

# ISA console.
pc0	at isa? port 0x60 irq 1		# generic PC console device

# Keyboard layout configuration for pccons
#options	FRENCH_KBD
#options	FINNISH_KBD
#options	GERMAN_KBD
#options	NORWEGIAN_KBD

mcclock0 at isa? port 0x70		# mc146818 and compatible


# Serial Devices

# ISA serial interfaces
com0	at isa? port 0x3f8 irq 4	# standard PC serial ports
com1	at isa? port 0x2f8 irq 3

# Parallel Printer Interfaces

# ISA parallel printer interfaces
lpt0	at isa? port 0x3bc irq 7	# standard PC parallel ports


# SCSI Controllers and Devices

# PCI SCSI controllers
pcscp*	at pci? dev ? function ?	# AMD 53c974 PCscsi-PCI SCSI

# PCMCIA SCSI controllers
aic*	at pcmcia? function ?		# Adaptec APA-1460 SCSI

# SCSI bus support
scsibus* at aic?
scsibus* at pcscp?

# SCSI devices
sd*	at scsibus? target ? lun ?	# SCSI disk drives
st*	at scsibus? target ? lun ?	# SCSI tape drives
cd*	at scsibus? target ? lun ?	# SCSI CD-ROM drives


# IDE and related devices

# PCMCIA IDE controllers
wdc*	at pcmcia? function ?

# IDE drives
# Flags are used only with controllers that support DMA operations
# and mode settings (e.g. some pciide controllers)
# The lowest order four bits (rightmost digit) of the flags define the PIO
# mode to use, the next set of four bits the DMA mode and the third set the
# UltraDMA mode. For each set of four bits, the 3 lower bits define the mode
# to use, and the last bit must be 1 for this setting to be used.
# For DMA and UDMA, 0xf (1111) means 'disable'.
# 0x0fac means 'use PIO mode 4, DMA mode 2, disable UltraDMA'.
# (0xc=1100, 0xa=1010, 0xf=1111)
# 0x0000 means "use whatever the drive claims to support".
wd*	at wdc? channel ? drive ? flags 0x0000

# ATAPI bus support
atapibus* at wdc? channel ?

# ATAPI devices
# flags have the same meaning as for IDE drives.
cd*	at atapibus? drive ? flags 0x0000	# ATAPI CD-ROM drives
sd*	at atapibus? drive ? flags 0x0000	# ATAPI disk drives

# Miscellaneous mass storage devices

# ISA floppy
fdc0	at isa? port 0x3f0 irq 6 drq 2  # standard PC floppy controllers
fd*	at fdc? drive ?

# Network Interfaces

# PCI network interfaces
de*	at pci? dev ? function ?	# DEC 21x4x-based Ethernet
ep*	at pci? dev ? function ?	# 3Com 3c59x
le*	at pci? dev ? function ?	# PCnet-PCI Ethernet
ne*	at pci? dev ? function ?	# NE2000-compatible Ethernet
vr*	at pci? dev ? function ?	# VIA Rhine Fast Ethernet

# ISA Plug-and-Play network intefaces
ep*	at isapnp?			# 3Com 3c509 Ethernet

# PCMCIA network interfaces
ep*	at pcmcia? function ?		# 3Com 3c589 and 3c562 Ethernet
ne*	at pcmcia? function ?		# NE2000-compatible Ethernet

# MII/PHY support
dmphy*	at mii? phy ?			# Davicom DM9101 PHYs
exphy*	at mii? phy ?			# 3Com internal PHYs
icsphy* at mii? phy ?			# Integrated Circuit Systems ICS1890
inphy*	at mii? phy ?			# Intel 82555 PHYs
iophy*	at mii? phy ?			# Intel 82553 PHYs
lxtphy* at mii? phy ?			# Level One LXT-970 PHYs
nsphy*	at mii? phy ?			# NS83840 PHYs
nsphyter* at mii? phy ?			# NS83843 PHYs
qsphy*	at mii? phy ?			# Quality Semiconductor QS6612 PHYs
sqphy*	at mii? phy ?			# Seeq 80220/80221/80223 PHYs
tlphy*	at mii? phy ?			# ThunderLAN PHYs
tqphy*	at mii? phy ?			# TDK Semiconductor PHYs
ukphy*	at mii? phy ?			# generic unknown PHYs


# Pseudo-Devices

# disk/mass storage pseudo-devices
pseudo-device	md		1	# memory disk device (ramdisk)

# network pseudo-devices
pseudo-device	loop			# network loopback

# miscellaneous pseudo-devices
pseudo-device	pty			# pseudo-terminals
pseudo-device	rnd			# /dev/random and in-kernel generator
#options	RND_COM			# use "com" randomness as well
