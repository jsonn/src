# $NetBSD: GENERIC,v 1.105.10.2 2008/01/09 01:45:33 matt Exp $
#
# GENERIC machine description file
# 
# This machine description file is used to generate the default NetBSD
# kernel.  The generic kernel does not include all options, subsystems
# and device drivers, but should be useful for most applications.
#
# The machine description file can be customised for your specific
# machine to reduce the kernel size and improve its performance.
#
# For further information on compiling NetBSD kernels, see the config(8)
# man page.
#
# For further information on hardware support for this architecture, see
# the intro(4) man page.  For further information about kernel options
# for this architecture, see the options(4) man page.  For an explanation
# of each device driver in this file see the section 4 man page for the
# device.

include 	"arch/bebox/conf/std.bebox"

options 	INCLUDE_CONFIG_FILE	# embed config file in kernel binary

#ident 		"GENERIC-$Revision: 1.105.10.2 $"

maxusers	32

#options 	IPKDBUSERHACK	# Allow access to mapped memory via kgdb
#options 	DEBUG_BY_TOOLS	# Allow debugging from toolsnet
# HMAC key to be used for debugging sessions
#options 	IPKDBKEY="\"HMAC pass phrase text\""
#options 	IPKDBSECURE	# Allow debugging even when securelevel > 0
makeoptions	DEBUG="-g"

#options 	DEBUG
#options 	DIAGNOSTIC
options 	TRAP_PANICWAIT
options 	DDB
#options 	DDB_HISTORY_SIZE=100	# Enable history editing in DDB
options 	KTRACE
options 	USERCONF		# userconf(4) support
#options	PIPE_SOCKETPAIR		# smaller, but slower pipe(2)
options 	SYSCTL_INCLUDE_DESCR	# Include sysctl descriptions in kernel

# Enable experimental buffer queue strategy for better responsiveness under 
# high disk I/O load. Use it with caution - it's not proven to be stable yet.
#options 	BUFQ_READPRIO
#options 	BUFQ_PRIOCSCAN

#options 	TCP_COMPAT_42	# 4.2BSD TCP/IP bug compat. Not recommended.
options 	COMPAT_43
options 	COMPAT_09
options 	COMPAT_10
options 	COMPAT_12
options 	COMPAT_13
options 	COMPAT_14
options 	COMPAT_15
options 	COMPAT_16
options 	COMPAT_20
options 	COMPAT_30	# NetBSD 3.0 compatibility.
options 	COMPAT_386BSD_MBRPART	# recognize old partition ID
#options 	COMPAT_LINUX		# Linux binary compatibility
options		COMPAT_BSDPTY	# /dev/[pt]ty?? ptys.

file-system 	FFS
file-system 	MFS
file-system 	NFS
file-system 	CD9660
file-system 	MSDOSFS
file-system 	FDESC
file-system 	KERNFS
file-system 	NULLFS
file-system 	OVERLAY
file-system 	PORTAL
file-system 	PROCFS
file-system 	UMAPFS
file-system 	UNION
file-system	PTYFS		# /dev/pts/N support
#file-system	TMPFS		# Efficient memory file-system
#file-system	UDF		# experimental - OSTA UDF CD/DVD file-system

#options 	FFS_EI		# FFS Endian Independant support
options 	SOFTDEP		# FFS soft updates support.
#options	UFS_DIRHASH	# UFS Large Directory Hashing - Experimental
#options 	NFSSERVER
#options 	FFS_NO_SNAPSHOT	# No FFS snapshot support

options 	INET
options 	INET6		# IPV6
#options 	IPSEC		# IP security
#options 	IPSEC_ESP	# IP security (encryption part; define w/IPSEC)
#options 	IPSEC_NAT_T	# IPsec NAT traversal (NAT-T)
#options 	IPSEC_DEBUG	# debug for IP security

#options 	TCP_DEBUG	# Record last TCP_NDEBUG packets with SO_DEBUG

#options 	ALTQ		# Manipulate network interfaces' output queues
#options 	ALTQ_BLUE	# Stochastic Fair Blue
#options 	ALTQ_CBQ	# Class-Based Queueing
#options 	ALTQ_CDNR	# Diffserv Traffic Conditioner
#options 	ALTQ_FIFOQ	# First-In First-Out Queue
#options 	ALTQ_FLOWVALVE	# RED/flow-valve (red-penalty-box)
#options 	ALTQ_HFSC	# Hierarchical Fair Service Curve
#options 	ALTQ_LOCALQ	# Local queueing discipline
#options 	ALTQ_PRIQ	# Priority Queueing
#options 	ALTQ_RED	# Random Early Detection
#options 	ALTQ_RIO	# RED with IN/OUT
#options 	ALTQ_WFQ	# Weighted Fair Queueing

options 	NFS_BOOT_BOOTPARAM,NFS_BOOT_BOOTP

config		netbsd	root on ? type ?

#pseudo-device 	crypto			# /dev/crypto device
#pseudo-device	swcrypto		# software crypto implementation
#pseudo-device	cgd		4	# cryptographic disk devices
pseudo-device	vnd		
#options 	VND_COMPRESSION		# compressed vnd(4)
pseudo-device	loop
pseudo-device	bpfilter		# packet filter
#pseudo-device	carp			# Common Address Redundancy Protocol
pseudo-device	gif			# IPv[46] over IPv[46] tunnel (RFC1933)
#pseudo-device	faith			# IPv[46] tcp relay translation i/f
pseudo-device	stf			# 6to4 IPv6 over IPv4 encapsulation
pseudo-device	vlan			# IEEE 802.1q encapsulation
pseudo-device	pppoe			# PPP over Ethernet (RFC 2516)
pseudo-device	bridge			# simple inter-network bridging
#options	BRIDGE_IPF		# bridge uses IP/IPv6 pfil hooks too
pseudo-device	agr			# IEEE 802.3ad link aggregation
pseudo-device	pty			# pseudo-terminals
pseudo-device	raid		8	# RAIDframe disk driver
options 	RAID_AUTOCONFIG		# auto-configuration of RAID components
# Options to enable various other RAIDframe RAID types.
# options	RF_INCLUDE_EVENODD=1
# options	RF_INCLUDE_RAID5_RS=1
# options	RF_INCLUDE_PARITYLOGGING=1
# options	RF_INCLUDE_CHAINDECLUSTER=1
# options	RF_INCLUDE_INTERDECLUSTER=1
# options 	RF_INCLUDE_PARITY_DECLUSTERING=1
# options	RF_INCLUDE_PARITY_DECLUSTERING_DS=1
pseudo-device	fss		4	# file system snapshot device
#pseudo-device	gre			# generic L3 over IP tunnel
pseudo-device	wsmux
pseudo-device	clockctl		# user control of clock subsystem

# random number generator pseudo-device
pseudo-device	rnd			# /dev/random and in-kernel generator
#options 	RND_COM			# use "com" randomness as well (BROKEN)
pseudo-device	ksyms			# /dev/ksyms
#pseudo-device	pf			# PF packet filter
#pseudo-device	pflog			# PF log if

# Veriexec
#
# a pseudo device needed for veriexec
#pseudo-device	veriexec		1
#
# Uncomment the fingerprint methods below that are desired. Note that
# removing fingerprint methods will have almost no impact on the kernel
# code size.
#
#options VERIFIED_EXEC_FP_RMD160
#options VERIFIED_EXEC_FP_SHA256
#options VERIFIED_EXEC_FP_SHA384
#options VERIFIED_EXEC_FP_SHA512
#options VERIFIED_EXEC_FP_SHA1
#options VERIFIED_EXEC_FP_MD5

#
# device
#
options 	RTC_OFFSET=0	# hardware clock is this many mins. west of GMT

options 	PCIVERBOSE	# verbose PCI device messages
#options 	PCI_CONFIG_DUMP	# verbosely dump PCI config space
options 	PCI_NETBSD_CONFIGURE

mainbus0 at root

cpu*	at mainbus0
pci0	at mainbus0 bus ?

ppb*	at pci? dev ? function ?	# PCI-PCI bridges
pci*	at ppb? bus ?
pchb*	at pci? dev ? function ?	# PCI-Host bridges
pcib*	at pci? dev ? function ?	# PCI-ISA bridges

isa*	at pcib?			# ISA on PCI-ISA bridge

mcclock0 at isa? port 0x70		# time-of-day clock

#pc0	at isa? port 0x60 irq 1		# generic PC console device

com0	at isa? port 0x3f8 irq 4	# standard PC serial ports
com1	at isa? port 0x2f8 irq 3
#com2	at isa? port 0x380 irq 16
#com3	at isa? port 0x388 irq 17

lpt0	at isa? port 0x378 irq 7	# standard PC parallel ports
#lpt1	at isa? port 0x278
#lpt2	at isa? port 0x3bc

#lms0	at isa? port 0x23c irq 5	# Logitech bus mouse
#lms1	at isa? port 0x238 irq 5
#mms0	at isa? port 0x23c irq 5	# Microsoft InPort mouse
#mms1	at isa? port 0x238 irq 5

pckbc0	at isa?
pckbd*	at pckbc?
#pms*	at pckbc?
#vga0	at isa?
vga*	at pci?
#pfb*	at pci?
wsdisplay*	at vga? console ?
#wsdisplay*	at pfb? console ?
wskbd*		at pckbd? console ?
#wsmouse*	at pms? mux 0

# Cryptographic Devices

# PCI cryptographic devices
#hifn*	at pci? dev ? function ?	# Hifn 7755/7811/795x
#ubsec*	at pci? dev ? function ?	# Broadcom 5501/5601/580x/582x

#siop*	at pci? dev ? function ?	# NCR 538XX SCSI controllers
#scsibus* at siop?
#esiop*	at pci? dev ? function ?	# NCR 53875 and newer SCSI controllers
#scsibus* at esiop?

#sd*	at scsibus? target ? lun ?	# SCSI disk drives
#st*	at scsibus? target ? lun ?	# SCSI tape drives
#cd*	at scsibus? target ? lun ?	# SCSI CD-ROM drives
#ch*	at scsibus? target ? lun ?	# SCSI autochangers
#ss*	at scsibus? target ? lun ?	# SCSI scanners
#uk*	at scsibus? target ? lun ?	# SCSI unknown

fdc0	at isa? port 0x3f0 irq 6 drq 2	# standard PC floppy controllers
#fdc1	at isa? port 0x370 irq ? drq ?
fd0	at fdc? drive 1
#fd*	at fdc? drive ?

wdc0	at isa? port 0x1f0 irq 14	# ST506, ESDI, and IDE controllers
atabus* at ata?
wd*	at atabus? drive ?

ne0	at isa? port 0x300 irq 5	# NE[12]000 ethernet cards
#ipkdbif0 at ne?

#wss0	at isa? port 0x530 irq 10 drq 0	# Windows Sound System

#attimer0	at isa?
#pcppi0 at isa?
#spkr0	at pcppi?

# Joystick driver. Probe is a little strange; add only if you have one.
#joy0	at isa? port 0x201
