#
#	$NetBSD: GENERIC.in,v 1.32.2.7 2005/02/15 21:32:32 skrll Exp $
#
# Generic atari
#

#if defined(TT030_KERNEL) || defined(FALCON_KERNEL)
include "arch/atari/conf/std.atari"
#elif defined (HADES_KERNEL)
include "arch/atari/conf/std.hades"
#elif defined (MILAN_KERNEL)
include "arch/atari/conf/std.milan"
#endif

options 	INCLUDE_CONFIG_FILE	# embed config file in kernel binary

#
# Add support for about 16 users. This variable is used to size
# various kernel structures.
#
maxusers	16

options 	HZ=64		# Set the clock-rate (48/64/96)

# Standard system options
options 	INSECURE	# disable kernel security levels
#options 	NTP		# NTP phase/frequency locked loop

# Enable experimental buffer queue strategy for better responsiveness under 
# high disk I/O load. Use it with caution - it's not proven to be stable yet.
#options 	NEW_BUFQ_STRATEGY

#
# (Co)processors this kernel should support
#
#if defined(TT030_KERNEL) || defined(FALCON_KERNEL)
options 	M68030		# support for 030
options 	FPU_EMULATE	# Support for MC68881/MC68882 emulator
#if !defined(INSTALL_KERNEL)
options 	M68040		# support for 040
options 	FPSP		# 68040 Floatingpoint support
#endif
#else /* for the Hades & Milan: */
options 	M68040		# support for 040
options 	M68060		# support for 060
options 	FPSP		# 68040 Floatingpoint support
options 	M060SP		# MC68060 software support (Required for 060)
#endif

#
# Networking options
#
options 	INET		# IP + ICMP + TCP + UDP

#ifndef INSTALL_KERNEL
options 	INET6		# IPV6
#options 	IPSEC		# IP security
#options 	IPSEC_ESP	# IP security (encryption part; define w/IPSEC)
#options 	IPSEC_DEBUG	# debug for IP security
#options 	GATEWAY		# packet forwarding
#options 	MROUTING	# IP multicast routing
#options 	PIM		# Protocol Independent Multicast
options 	NS		# XNS
#options 	NSIP		# XNS tunneling over IP
options 	ISO,TPIP	# OSI
#options 	EON		# OSI tunneling over IP
options 	CCITT,LLC,HDLC	# X.25
#ifndef NO_PHYS_NETWORK
options 	NETATALK	# AppleTalk networking protocols
#endif
#endif

options 	PPP_BSDCOMP	# BSD-Compress compression support for PPP
options 	PPP_DEFLATE	# Deflate compression support for PPP
options 	PPP_FILTER	# Active filter support for PPP (requires bpf)

#ifndef INSTALL_KERNEL
options 	PFIL_HOOKS	# pfil(9) packet filter hooks
options 	IPFILTER_LOG	# ipmon(8) log support
#options  	IPFILTER_DEFAULT_BLOCK	# block packages by default

#options 	TCP_DEBUG	# Record last TCP_NDEBUG packets with SO_DEBUG

#options 	ALTQ		# Manipulate network interfaces' output queues
#options 	ALTQ_BLUE	# Stochastic Fair Blue
#options 	ALTQ_CBQ	# Class-Based Queueing
#options 	ALTQ_CDNR	# Diffserv Traffic Conditioner
#options 	ALTQ_FIFOQ	# First-In First-Out Queue
#options 	ALTQ_FLOWVALVE	# RED/flow-valve (red-penalty-box)
#options 	ALTQ_HFSC	# Hierarchical Fair Service Curve
#options 	ALTQ_LOCALQ	# Local queueing discipline
#options 	ALTQ_PRIQ	# Priority Queueing
#options 	ALTQ_RED	# Random Early Detection
#options 	ALTQ_RIO	# RED with IN/OUT
#options 	ALTQ_WFQ	# Weighted Fair Queueing
#endif

# File systems
file-system 	FFS		# Berkeley fast file system
file-system 	MFS		# Memory based filesystem
file-system 	KERNFS		# Kernel parameter filesystem
file-system 	MSDOSFS		# MSDOS filesystem
file-system 	CD9660		# ISO 9660 filesystem with Rock Ridge

#ifndef INSTALL_KERNEL
file-system 	NFS		# Network File System client side code
file-system 	PROCFS		# Process filesystem
file-system 	FDESC		# /dev/fd
file-system 	NULLFS		# Loopback filesystem
file-system 	OVERLAY		# overlay filesystem
file-system 	UNION		# union file system
file-system 	UMAPFS		# null file system (with uid & gid remapping)
file-system 	PORTAL		# portal file system
file-system 	EXT2FS		# second extended file system (linux)
file-system 	LFS		# log-structured file system
#endif

#ifndef INSTALL_KERNEL
# File system options
options 	QUOTA		# Disk quotas for local disks
#options 	FFS_EI		# FFS Endian Independant support
options 	SOFTDEP		# FFS soft updates support.
#options	UFS_DIRHASH	# UFS Large Directory Hashing - Experimental
options 	NFSSERVER	# Network File System server side code
#options 	EXT2FS_SYSTEM_FLAGS	# makes ext2fs file flags (append and
				# immutable) behave as system flags.
options 	FFS_SNAPSHOT	# ffs snapshots
#endif

#
# Misc. debugging options
#
options 	PANICWAIT	# Require keystroke to dump/reboot
options 	DDB		# Kernel debugger
#ifndef INSTALL_KERNEL
options 	DDB_HISTORY_SIZE=100	# Enable history editing in DDB
#options 	DEBUG		# expensive debugging checks/support
#endif

#
# Compatibility options for various existing systems
#
options 	COMPAT_43	# 4.3 BSD compatible system calls (required)
options 	COMPAT_10	# Compatibility to NetBSD1.0
options 	COMPAT_11	# Compatibility to NetBSD1.1
options 	COMPAT_12	# Compatibility to NetBSD1.2
options 	COMPAT_13	# Compatibility to NetBSD1.3
options 	COMPAT_14	# Compatibility to NetBSD1.4
options 	COMPAT_15	# Compatibility to NetBSD1.5
options 	COMPAT_16	# Compatibility to NetBSD1.6
#ifndef INSTALL_KERNEL
#options 	COMPAT_09	# has no meaning on the atari
#options 	COMPAT_SUNOS	# Support to run Sun-3 executables
#options 	COMPAT_SVR4	# Support to run SVR4 executables
#options 	COMPAT_LINUX	# Support to run Linux/m68k executables
#options 	TCP_COMPAT_42	# 4.2BSD TCP/IP bug compat. Not recommended.
#endif
options 	COMPAT_AOUT_M68K # Compatibility to a.out executables
options 	EXEC_AOUT	# a.out format executables
options		COMPAT_BSDPTY	# /dev/[pt]ty?? ptys.

#ifndef INSTALL_KERNEL
#
# Support for System V IPC facilities.
#
options 	SYSVSHM			# System V shared memory
options 	SYSVMSG			# System V messages
options 	SYSVSEM			# System V semaphores
#options 	SEMMNI=10		# number of semaphore identifiers
#options 	SEMUME=10		# max number of undo entries per proc.
#options 	SEMMNU=30		# number of undo structures in system
options 	P1003_1B_SEMAPHORE # p1003.1b semaphore support
#endif

#ifndef INSTALL_KERNEL
#
# Support for various kernel options
#
options 	KTRACE			# Add kernel tracing system call
options 	SYSTRACE		# system call vetting via systrace(1)
options 	DIAGNOSTIC		# Add additional error checking code
options 	USERCONF		# userconf(4) support
#options	PIPE_SOCKETPAIR	# smaller, but slower pipe(2)
options 	SYSCTL_INCLUDE_DESCR	# Include sysctl descriptions in kernel
#else /* INSTALL_KERNEL */
options		PIPE_SOCKETPAIR	# smaller, but slower pipe(2)
#endif

# These options enable verbose messages for several subsystems.
# Warning, these may compile large string tables into the kernel!
#ifndef INSTALL_KERNEL
options 	SCSIVERBOSE		# human readable SCSI error messages
#endif
#if defined(HADES_KERNEL) || defined(MILAN_KERNEL)
options 	MIIVERBOSE		# verbose PHY autoconfig messages
options 	PCIVERBOSE		# verbose PCI device autoconfig messages
#options 	PCI_CONFIG_DUMP		# verbosely dump PCI config space
#endif

#
# Atari specific options
#
#options 	KFONT_8x8		# Use 8x8 font instead of 8x16
options 	ST_POOL_SIZE=22		# smallest that allows TT-HIGH
#if defined(TT030_KERNEL) || defined(HADES_KERNEL)
options 	TT_SCSI			# SCSI-support for TT
options 	TT_VIDEO		# Graphics support for TT
#options	ET4000_HAS_2MB_MEM	# et4000 with 2 MB video memory
#endif
#ifdef FALCON_KERNEL
options 	FALCON_SCSI		# SCSI-support for Falcon
options 	FALCON_VIDEO		# Graphics support for FALCON
#endif
options 	MEMORY_DISK_HOOKS	# Boot RAM-disk
options 	DISKLABEL_NBDA		# NetBSD disklabels (required)
options 	DISKLABEL_AHDI		# NetBSD/AHDI disklabels
#ifndef INSTALL_KERNEL
options 	SERCONSOLE		# modem1 console support
options 	RELOC_KERNEL		# TT/Falcon: relocate kernel to TT-RAM
options 	MSGBUFSIZE=32768        # size of kernel msg. buffer
#options 	STATCLOCK	        # Separate {stat,prof}clock
#endif

#ifndef INSTALL_KERNEL
# Try linked commands on all targets
options 	TRY_SCSI_LINKED_COMMANDS=0x7f
#endif

#
# Build one kernel that can boot from any disk.
#
config		netbsd root on ? type ?

pseudo-device	sl			# Slip
pseudo-device	ppp			# ppp
#ifndef NO_PHYS_NETWORK
pseudo-device	pppoe			# PPP over Ethernet (RFC 2516)
#endif
pseudo-device	pty			# pseudo-terminals
pseudo-device	loop			# Loopback network
pseudo-device	vnd		3	# 3 pseudo disks (see vnconfig)
pseudo-device	md		3	# Boot memory disk

#ifndef INSTALL_KERNEL
pseudo-device	bpfilter	2	# berkeley packet filters
pseudo-device	tun		2	# network tunnel
pseudo-device	tap			# virtual Ethernet
#pseudo-device	gre		2	# generic L3 over IP tunnel
pseudo-device	gif		4	# IPv[46] over IPv[46] tunnel (RFC1933)
#pseudo-device	faith		1	# IPv[46] tcp relay translation i/f
#pseudo-device	stf		1	# 6to4 IPv6 over IPv4 encapsulation
#ifndef NO_PHYS_NETWORK
pseudo-device	vlan			# IEEE 802.1q encapsulation
pseudo-device	bridge			# simple inter-network bridging
#endif
pseudo-device	ccd		4	# concatenating disk driver
#pseudo-device	cgd		4	# cryptographic disk driver
pseudo-device	raid		8	# RAIDframe disk driver
options 	RAID_AUTOCONFIG		# auto-configuration of RAID components
# Options to enable various other RAIDframe RAID types.
# options	RF_INCLUDE_EVENODD=1
# options	RF_INCLUDE_RAID5_RS=1
# options	RF_INCLUDE_PARITYLOGGING=1
# options	RF_INCLUDE_CHAINDECLUSTER=1
# options	RF_INCLUDE_INTERDECLUSTER=1
# options 	RF_INCLUDE_PARITY_DECLUSTERING=1
# options	RF_INCLUDE_PARITY_DECLUSTERING_DS=1
pseudo-device	fss		4	# file system snapshot device
pseudo-device	ipfilter		# IP filtering device
pseudo-device	rnd			# /dev/random and in-kernel generator
pseudo-device	clockctl		# user control of clock subsystem
#pseudo-device	pf			# PF packet filter
#pseudo-device	pflog			# PF log if
#endif

#if defined(HADES_KERNEL) || defined(MILAN_KERNEL)

# MII/PHY support
exphy*	at mii? phy ?			# 3Com internal PHYs
inphy*	at mii? phy ?			# Intel 82555 PHYs
iophy*	at mii? phy ?			# Intel 82553 PHYs
ukphy*	at mii? phy ?			# generic unknown PHYs

# PCI network interfaces
# If unsure, check the port-atari page for tested cards.
ep*	at pci? dev ? function ?	# 3Com 3c59x
fxp*	at pci? dev ? function ?	# Intel EtherExpress PRO 10+/100B


#
# This is the only tested audio card at the moment.
#
eso*	at pci? dev ? function ?	# ESS Solo-1 PCI AudioDrive
audio*	at eso?

#endif /* defined(HADES_KERNEL) || defined(MILAN_KERNEL) */

#
# Hardware options for GENERIC are in the various machine type specific files
#
