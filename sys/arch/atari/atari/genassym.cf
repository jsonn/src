#	$NetBSD: genassym.cf,v 1.12.2.2 2000/12/08 09:26:24 bouyer Exp $

#-
# Copyright (c) 1997 The NetBSD Foundation, Inc.
# All rights reserved.
# 
#  This code is derived from software contributed to The NetBSD Foundation
#  by Leo Weppelman.
# 
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. All advertising materials mentioning features or use of this software
#     must display the following acknowledgement:
#         This product includes software developed by the NetBSD
#         Foundation, Inc. and its contributors.
#  4. Neither the name of The NetBSD Foundation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
# 
#  THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
#  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
#  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#  PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
#  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

include "opt_compat_svr4.h"

include <sys/param.h>
include <sys/buf.h>
include <sys/proc.h>
include <sys/mbuf.h>
include <sys/msgbuf.h>
include <sys/syscall.h>
include <sys/user.h>

include <uvm/uvm_extern.h>

ifdef COMPAT_SVR4
include <compat/svr4/svr4_syscall.h>
include <compat/svr4/svr4_ucontext.h>
endif

include <machine/cpu.h>
include <machine/trap.h>
include <machine/psl.h>
include <machine/reg.h>
include <machine/vmparam.h>
include <machine/pte.h>
include <machine/iomap.h>
include <machine/scu.h>

define  _XXX_CIRCUMVENT_BUG	1

# CPU options
ifdef M68020
define	M68020			1
endif
ifdef M68030
define	M68030			1
endif
ifdef M68040
define	M68040			1
endif
ifdef M68060
define	M68060			1
endif

# proc fields and values
define	P_FORW			offsetof(struct proc, p_forw)
define	P_BACK			offsetof(struct proc, p_back)
define	P_VMSPACE		offsetof(struct proc, p_vmspace)
define	P_ADDR			offsetof(struct proc, p_addr)
define	P_PRIORITY		offsetof(struct proc, p_priority)
define	P_STAT			offsetof(struct proc, p_stat)
define	P_WCHAN			offsetof(struct proc, p_wchan)
define	P_MD			offsetof(struct proc, p_md)
define	P_PID			offsetof(struct proc, p_pid)
define	MD_REGS			offsetof(struct mdproc, md_regs)
define	SRUN			SRUN
define	SONPROC			SONPROC

# interrupt/fault metering
define	UVMEXP_INTRS		offsetof(struct uvmexp, intrs)

# general constants
define	UPAGES			UPAGES
define	USPACE			USPACE
define	NBPG			NBPG
define	PGSHIFT			PGSHIFT
define	USRSTACK		USRSTACK

# profiling
define	U_PROF			offsetof(struct user, u_stats.p_prof)
define	U_PROFSCALE		offsetof(struct user, u_stats.p_prof.pr_scale)

define	T_BUSERR		T_BUSERR
define	T_ADDRERR		T_ADDRERR
define	T_ILLINST		T_ILLINST
define	T_ZERODIV		T_ZERODIV
define	T_CHKINST		T_CHKINST
define	T_TRAPVINST		T_TRAPVINST
define	T_PRIVINST		T_PRIVINST
define	T_TRACE			T_TRACE
define	T_MMUFLT		T_MMUFLT
define	T_SSIR			T_SSIR
define	T_FMTERR		T_FMTERR
define	T_COPERR		T_COPERR
define	T_FPERR			T_FPERR
define	T_ASTFLT		T_ASTFLT
define	T_TRAP15		T_TRAP15
define	T_FPEMULI		T_FPEMULI
define	T_FPEMULD		T_FPEMULD

# PSL values
define	PSL_S			PSL_S
define	PSL_IPL7		PSL_IPL7
define	PSL_LOWIPL		PSL_LOWIPL
define	PSL_HIGHIPL		PSL_HIGHIPL
define	PSL_USER		PSL_USER
define	PSL_TS			PSL_T | PSL_S
define	SPL1			PSL_S | PSL_IPL1
define	SPL2			PSL_S | PSL_IPL2
define	SPL3			PSL_S | PSL_IPL3
define	SPL4			PSL_S | PSL_IPL4
define	SPL5			PSL_S | PSL_IPL5
define	SPL6			PSL_S | PSL_IPL6

# Various MMU/cache related constants
define	FC_USERD		FC_USERD
define	FC_SUPERD		FC_SUPERD
define	CACHE_ON		CACHE_ON
define	CACHE_OFF		CACHE_OFF
define	CACHE_CLR		CACHE_CLR
define	IC_CLEAR		IC_CLEAR
define	DC_CLEAR		DC_CLEAR
define	CACHE40_ON		CACHE40_ON
define	CACHE40_OFF		CACHE40_OFF
define	CACHE60_ON		CACHE60_ON
define	IC60_CABC		IC60_CABC
define	IC60_CUBC		IC60_CUBC

# pte/ste bits
define	PG_V			PG_V
define	PG_NV			PG_NV
define	PG_RO			PG_RO
define	PG_RW			PG_RW
define	PG_CI			PG_CI
define	PG_PROT			PG_PROT
define	PG_FRAME		PG_FRAME
define	SG_V			SG_V
define	SG_NV			SG_NV
define	SG_RW			SG_RW
define	SG_FRAME		SG_FRAME

# pcb fields
define  PCB_FLAGS		offsetof(struct pcb, pcb_flags)
define	PCB_PS			offsetof(struct pcb, pcb_ps)
define	PCB_USP			offsetof(struct pcb, pcb_usp)
define	PCB_REGS		offsetof(struct pcb, pcb_regs)
define	PCB_CMAP2		offsetof(struct pcb, pcb_cmap2)
define	PCB_ONFAULT		offsetof(struct pcb, pcb_onfault)
define	PCB_FPCTX		offsetof(struct pcb, pcb_fpregs)
define	SIZEOF_PCB		sizeof(struct pcb)
 
# exception frame offset/sizes
define	FR_SP			offsetof(struct frame, f_regs[15])
define	FR_HW			offsetof(struct frame, f_sr)
define	FR_ADJ			offsetof(struct frame, f_stackadj)
define	FR_SIZE			sizeof(struct trapframe)
define	SP			SP

# FP frame offsets
define	FPF_REGS		offsetof(struct fpframe, fpf_regs[0])
define	FPF_FPCR		offsetof(struct fpframe, fpf_fpcr)
define	FPF_FPSR		offsetof(struct fpframe, fpf_fpsr)
define	FPF_FPI			offsetof(struct fpframe, fpf_fpiar)

# system calls
define	SYS_exit		SYS_exit
define	SYS_execve		SYS_execve
define	SYS___sigreturn14	SYS___sigreturn14
define	SYS_compat_13_sigreturn13 SYS_compat_13_sigreturn13

# processor type from loader
define	ATARI_68020		ATARI_68020
define	ATARI_68030		ATARI_68030
define	ATARI_68040		ATARI_68040
define	ATARI_68060		ATARI_68060

# values for mmutype
define	MMU_68030		MMU_68030
define	MMU_68851		MMU_68851
define	MMU_68040		MMU_68040

# values for cputype
define	CPU_68020		CPU_68020
define	CPU_68030		CPU_68030
define	CPU_68040		CPU_68040
define	CPU_68060		CPU_68060

# AD_SCU definition needs this...
quote #define stio_addr		0

define	SCU_SOFTINT		AD_SCU + offsetof(struct scu, sys_int)
define	SCU_SYSMASK		AD_SCU + offsetof(struct scu, sys_mask)

# SVR4 binary compatibility
ifdef COMPAT_SVR4
define SVR4_SIGF_HANDLER	offsetof(struct svr4_sigframe, sf_handler)
define SVR4_SIGF_UC		offsetof(struct svr4_sigframe, sf_uc)
define SVR4_SYS_context		SVR4_SYS_context
define SVR4_SYS_exit		SVR4_SYS_exit
define SVR4_SETCONTEXT		SVR4_SETCONTEXT
endif
