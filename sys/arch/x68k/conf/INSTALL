#	$NetBSD: INSTALL,v 1.18 1999/08/05 15:05:11 minoura Exp $

#
#	INSTALL -- installation kernel.
#

include "arch/x68k/conf/std.x68k"

maxusers	8

## Enable the hooks used for initializing the memory-disk.
options 	MEMORY_DISK_HOOKS
options 	MEMORY_DISK_IS_ROOT     # Force root on memory-disk
options 	MEMORY_DISK_SERVER=0	# No user space hooks
#options 	MINIROOTSIZE=2400	# 1.2M, same as a 130mm floppy
#options 	MINIROOTSIZE=2880	# 1.44M, same as a 90mm floppy
options 	MINIROOTSIZE=2048
options 	BUFCACHE=5		# Reserve 5% of the RAM as the cache.

## System kernel configuration.  See options(4) for more detail.


## Options for variants of the m68k MPU
## you must have at least the correct one; REQUIRED
options 	M68030
options 	M68040
options 	M68060


#### System options specific to the x68k port

#options 	EXTENDED_MEMORY		# support for >16MB memory
options 	FPU_EMULATE		# software fpu emulation for MC68030
options 	FPSP			# floating point emulation for MC68040
options 	M060SP			# int/fp emulation for MC68060
options 	JUPITER			# support for "Jupiter-X" accelerator
#options 	MAPPEDCOPY		# use page mapping for large copyin/copyout
#options 	ZSCONSOLE,ZSCN_SPEED="9600"	# use serial console


#### System options that are the same for all ports

## Root device configuration: change the ?'s if you are going to use a
## nonstandard root partition (other than where the kernel is booted from)
## and/or nonstandard root type (not ffs or nfs).  Normally this can be
## automagically determined at boot time.

config		netbsd	root on ? type ?
#config		netbsd	root on sd0 type ffs

## RTC is offset from GMT; -540 means JST-9
options 	RTC_OFFSET=-540	# hardware clock is this many mins. west of GMT

## System call tracing (see ktrace(1)).
#options 	KTRACE

## Collect statistics on kernel malloc's and free's.  This does have a
## significant performance hit on slower machines, so it is intended for
## diagnostic use only.
#options 	KMEMSTATS

## System V compatible IPC subsystem.  (msgctl(2), semctl(2), and shmctl(2))
#options 	SYSVMSG		# System V message queues
#options 	SYSVSEM		# System V semaphores
#options 	SYSVSHM		# System V shared memory
#options 	SHMMAXPGS=1024	# 1024 pages is the default

## Loadable kernel module support
#options 	LKM

## NFS boot options; not supported currently: needs nfsboot program
#options 	NFS_BOOT_BOOTPARAM
#options 	NFS_BOOT_BOOTP
#options 	NFS_BOOT_DHCP

#### Debugging options

## The DDB in-kernel debugger runs at panic (unless DDB_ONPANIC=0), or at
## serial console break or keyboard reset, where the PROM would normally
## intercept.  DDB_HISTORY_SIZE adds up/down arrow command history.
#options 	DDB			# kernel dynamic debugger
#options 	DDB_HISTORY_SIZE=100	# enable history editing in DDB
#options 	DDB_ONPANIC=1		# see also sysctl(8): `ddb.onpanic'
#options 	PANICBUTTON		# interrupt switch invokes DDB

## You may also use gdb, on another computer connected to this machine over
## a serial port.  Both KGDBDEV and KGDBRATE should be specified; KGDBDEV is
## a dev_t encoded device number of the serial port to use.
## KGDB is not supported for now.
#options 	KGDB		# support for kernel gdb
#options 	KGDBDEV=0xc00	# kgdb device number
#options 	KGDBRATE=9600	# baud rate

## Compile the kernel with debugging symbols (`netbsd.gdb' is the debug file),
## such that gdb(1) can be used on a kernel coredump.

#makeoptions 	DEBUG="-g"
makeoptions	COPTS="-Os -fno-inline"

## Adds code to the kernel that does internal consistency checks, and will
## cause the kernel to panic if corruption of internal data structures
## is detected.
#options 	DIAGNOSTIC	# extra kernel sanity checking

## Enable (possibly expensive) debugging code that may also display messages
## on the system console
#options 	DEBUG

## Make SCSI error messages more verbose when explaining their meanings.
#options 	SCSIVERBOSE

## `INSECURE' turns off the kernel security level (securelevel = 0 always).
## This allows writing to /dev/mem, loading kernel modules while multi-user,
## and other insecurities good only for development work.  Do not use this
## option on a production machine.
#options 	INSECURE

## Allow non-root users to grab /dev/console with programs such as xconsole.
## `xconsole' therefore does not need setuid root with this option enabled.
#options 	UCONSOLE

## `FDSCRIPTS' allows non-readable but executable scripts by providing a
## pre-opened opaque file to the script interpreter.  `SETUIDSCRIPTS',
## which implies FDSCRIPTS, allows scripts to be set-user-id using the same
## opaque file mechanism.  Perl calls this "secure setuid scripts."

#options 	FDSCRIPTS
#options 	SETUIDSCRIPTS

## Options for compatibility with previous releases foreign system binaries.

#options 	COMPAT_43	# 4.3BSD system interfaces
#options 	COMPAT_09	# NetBSD 0.9 binary compatibility
#options 	COMPAT_10	# NetBSD 1.0 binary compatibility
#options 	COMPAT_11	# NetBSD 1.1 binary compatibility
#options 	COMPAT_12	# NetBSD 1.2 binary compatibility
#options 	COMPAT_13	# NetBSD 1.3 binary compatibility
#options 	COMPAT_14	# NetBSD 1.4 binary compatibility
#options 	COMPAT_M68K4K	# NetBSD/m68k4k binaries
#options 	COMPAT_SUNOS	# SunOS 4.x binary compatibility; broken
#options 	COMPAT_SVR4	# SVR4 binary compatibility; broken
#options 	COMPAT_LINUX	# Linux/m68k binary compatibility
#options 	EXEC_ELF32	# 32-bit ELF executables (Linux, SVR4)

## File systems.
file-system	FFS		# Berkeley Fast Filesystem
file-system	NFS		# Sun NFS-compatible filesystem client
file-system	KERNFS		# kernel data-structure filesystem
#file-system	NULLFS		# NULL layered filesystem (buggy)
#file-system	MFS		# memory-based filesystem
#file-system	FDESC		# user file descriptor filesystem
#file-system	UMAPFS		# uid/gid remapping filesystem
#file-system	LFS		# Log-structured filesystem (experimental)
#file-system	PORTAL		# portal filesystem (experimental)
#file-system	PROCFS		# /proc
file-system	CD9660		# ISO 9660 + Rock Ridge file system
#file-system	UNION		# union file system (a little buggy)
file-system	MSDOSFS		# MS-DOS FAT filesystem(s).
#file-system 	ADOSFS		# AmigaDOS filesystem

## File system options.
#options 	NFSSERVER	# Sun NFS-compatible filesystem server
#options 	QUOTA		# FFS quotas
#options 	FFS_EI		# FFS Endian Independent support

## Network protocol support.  In most environments, INET is required.
options 	INET		# IP (Internet Protocol) v4
options 	TCP_COMPAT_42	# 4.2BSD IP implementation compatibility
#options 	GATEWAY		# packet forwarding ("router switch")
#options 	MROUTING	# packet forwarding of multicast packets
#options 	DIRECTED_BROADCAST	# allow broadcasts through routers
#options 	NS		# Xerox NS networking
#options 	NSIP		# Xerox NS tunneling over IP
#options 	ISO,TPIP	# OSI networking
#options 	EON		# OSI tunneling over IP
#options 	CCITT,LLC,HDLC	# X.25 packet switched protocol
#options 	NETATALK	# AppleTalk (over Ethernet) protocol
#options 	NTP		# Network Time Protocol in-kernel support
#options 	PPS_SYNC	# Add serial line synchronization for NTP
#options 	PFIL_HOOKS	# Add pfil(9) hooks, intended for custom LKMs.
#options 	IPFILTER_LOG	# Add ipmon(8) logging for ipfilter device
#options 	PPP_BSDCOMP	# Add BSD compression to ppp device
#options 	PPP_DEFLATE	# Add deflate (libz) compression to ppp device
#options 	PPP_FILTER	# Add active filters for ppp (via bpf)



#### Device configurations

## Fundamental devices; see also std.x68k
dmac0	at intio0 addr 0xe84000		# DMA controler
xel0	at intio0
opm0	at intio0 addr 0xe90000		# OPM: required for fdc

## Display devices and console
grfbus0	at mainbus0			# bitmapped displays
grf0	at grfbus0			# multiplane graphics
#grf1	at grfbus0			# flexible graphics

kbd0	at mfp0				# standard keyboard
ite0	at grf0				# internal terminal emulator
options 	ITE_KERNEL_ATTR=4	# bold for kernel messages
					# see /sys/arch/x68k/dev/itevar.h
#pseudo-device	pow		2	# software power switch

## floppy disks
fdc0	at intio0 addr 0xe94000 intr 96 dma 0 dmaintr 100 # floppy controler
fd*	at fdc0 unit ?			# builtin floppy drives

## SCSI devices
scsirom0 at intio0				# SCSI BIOS
scsirom1 at intio0				# SCSI BIOS
spc*	at scsirom?				# genuin SCSI
scsibus* at spc?
mha0	at scsirom?				# Mankai MK-HA1 (Mach-2)
scsibus* at mha0

sd*	at scsibus? target ? lun ?	# SCSI disks
cd*	at scsibus? target ? lun ?	# SCSI CD-ROMs
st*	at scsibus? target ? lun ?	# SCSI tapes
#ss*	at scsibus? target ? lun ?	# SCSI scanners
#ch*	at scsibus? target ? lun ?	# SCSI changer devices
#uk*	at scsibus? target ? lun ?	# SCSI unknown devices

## Serial ports
zsc0	at intio0 addr 0xe98000 intr 112
zstty0	at zsc0 channel 0		# built-in RS-232C
#ms0	at zsc0 channel 1		# standard mouse
#zsc1	at intio0 addr 0xeafc00 intr 113
#zstty2	at zsc1 channel 0
#zstty3	at zsc1 channel 1
#zsc2	at intio0 addr 0xeafc10 intr 114
#zstty4	at zsc2 channel 0
#zstty5	at zsc2 channel 1

#pseudo-device	sram			# battery-backuped static RAM
#pseudo-device	bell			# OPM bell

#xcom0	at mainbus0			# NS16550 fast serial
#xcom1	at mainbus0

#par0	at mainbus0			# Builtin printer port

## Audio device; broken
#okiadpcm0 at intio0 addr 0xe92000 intr 106 errintr 107 dma 3
#audio*	at okiadpcm*

## Network interfaces
neptune0 at intio0 addr 0xece000 intr 249	# Neptune-X
neptune1 at intio0 addr 0xece400 intr 249	# Neptune-X at alt. addr.
ne0	at neptune? addr 0x300			# NE2000 or clone
#se0	at scsibus? target ? lun ?		# Ether+; broken


#### Pseudo devices

## A disk-like interface to files.  Can be used to create floppy, CD,
## miniroot images, etc.

#pseudo-device	vnd	4

## Concatenated and striped disks; with this, you can create a software-based
## disk array similar to a "RAID 0" setup.  See ccd(4).

#pseudo-device	ccd	4

## RAIDframe disk driver: software RAID driver.  See raid(4).

#pseudo-device	raid	4

## Memory disk device, used on boot floppies with compressed
## kernel-plus-root-disk images.

pseudo-device	md	1

## Loopback network interface; required
pseudo-device	loop

## SLIP and CSLIP interfaces, for IP over a serial line.
pseudo-device	sl		1

## PPP, the successor to SLIP.  See pppd(8).
#pseudo-device	ppp		1

## Network "tunnel" device, allowing protocol stacks to run in the userland.
## This is used by the third-party user-mode "ppp" program, and others.
#pseudo-device	tun		4

## Generic L3 over IP tunnel
#pseudo-device	gre		2	# generic L3 over IP tunnel

## Berkeley Packet Filter, required to run RARPD.  A generic C-language
## interface that allows selective examining of incoming packets.
#pseudo-device	bpfilter	8

## IP Filter, used in firewall and NAT applications.  See ipnat(8) for
## one example of the use of the IP Filter.
#pseudo-device	ipfilter


#### Other device configuration

## Pseudo ttys, required for network logins and programs like screen.
## 32 is a good number for average systems; you may have as many as you
## like, though 256 is more or less the upper limit.  Increasing this
## number still requires you to run /dev/MAKEDEV to create the files
## for the ptys.

#pseudo-device	pty		8	# pseudo-ttys (for network, etc.)

## Random device, used to implement /dev/random (a source of random noise),
## and generate randomness for some kernel formulae.

#pseudo-device	rnd
