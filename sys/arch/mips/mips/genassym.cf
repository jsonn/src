#	$NetBSD: genassym.cf,v 1.18.2.1 2000/06/22 17:01:34 minoura Exp $
#
# Copyright (c) 1997
#  Jonathan Stone.  All rights reserved.
# Copyright (c) 1992, 1993
#	The Regents of the University of California.  All rights reserved.
#
# This code is derived from software contributed to Berkeley by
# Ralph Campbell.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	from @(#)genassym.c	8.2 (Berkeley) 9/23/93
#

include <sys/param.h>
include <sys/buf.h>
include <sys/map.h>
include <sys/proc.h>
include <sys/mbuf.h>
include <sys/user.h>

include <vm/vm.h>

include <uvm/uvm.h>
include <uvm/uvm_extern.h>

include <mips/regnum.h>
include <mips/vmparam.h>
include <mips/pte.h>
include <mips/locore.h>

define	P_FORW			offsetof(struct proc, p_forw)
define	P_BACK			offsetof(struct proc, p_back)
define	P_PRIORITY		offsetof(struct proc, p_priority)
define	P_ADDR			offsetof(struct proc, p_addr)
define	P_STAT			offsetof(struct proc, p_stat)

define	SONPROC			SONPROC

define	P_MD_REGS		offsetof(struct proc, p_md.md_regs)
define	P_MD_UPTE_0		offsetof(struct proc, p_md.md_upte[0])
define	P_MD_UPTE_1		offsetof(struct proc, p_md.md_upte[1])

define	U_PCB_FPREGS		offsetof(struct user, u_pcb.pcb_fpregs)
define	U_PCB_CONTEXT		offsetof(struct user, u_pcb.pcb_context)
define	U_PCB_ONFAULT		offsetof(struct user, u_pcb.pcb_onfault)
define	U_PCB_SEGTAB		offsetof(struct user, u_pcb.pcb_segtab)

define	VM_MIN_ADDRESS		VM_MIN_ADDRESS
define	VM_MIN_KERNEL_ADDRESS	VM_MIN_KERNEL_ADDRESS

define	UVM_PAGE_IDLE_ZERO	offsetof(struct uvm, page_idle_zero)
define	UVMEXP_SWTCH		offsetof(struct uvmexp, swtch)

define	SIGFPE		 	SIGFPE
define	SIGILL		 	SIGILL
define	SIGSEGV			SIGSEGV

define	MIPSX_FLUSHICACHE	offsetof(mips_locore_jumpvec_t, flushICache)
define	MIPSX_CPU_SWITCH_RESUME	sizeof(long *) * 0
define	MIPSX_CPU_IDLE		sizeof(long *) * 2

define	MIPS1_PG_G		MIPS1_PG_G
define	MIPS1_PG_V		MIPS1_PG_V
define	MIPS3_PG_G		MIPS3_PG_G
define	MIPS3_PG_V		MIPS3_PG_V
define	MIPS3_PG_HVPN		MIPS3_PG_HVPN
define	MIPS3_PG_ASID		MIPS3_PG_ASID
define	MIPS3_PG_ODDPG		MIPS3_PG_ODDPG

define	FRAME_SIZ		sizeof(struct frame)
define	FRAME_ZERO		sizeof(mips_reg_t) * ZERO
define	FRAME_AST		sizeof(mips_reg_t) * AST
define	FRAME_V0		sizeof(mips_reg_t) * V0
define	FRAME_V1		sizeof(mips_reg_t) * V1
define	FRAME_A0		sizeof(mips_reg_t) * A0
define	FRAME_A1		sizeof(mips_reg_t) * A1
define	FRAME_A2		sizeof(mips_reg_t) * A2
define	FRAME_A3		sizeof(mips_reg_t) * A3
define	FRAME_T0		sizeof(mips_reg_t) * T0
define	FRAME_T1		sizeof(mips_reg_t) * T1
define	FRAME_T2		sizeof(mips_reg_t) * T2
define	FRAME_T3		sizeof(mips_reg_t) * T3
define	FRAME_T4		sizeof(mips_reg_t) * T4
define	FRAME_T5		sizeof(mips_reg_t) * T5
define	FRAME_T6		sizeof(mips_reg_t) * T6
define	FRAME_T7		sizeof(mips_reg_t) * T7
define	FRAME_S0		sizeof(mips_reg_t) * S0
define	FRAME_S1		sizeof(mips_reg_t) * S1
define	FRAME_S2		sizeof(mips_reg_t) * S2
define	FRAME_S3		sizeof(mips_reg_t) * S3
define	FRAME_S4		sizeof(mips_reg_t) * S4
define	FRAME_S5		sizeof(mips_reg_t) * S5
define	FRAME_S6		sizeof(mips_reg_t) * S6
define	FRAME_S7		sizeof(mips_reg_t) * S7
define	FRAME_T8		sizeof(mips_reg_t) * T8
define	FRAME_T9		sizeof(mips_reg_t) * T9
define	FRAME_K0		sizeof(mips_reg_t) * K0
define	FRAME_K1		sizeof(mips_reg_t) * K1
define	FRAME_GP		sizeof(mips_reg_t) * GP
define	FRAME_SP		sizeof(mips_reg_t) * SP
define	FRAME_S8		sizeof(mips_reg_t) * S8
define	FRAME_RA		sizeof(mips_reg_t) * RA
define	FRAME_SR		sizeof(mips_reg_t) * SR
define	FRAME_MULLO		sizeof(mips_reg_t) * MULLO
define	FRAME_MULHI		sizeof(mips_reg_t) * MULHI
define	FRAME_BADVADDR		sizeof(mips_reg_t) * BADVADDR
define	FRAME_CAUSE		sizeof(mips_reg_t) * CAUSE
define	FRAME_EPC		sizeof(mips_reg_t) * PC

define	FRAME_FSR		sizeof(mips_fpreg_t) * 32
define	FRAME_FP0		sizeof(mips_fpreg_t) * 0
define	FRAME_FP1		sizeof(mips_fpreg_t) * 1
define	FRAME_FP2		sizeof(mips_fpreg_t) * 2
define	FRAME_FP3		sizeof(mips_fpreg_t) * 3
define	FRAME_FP4		sizeof(mips_fpreg_t) * 4
define	FRAME_FP5		sizeof(mips_fpreg_t) * 5
define	FRAME_FP6		sizeof(mips_fpreg_t) * 6
define	FRAME_FP7		sizeof(mips_fpreg_t) * 7
define	FRAME_FP8		sizeof(mips_fpreg_t) * 8
define	FRAME_FP9		sizeof(mips_fpreg_t) * 9
define	FRAME_FP10		sizeof(mips_fpreg_t) * 10
define	FRAME_FP11		sizeof(mips_fpreg_t) * 11
define	FRAME_FP12		sizeof(mips_fpreg_t) * 12
define	FRAME_FP13		sizeof(mips_fpreg_t) * 13
define	FRAME_FP14		sizeof(mips_fpreg_t) * 14
define	FRAME_FP15		sizeof(mips_fpreg_t) * 15
define	FRAME_FP16		sizeof(mips_fpreg_t) * 16
define	FRAME_FP17		sizeof(mips_fpreg_t) * 17
define	FRAME_FP18		sizeof(mips_fpreg_t) * 18
define	FRAME_FP19		sizeof(mips_fpreg_t) * 19
define	FRAME_FP20		sizeof(mips_fpreg_t) * 20
define	FRAME_FP21		sizeof(mips_fpreg_t) * 21
define	FRAME_FP22		sizeof(mips_fpreg_t) * 22
define	FRAME_FP23		sizeof(mips_fpreg_t) * 23
define	FRAME_FP24		sizeof(mips_fpreg_t) * 24
define	FRAME_FP25		sizeof(mips_fpreg_t) * 25
define	FRAME_FP26		sizeof(mips_fpreg_t) * 26
define	FRAME_FP27		sizeof(mips_fpreg_t) * 27
define	FRAME_FP28		sizeof(mips_fpreg_t) * 28
define	FRAME_FP29		sizeof(mips_fpreg_t) * 29
define	FRAME_FP30		sizeof(mips_fpreg_t) * 30
define	FRAME_FP31		sizeof(mips_fpreg_t) * 31


#define	KERNFRAME_SIZ	(sizeof(register_t) * (6 + 2 ) + sizeof(mips_reg_t) * (17 + 5))
define	KERNFRAME_SIZ	sizeof(struct kernframe)
define	KERNFRAME_ARG5	offsetof(struct kernframe, cf_args[4])
define	KERNFRAME_ARG6	offsetof(struct kernframe, cf_args[5])
define	KERNFRAME_SP	offsetof(struct kernframe, cf_sp)
define	KERNFRAME_RA	offsetof(struct kernframe, cf_ra)

#  offset of trapframe in struct kernframe
define	TF_BASE		offsetof(struct kernframe, cf_frame)

define	TF_REG_AST	offsetof(struct trapframe, tf_regs[0])
define	TF_REG_V0	offsetof(struct trapframe, tf_regs[1])
define	TF_REG_V1	offsetof(struct trapframe, tf_regs[2])
define	TF_REG_A0	offsetof(struct trapframe, tf_regs[3])
define	TF_REG_A1	offsetof(struct trapframe, tf_regs[4])
define	TF_REG_A2	offsetof(struct trapframe, tf_regs[5])
define	TF_REG_A3	offsetof(struct trapframe, tf_regs[6])
define	TF_REG_T0	offsetof(struct trapframe, tf_regs[7])
define	TF_REG_T1	offsetof(struct trapframe, tf_regs[8])
define	TF_REG_T2	offsetof(struct trapframe, tf_regs[9])
define	TF_REG_T3	offsetof(struct trapframe, tf_regs[10])
define	TF_REG_T4	offsetof(struct trapframe, tf_regs[11])
define	TF_REG_T5	offsetof(struct trapframe, tf_regs[12])
define	TF_REG_T6	offsetof(struct trapframe, tf_regs[13])
define	TF_REG_T7	offsetof(struct trapframe, tf_regs[14])
define	TF_REG_T8	offsetof(struct trapframe, tf_regs[15])
define	TF_REG_T9	offsetof(struct trapframe, tf_regs[16])
define	TF_REG_RA	offsetof(struct trapframe, tf_ra)
define	TF_REG_SR	offsetof(struct trapframe, tf_sr)
define	TF_REG_MULLO	offsetof(struct trapframe, tf_mullo)
define	TF_REG_MULHI	offsetof(struct trapframe, tf_mulhi)
define	TF_REG_EPC	offsetof(struct trapframe, tf_epc)

define	CTXSWFRAME_SIZ	sizeof(mips_reg_t) * 12
define	SF_REG_SR	sizeof(mips_reg_t) * 11
define	SF_REG_RA	sizeof(mips_reg_t) * 10
define	SF_REG_S0	sizeof(mips_reg_t) * 0
define	SF_REG_S1	sizeof(mips_reg_t) * 1
define	SF_REG_S2	sizeof(mips_reg_t) * 2
define	SF_REG_S3	sizeof(mips_reg_t) * 3
define	SF_REG_S4	sizeof(mips_reg_t) * 4
define	SF_REG_S5	sizeof(mips_reg_t) * 5
define	SF_REG_S6	sizeof(mips_reg_t) * 6
define	SF_REG_S7	sizeof(mips_reg_t) * 7
define	SF_REG_SP	sizeof(mips_reg_t) * 8
define	SF_REG_S8	sizeof(mips_reg_t) * 9
