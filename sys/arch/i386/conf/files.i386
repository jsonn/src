#	$NetBSD: files.i386,v 1.182.2.4 2001/09/21 22:35:03 nathanw Exp $
#
# new style config file for i386 architecture
#

# maxpartitions must be first item in files.${ARCH}.newconf
maxpartitions 8

maxusers 2 16 128

# APM options
defopt	opt_apm.h	APM_DISABLE APM_FORCE_64K_SEGMENTS APM_NO_IDLE
			APM_NO_STANDBY APM_V10_ONLY APM_NO_V12 APMDEBUG
			APMDEBUG_VALUE APM_POWER_PRINT APM_DISABLE_INTERRUPTS
			APM_ALLOW_BOGUS_SEGMENTS

# Processor type options.
defopt	opt_cputype.h	I386_CPU I486_CPU I586_CPU I686_CPU

# delay before cpu_reset() for reboot.
defopt	CPURESET_DELAY

# VM86 emulation
defopt	VM86

# Floating point emulation
defopt	MATH_EMULATE

# User-settable LDT (used by WINE)
defopt	USER_LDT

# Speed hack; make NOPs dummies (might break on some machines)
defopt	DUMMY_NOPS

# Performance counter support
defopt	PERFCTRS

# MTRR support
defopt	MTRR

# X server support in console drivers
defopt	opt_xserver.h	XSERVER XSERVER_DDB

# The REAL{BASE,EXT}MEM options
defopt	opt_realmem.h	REALBASEMEM REALEXTMEM

# understand boot device passed by pre-1.3 bootblocks
defopt	COMPAT_OLDBOOT

# PCI BIOS options
defopt	opt_pcibios.h	PCIBIOS PCIBIOSVERBOSE
	PCIBIOS_ADDR_FIXUP PCIBIOS_BUS_FIXUP
	PCIBIOS_INTR_FIXUP PCIBIOS_INTR_FIXUP_FORCE
	PCIBIOS_INTR_GUESS PCIBIOS_IRQS_HINT PCIINTR_DEBUG

# Large page size
defopt	LARGEPAGES

file	arch/i386/i386/autoconf.c
file	arch/i386/i386/bus_machdep.c
file	arch/i386/i386/conf.c
file	arch/i386/i386/consinit.c
file	arch/i386/i386/db_dbgreg.s	ddb
file	arch/i386/i386/db_disasm.c	ddb
file	arch/i386/i386/db_interface.c	ddb
file	arch/i386/i386/db_memrw.c	ddb | kgdb
file	arch/i386/i386/db_trace.c	ddb
file	arch/i386/i386/disksubr.c	disk
file	arch/i386/i386/gdt.c
file	arch/i386/i386/in_cksum.s	inet
file	arch/i386/i386/ipkdb_glue.c	ipkdb
file	arch/i386/i386/kgdb_machdep.c	kgdb
file	arch/i386/i386/machdep.c
file	arch/i386/i386/math_emulate.c	math_emulate
file	arch/i386/i386/mem.c
file	arch/i386/i386/microtime.s
file	arch/i386/i386/mtrr_i686.c	mtrr
file	arch/i386/i386/mtrr_k6.c	mtrr
file	netns/ns_cksum.c		ns
file	arch/i386/i386/pmap.c
file	arch/i386/i386/process_machdep.c
file	arch/i386/i386/procfs_machdep.c	procfs
file	arch/i386/i386/softintr.c
file	arch/i386/i386/sys_machdep.c
file	arch/i386/i386/syscall.c
file	arch/i386/i386/trap.c
file	arch/i386/i386/vm_machdep.c
file	dev/cons.c

file	arch/i386/i386/pmc.c		perfctrs

file	crypto/des/arch/i386/des_enc.S		ipsec & ipsec_esp
#file	crypto/des/arch/i386/des_cbc.S		ipsec & ipsec_esp
file	crypto/blowfish/arch/i386/bf_enc.S	ipsec & ipsec_esp
#file	crypto/blowfish/arch/i386/bf_cbc.S	ipsec & ipsec_esp

#
# Machine-independent SCSI drivers
#

include	"dev/scsipi/files.scsipi"
major	{sd = 4}
major	{cd = 6}

#
# Machine-independent ATA drivers
#

include	"dev/ata/files.ata"
major	{wd = 0}

# Memory Disk for install floppy
file	arch/i386/i386/md_root.c	memory_disk_hooks
major	{md = 17}

# RAIDframe
major	{raid = 18}

# Logical disk
major	{ld = 19}

#
# Machine-independent I2O drivers
#

include	"dev/i2o/files.i2o"

# attribute used to bring in BIOS trampoline code for real-mode probing
# of certain devices/BIOS features
define	bioscall
file	arch/i386/i386/bioscall.s	bioscall needs-flag

# BIOS32 routines
define	bios32
file	arch/i386/i386/bios32.c		bios32 needs-flag

#
# System bus types
#

define	mainbus { }
# XXX BIOS32 only if something that uses it is configured!
device	mainbus: isabus, eisabus, mcabus, pcibus, mainbus, bios32
attach	mainbus at root
file	arch/i386/i386/mainbus.c	mainbus

#
# PCI-only drivers
# XXX MUST BE INCLUDED BEFORE files.isa, as long as files.isa attaches
# XXX devices to 'pci'.
#

include	"dev/pci/files.pci"
include "dev/pci/files.agp"
file	arch/i386/pci/pci_machdep.c	pci
file 	arch/i386/pci/agp_machdep.c	agp
file	arch/i386/pci/pcibios.c		pcibios
file	arch/i386/pci/pci_intr_fixup.c	pcibios & pcibios_intr_fixup
file	arch/i386/pci/piix.c		pcibios & pcibios_intr_fixup
file	arch/i386/pci/opti82c558.c	pcibios & pcibios_intr_fixup
file	arch/i386/pci/opti82c700.c	pcibios & pcibios_intr_fixup
file	arch/i386/pci/sis85c503.c	pcibios & pcibios_intr_fixup
file	arch/i386/pci/via82c586.c	pcibios & pcibios_intr_fixup
file	arch/i386/pci/amd756.c		pcibios & pcibios_intr_fixup
file	arch/i386/pci/ali1543.c		pcibios & pcibios_intr_fixup
file	arch/i386/pci/pci_bus_fixup.c	pcibios & pcibios_bus_fixup
file	arch/i386/pci/pci_addr_fixup.c	pcibios & pcibios_addr_fixup
defopt	PCI_CONF_MODE
file	arch/i386/pci/pciide_machdep.c	pciide
file	arch/i386/pci/pcic_pci_machdep.c	pcic_pci

# PCI-Host bridge chipsets
device	pchb: pcibus, agpbus, agp_ali, agp_amd, agp_i810, agp_intel, agp_sis,
	      agp_via
attach	pchb at pci
file	arch/i386/pci/pchb.c		pchb			needs-flag
file	arch/i386/pci/pchb_rnd.c	pchb & rnd

# PCI-EISA bridges
device	pceb: eisabus, isabus
attach	pceb at pci
file	arch/i386/pci/pceb.c		pceb

# PCI-ISA bridges
device	pcib: isabus
attach	pcib at pci
file	arch/i386/pci/pcib.c		pcib

# PCI-MCA bridges
device	pcmb: mcabus
attach	pcmb at pci
file	arch/i386/pci/pcmb.c		pcmb

# Game adapter (joystick)
device	joy
file	arch/i386/isa/joy.c		joy needs-flag

# PCI joysticks
attach	joy at pci with pci_joy
file	arch/i386/pci/joy_pci.c		pci_joy

#
# ISA and mixed ISA+EISA or ISA+PCI drivers
#

include	"dev/isa/files.isa"
major	{mcd = 7}
#major	{scd = 15}

# XXX THE FOLLOWING BLOCK SHOULD GO INTO dev/pci/files.pci, BUT CANNOT
# XXX BECAUSE NOT 'lpt' IS DEFINED IN files.isa, RATHER THAN files.
# XXX (when the conf/files and files.isa bogons are fixed, this can
# XXX be fixed as well.)

attach	lpt at puc with lpt_puc
file	dev/pci/lpt_puc.c	lpt_puc

file	arch/i386/isa/isa_machdep.c	isa

# PC clock
file	arch/i386/isa/clock.c		isa
file	dev/clock_subr.c		isa

# Numeric Processing Extension; Math Co-processor
device	npx
file	arch/i386/isa/npx.c		npx needs-flag

attach	npx at isa with npx_isa
file	arch/i386/isa/npx_isa.c		npx_isa

# attribute used to represent the "keyboard controller"
# XXX should be a real device
define	pckbcport { [irq = -1], [port = -1] }

# PC console support a la "pccons"
device	pc: tty, pckbcport
attach	pc at isa
device	pcconskbd
attach	pcconskbd at pckbc
file	arch/i386/isa/pccons.c		pc | pcconskbd needs-flag

# PC Mice; Logitech-style, Microsoft-style, and PS/2-style
device	olms
attach	olms at isa
file	arch/i386/isa/olms.c		olms needs-flag
device	lms: wsmousedev
attach	lms at isa
file	arch/i386/isa/lms.c		lms
device	omms
attach	omms at isa
file	arch/i386/isa/omms.c		omms needs-flag
device	mms: wsmousedev
attach	mms at isa
file	arch/i386/isa/mms.c		mms
device	opms
attach	opms at pckbcport with opms_hack
attach	opms at pckbc with opms_pckbc
file	arch/i386/isa/pms.c		opms | opms_hack | opms_pckbc needs-flag

include	"dev/wscons/files.wscons"
include	"dev/wsfont/files.wsfont"

include	"dev/pckbc/files.pckbc"

device	sysbeep
attach	sysbeep at pcppi

# Floppy disk controller
device	fdc {drive = -1}: isadma
file	dev/isa/fd.c			fdc needs-flag

attach	fdc at isa with fdc_isa
file	dev/isa/fdc_isa.c		fdc_isa

device	fd: disk
attach	fd at fdc
major	{fd = 2}

attach	joy at isa with joy_isa
file	arch/i386/isa/joy_isa.c		joy_isa

# Adaptec AHA-284x VL SCSI controllers
# device declaration in sys/conf/files
attach	ahc at isa with ahc_isa: ahc_aic77xx, smc93cx6
file	arch/i386/isa/ahc_isa.c		ahc_isa

#
# EISA-only drivers
#

include	"dev/eisa/files.eisa"
file	arch/i386/eisa/eisa_machdep.c	eisa

#
# MCA-only drivers
#

device	mca {[slot = -1]} : bioscall
include	"dev/mca/files.mca"
file	arch/i386/mca/mca_machdep.c	mca

major	{ ed = 20 }

# ISA Plug 'n Play devices
file	arch/i386/isa/isapnp_machdep.c	isapnp

attach	joy at isapnp with joy_isapnp
file	arch/i386/isa/joy_isapnp.c	joy_isapnp

#
# VME support
#
include	"dev/vme/files.vme"

#
# Other mainbus-attached devices
#

# Advanced Power Management support (APM)
device	apm: bioscall
attach	apm at mainbus
file	arch/i386/i386/apm.c		apm needs-count
file	arch/i386/i386/apmcall.s	apm

#
# Compatibility modules
#

# VM86 mode
file	arch/i386/i386/vm86.c			vm86

# Binary compatibility with previous NetBSD releases (COMPAT_XX)
file	arch/i386/i386/compat_13_machdep.c	compat_13 | compat_aout

# SVR4 binary compatibility (COMPAT_SVR4)
include	"compat/svr4/files.svr4"
file	arch/i386/i386/svr4_machdep.c		compat_svr4
file	arch/i386/i386/svr4_sigcode.s		compat_svr4
file	arch/i386/i386/svr4_syscall.c		compat_svr4

# MACH binary compatibility (COMPAT_MACH)
include	"compat/mach/files.mach"
file	arch/i386/i386/mach_machdep.c		compat_mach
file	arch/i386/i386/mach_sigcode.s		compat_mach
file	arch/i386/i386/mach_syscall.c		compat_mach
file	arch/i386/i386/macho_machdep.c		exec_macho

# iBCS-2 binary compatibility (COMPAT_IBCS2)
include	"compat/ibcs2/files.ibcs2"
file	arch/i386/i386/ibcs2_machdep.c		compat_ibcs2
file	arch/i386/i386/ibcs2_sigcode.s		compat_ibcs2
file	arch/i386/i386/ibcs2_syscall.c		compat_ibcs2

# Linux binary compatibility (COMPAT_LINUX)
include	"compat/linux/files.linux"
include	"compat/linux/arch/i386/files.linux_i386"
file	arch/i386/i386/linux_sigcode.s		compat_linux
file	arch/i386/i386/linux_syscall.c		compat_linux
file	arch/i386/i386/linux_trap.c		compat_linux

# FreeBSD binary compatibility (COMPAT_FREEBSD)
include	"compat/freebsd/files.freebsd"
file	arch/i386/i386/freebsd_machdep.c	compat_freebsd
file	arch/i386/i386/freebsd_sigcode.s	compat_freebsd
file	arch/i386/i386/freebsd_syscall.c	compat_freebsd

# a.out binary compatibility (COMPAT_AOUT)
include	"compat/aout/files.aout"

# Win32 binary compatibility (COMPAT_PECOFF)
include	"compat/pecoff/files.pecoff"

# OSS audio driver compatibility
include	"compat/ossaudio/files.ossaudio"

# network devices MII bus
include	"dev/mii/files.mii"

#
# CARDBUS
#
include	"dev/cardbus/files.cardbus"
file	arch/i386/i386/rbus_machdep.c	cardbus

# XXXX pcic here because it needs to be late.  The catch: pcic needs
# to be late, so devices which attach to it are attached late.  But it
# needs to be before its isa and pci attachments.  This answer is
# non-optimal, but I don't have a better answer right now.

# PCIC pcmcia controller
# XXX this needs to be done very late, so it's done here.  This feels
# like a kludge, but it might be for the best.

defopt	PCIC_ISA_ALLOC_IOBASE
defopt	PCIC_ISA_ALLOC_IOSIZE
defopt	PCIC_ISA_INTR_ALLOC_MASK

device	pcic: pcmciabus
file	dev/ic/i82365.c			pcic

# PCIC pcmcia controller on ISA bus.
attach	pcic at isa with pcic_isa
file	dev/isa/i82365_isa.c		pcic_isa

# PCIC pcmcia controller on PCI bus.
attach	pcic at pci with pcic_pci
file	dev/pci/i82365_pci.c		pcic_pci

# PCIC pcmcia controller on PnP board
attach	pcic at isapnp with pcic_isapnp
file	dev/isapnp/i82365_isapnp.c	pcic_isapnp

# Code common to ISA and ISAPnP attachments
file	dev/isa/i82365_isasubr.c	pcic_isa | pcic_isapnp | pcic_pci

# XXXX tcic here because it needs to be late.  The catch: tcic needs
# to be late, so devices which attach to it are attached late.  But it
# needs to be before its isa and pci attachments.  This answer is
# non-optimal, but I don't have a better answer right now.

# TCIC pcmcia controller
# XXX this needs to be done very late, so it's done here.  This feels
# like a kludge, but it might be for the best.

defopt	TCIC_ISA_ALLOC_IOBASE
defopt	TCIC_ISA_ALLOC_IOSIZE
defopt	TCIC_ISA_INTR_ALLOC_MASK

device	tcic: pcmciabus
file	dev/ic/tcic2.c			tcic

# TCIC pcmcia controller
attach	tcic at isa with tcic_isa
file	dev/isa/tcic2_isa.c		tcic_isa

# this wants to be probed as late as possible.
#
# Machine-independent PCMCIA drivers
#
include	"dev/pcmcia/files.pcmcia"


include	"dev/usb/files.usb"

include	"dev/ieee1394/files.ieee1394"

include	"arch/i386/pnpbios/files.pnpbios"
