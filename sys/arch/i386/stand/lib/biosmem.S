/*	$NetBSD: biosmem.S,v 1.6.2.1 2005/11/10 13:56:54 skrll Exp $	*/

/*
 * Copyright (c) 1996
 * 	Perry E. Metzger.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgements:
 *	This product includes software developed for the NetBSD Project
 *	by Perry E. Metzger.
 * 4. The names of the authors may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

#include <machine/asm.h>

	.text

/* get mem below 1M, in kByte */

ENTRY(getbasemem)
	pushl	%ebp
	movl	%esp,%ebp
	pushl	%ebx
	push	%esi
	push	%edi

	call	_C_LABEL(prot_to_real)
	.code16

	int	$0x12
	# zero-extend 16-bit result to 32 bits.
	movl	$0, %ebx
	mov	%ax,%bx

	calll	_C_LABEL(real_to_prot)
	.code32

	movl	%ebx, %eax

	pop	%edi
	pop	%esi
	popl	%ebx
	popl	%ebp
	ret

/* get mem above 1M, in kByte */

ENTRY(getextmem1)
	pushl	%ebp
	movl	%esp,%ebp
	pushl	%ebx
	push	%esi
	push	%edi

	call	_C_LABEL(prot_to_real)
	.code16

	movb	$0x88,%ah
	int	$0x15

	# zero-extend 16-bit result to 32 bits.
	movl	$0, %ebx
	mov	%ax,%bx

	calll	_C_LABEL(real_to_prot)
	.code32

	movl	%ebx, %eax

	pop	%edi
	pop	%esi
	popl	%ebx
	popl	%ebp
	ret

