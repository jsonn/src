TODO list for MP branch (incomplete):

showstoppers for merge back to -current:

 - change splraise/spllower to not touch local apic, since that's very
slow (requires cheap per-cpu storage).

 - quad cpu ppro sporadically jumps into the stack; need to diagnose
this.

 - implement per cpu ring buffer with trap logs (including the "last
branch from/to" MSR contents) to allow for sane debugging.

 - rewrite interrupt dispatch so that multi-level shared interrupts
   are no longer broken.

 - figure out why ahc on serverworks fails to find its interrupt.

 - careful code review of all diffs from -current

 - try to render APM *harmless* (and functional in uniprocessor
configurations).  it can't possibly work correctly when multiple cpu's
are running, but..

"would be nice":

 - use atomic ops to modify ci_flags and cpu_feature to avoid losing bits.

 - verify that cyrix 486 isn't blown out of the water by machdep changes.

 - verify that cyrix clock chip bug fix isn't broken.

 - make sure BSP always attaches first!

 - try out mpbios+ioapic w/o MULTIPROCESSOR

 - turn off rdtsc-based microtime on uniprocessor systems which might
have variable-speed TSC.

 - investigate using per-cpu, more ephemeral, descriptors for TSS and
LDT.

 - make halt -p work in MULTIPROCESSOR config (the one APM feature
everyone wants)

-----

DONE:

 - Figure out why things are broken on !MULTIPROCESSOR
[2001/01/08  22:29:56  sommerfeld]
fixed three bugs; !MP kernel now comes up multiuser.

 - Sort out:
	- cpu feature probes [runs on new cpu]
	- identify_cpu() output [runs on BSP] 
	- cpu initialization [runs on new cpu];
   finish banishing most global variables containing cpu configuration 
   information to struct cpu_info
[2001/01/09  22:27:38  sommerfeld]
completed.  significant rewrite of cpu spinup required.

 - stop all cpu's on shutdown.

 - implement MI softint API

 - implement MP-safe microtime

 - figure out why cpu time accounting screws up bigtime:

> ld -Ttext c0100000 -e start -X -o netbsd ${SYSTEM_OBJ} vers.o
> text    data    bss     dec     hex     filename
> 3839853 369428  322400  4531681 4525e1  netbsd
> -1787494046.7u 681459032.2s 7:26.71 2421928.1% 0+0k 17+11379io 99pf+0w

[2001/05/26  20:03:41  sommerfeld]
answer: microtime was just doing the wrong thing.  fixed.

[2002/01/30  09:52:17  sommerfeld]
done a while ago:

 - per-cpu GDT and MP-safing of gdt.c.  this seems like severe
overkill so just one descriptor is different.  

