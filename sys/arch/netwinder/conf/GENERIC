# $NetBSD: GENERIC,v 1.8.6.3 2002/02/28 04:11:12 nathanw Exp $
#
# GENERIC machine description file
# 
# This machine description file is used to generate the default NetBSD
# kernel.  The generic kernel does not include all options, subsystems
# and device drivers, but should be useful for most applications.
#
# The machine description file can be customised for your specific
# machine to reduce the kernel size and improve its performance.
#
# For further information on compiling NetBSD kernels, see the config(8)
# man page.
#
# For further information on hardware support for this architecture, see
# the intro(4) man page.  For further information about kernel options
# for this architecture, see the options(4) man page.  For an explanation
# of each device driver in this file see the section 4 man page for the
# device.

include		"arch/netwinder/conf/std.netwinder"

# estimated number of users

maxusers	32

# Standard system options

options 	RTC_OFFSET=0	# hardware clock is this many mins. west of GMT
#options 	NTP		# NTP phase/frequency locked loop

# CPU options

# For StrongARM systems
options 	CPU_SA110	# Support the SA110 core
makeoptions	COPTS="-O2 -march=armv4 -mtune=strongarm"

# Architecture options
options 	FOOTBRIDGE	# We have DC21285 'Footbridge' core logic
options 	NETWINDER	# We are a NETWINDER

# FPA options

#options 	ARMFPE		# ARM Ltd FPE

# File systems

file-system	FFS		# UFS
#file-system	LFS		# log-structured file system
file-system	MFS		# memory file system
file-system	NFS		# Network file system
#file-system 	ADOSFS		# AmigaDOS-compatible file system
file-system 	EXT2FS		# second extended file system (linux)
#file-system	CD9660		# ISO 9660 + Rock Ridge file system
file-system	MSDOSFS		# MS-DOS file system
#file-system	FDESC		# /dev/fd
#file-system	KERNFS		# /kern
file-system	NULLFS		# loopback file system
#file-system	PORTAL		# portal filesystem (still experimental)
#file-system	PROCFS		# /proc
#file-system	UMAPFS		# NULLFS + uid and gid remapping
#file-system	UNION		# union file system

# File system options
#options 	QUOTA		# UFS quotas
#options 	FFS_EI		# FFS Endian Independant support
options 	NFSSERVER
options 	SOFTDEP

# Networking options

#options 	GATEWAY		# packet forwarding
options 	INET		# IP + ICMP + TCP + UDP
options 	INET6		# IPV6
#options 	IPSEC		# IP security
#options 	IPSEC_ESP	# IP security (encryption part; define w/ IPSEC)
#options 	IPSEC_DEBUG	# debug for IP security
#options 	MROUTING	# IP multicast routing
#options 	NS		# XNS
#options 	NSIP		# XNS tunneling over IP
#options 	ISO,TPIP	# OSI
#options 	EON		# OSI tunneling over IP
#options 	CCITT,LLC,HDLC	# X.25
#options 	NETATALK	# AppleTalk networking
#options 	PFIL_HOOKS	# pfil(9) packet filter hooks
#options 	PPP_BSDCOMP	# BSD-Compress compression support for PPP
#options 	PPP_DEFLATE	# Deflate compression support for PPP
#options 	PPP_FILTER	# Active filter support for PPP (requires bpf)
#options 	TCP_DEBUG	# Record last TCP_NDEBUG packets with SO_DEBUG

options 	NFS_BOOT_BOOTP
options 	NFS_BOOT_DHCP
#options 	NFS_BOOT_BOOTPARAM

# Compatibility options

#options 	COMPAT_43	# 4.3BSD compatibility.
options 	COMPAT_15	# NetBSD 1.5 compatibility.
options 	COMPAT_14	# NetBSD 1.4 compatibility.
#options 	COMPAT_13	# NetBSD 1.3 compatibility.
#options 	COMPAT_12	# NetBSD 1.2 compatibility.
#options 	COMPAT_11	# NetBSD 1.1 compatibility.
#options 	COMPAT_10	# NetBSD 1.0 compatibility.
#options 	COMPAT_09	# NetBSD 0.9 compatibility.
#options 	TCP_COMPAT_42	# 4.2BSD TCP/IP bug compat. Not recommended.

# Shared memory options

options 	SYSVMSG		# System V-like message queues
options 	SYSVSEM		# System V-like semaphores
#options 	SEMMNI=10	# number of semaphore identifiers
#options 	SEMMNS=60	# number of semaphores in system
#options 	SEMUME=10	# max number of undo entries per process
#options 	SEMMNU=30	# number of undo structures in system
options 	SYSVSHM		# System V-like memory sharing
options 	SHMMAXPGS=1024	# 1024 pages is the default

# Device options

#options 	MEMORY_DISK_HOOKS	# boottime setup of ramdisk
#options 	MEMORY_DISK_SIZE=0	# Size in blocks
#options 	MINIROOTSIZE=3400	# Size in blocks
#options 	MEMORY_DISK_IS_ROOT	# use memory disk as root

# Miscellaneous kernel options
options 	KTRACE		# system call tracing, a la ktrace(1)
options 	IRQSTATS	# manage IRQ statistics
#options 	LKM		# loadable kernel modules
#options 	KMEMSTATS	# kernel memory statistics
#options 	SCSIVERBOSE	# Verbose SCSI errors
options 	PCIVERBOSE	# Verbose PCI descriptions
options 	MIIVERBOSE	# Verbose MII autoconfuration messages
#options 	PCI_CONFIG_DUMP	# verbosely dump PCI config space
#options 	DDB_KEYCODE=0x40
#options	PIPE_SOCKETPAIR	# smaller, but slower pipe(2)

# Development and Debugging options

#options 	ARM700BUGTRACK	# track the ARM700 swi bug
#options 	PORTMASTER	# Enable PortMaster only options
options 	DIAGNOSTIC	# internally consistency checks
#options 	PMAP_DEBUG	# Enable pmap_debug_level code
#options 	IPKDB		# remote kernel debugging
options 	DDB		# in-kernel debugger
options 	DDB_HISTORY_SIZE=100	# Enable history editing in DDB
#makeoptions	DEBUG="-g"	# compile full symbol table

config		netbsd	root on ? type ?

# The main bus device
mainbus0	at root

# The boot cpu
cpu0		at mainbus?

# Core logic
footbridge0	at mainbus?

# footbridge uart
#fcom0		at footbridge?

# system clock via footbridge
#clock*		at footbridge?

# time-of-day device via footbridge
todclock0	at footbridge?

# PCI bus via footbridge
pci0		at footbridge?			# PCI bus

# ISA bus support
pcib*		at pci? dev ? function ?	# ISA bridge
isa*		at pcib?


# PCI IDE Controllers and Devices
# PCI IDE controllers - see pciide(4) for supported hardware.
# The 0x0001 flag force the driver to use DMA, even if the driver doesn't know
# how to set up DMA modes for this chip. This may work, or may cause
# a machine hang with some controllers.
pciide*		 at pci? dev ? function ? flags 0x0000

# IDE drives
# Flags are used only with controllers that support DMA operations
# and mode settings (e.g. some pciide controllers)
# The lowest order four bits (rightmost digit) of the flags define the PIO
# mode to use, the next set of four bits the DMA mode and the third set the
# UltraDMA mode. For each set of four bits, the 3 lower bits define the mode
# to use, and the last bit must be 1 for this setting to be used.
# For DMA and UDMA, 0xf (1111) means 'disable'.
# 0x0fac means 'use PIO mode 4, DMA mode 2, disable UltraDMA'.
# (0xc=1100, 0xa=1010, 0xf=1111)
# 0x0000 means "use whatever the drive claims to support".
wd*		at pciide? channel ? drive ? flags 0x0000	# the drives themselves

# PCI network interfaces
ne*		at pci? dev ? function ?	# NE2000 compat ethernet
tlp*		at pci? dev ? function ?	# DECchip 21x4x (and clones) Ethernet
options 	TLP_MATCH_21142

# MII/PHY support
icsphy*		at mii? phy ?			# ISC-189x PHYs
ukphy*		at mii? phy ?			# generic unknown PHYs

# WSCONS Support
options 	WSEMUL_VT100		# VT100 / VT220 emulation
options 	WS_KERNEL_FG=WSCOL_GREEN
pckbc0		at isa?
pckbd*		at pckbc?
wskbd*		at pckbd? console ?
pms*		at pckbc?
wsmouse*	at pms? mux 0
pmsi*		at pckbc?
wsmouse*	at pmsi? mux 0

vga*		at pci? dev ? function ?
wsdisplay*	at vga? console ?

# ISA Devices
com0		at isa? port 0x3f8 irq 4
lpt0		at isa? port 0x378 irq 7


# Audio Devices

# ISA audio devices
sb0		at isa? port 0x220 irq 3 drq 1 drq2 7	# SoundBlaster
opl*		at sb?
mpu*		at sb?
midi*		at sb?					# SB1 MIDI port

# Audio support
audio*		at sb?

# Pseudo-Devices

# disk/mass storage pseudo-devices
#pseudo-device	md		1	# memory disk device (ramdisk)
pseudo-device	vnd		4	# disk-like interface to files

# network pseudo-devices
pseudo-device	bpfilter	4	# Berkeley packet filter
pseudo-device	pppoe			# PPP over Ethernet (RFC 2516)
pseudo-device	bridge			# simple inter-network bridging
pseudo-device	loop			# network loopback

# miscellaneous pseudo-devices
pseudo-device	pty			# pseudo-terminals
pseudo-device	rnd			# /dev/random and in-kernel generator
