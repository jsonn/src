# $NetBSD: msgbuf,v 1.2.34.1 2005/03/19 08:36:11 yamt Exp $
#
# Copyright (c) 2000 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by John A. Hawkinson
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#        This product includes software developed by the NetBSD
#        Foundation, Inc. and its contributors.
# 4. Neither the name of The NetBSD Foundation nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

define msgbuf
  set $bufx=*(long*)((char *)msgbufp+1*sizeof(long))
  set $bufr=*(long*)((char *)msgbufp+2*sizeof(long))
  set $bufs=*(long*)((char *)msgbufp+3*sizeof(long))

  printf "msgbufp %#x: bufx %d bufr %d bufs %d\n", msgbufp, $bufx, $bufr, $bufs

# Dump the unread section
#  set $l = $bufx - $bufr
#  if ($l < 0)
#    set $l = $bufs - $bufr
#  end
#  set $p = (long)msgbufp+4*sizeof(long)+$bufr
#  set print elements $l
#  x/s $p

# Dump the whole thing
# Presume each section is null-terminated. Possibly bad presumption?
  set $p = (long)msgbufp+4*sizeof(long)+$bufx
  set $l = $bufs - $bufx
  set print elements $l
  printf "Dumping %#x length %d\n", $p, $l
  # XXX (unsupported by gdb): printf "%.*s\n", $l, $p
  printf "%s\n", $p
  set $p = (long)msgbufp+4*sizeof(long)
  set $l = $bufx
  set print elements $l
  printf "Dumping %#x length %d\n", $p, $l
  # XXX (unsupported by gdb): printf "%.*s\n\n", $l, $p
  printf "%s\n\n", $p
end

document msgbuf
  Dump the kernel message buffer.
end
