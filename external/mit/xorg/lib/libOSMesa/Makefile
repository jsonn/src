#	$NetBSD: Makefile,v 1.2.4.2 2008/10/19 22:41:08 haad Exp $

.include <bsd.own.mk>

LIB=		OSMesa

MESA_SRC_MODULES=	main math vbo tnl shader swrast slang glapi common \
			osmesa

.PATH:		${X11SRCDIR.MesaLib}/include/GL
INCS=		osmesa.h
INCSDIR=	${X11INCDIR}/GL

CPPFLAGS+=	${X11FLAGS.THREADLIB} \
		-DPTHREADS -DCHAN_BITS=32 -DDEFAULT_SOFTWARE_DEPTH_BITS=31 \
		-D_NETBSD_SOURCE -DUSE_EXTERNAL_DXTN_LIB=1 -DHAVE_ALIAS
CFLAGS+=	-pthread

INCLUDES.all=	. glapi main

# Main sources
PATHS.main=	main
INCLUDES.main=	shader
SRCS.main= \
	accum.c api_arrayelt.c api_loopback.c api_noop.c api_validate.c \
	arrayobj.c attrib.c blend.c bufferobj.c buffers.c clip.c colortab.c \
	context.c convolve.c debug.c depth.c depthstencil.c dlist.c drawpix.c \
	enable.c enums.c eval.c execmem.c extensions.c fbobject.c feedback.c \
	fog.c framebuffer.c get.c getstring.c hash.c hint.c histogram.c \
	image.c imports.c light.c lines.c matrix.c mipmap.c mm.c pixel.c \
	points.c polygon.c queryobj.c rastpos.c rbadaptors.c renderbuffer.c \
	shaders.c state.c stencil.c texcompress.c texcompress_fxt1.c \
	texcompress_s3tc.c texenvprogram.c texformat.c teximage.c texobj.c \
	texrender.c texstate.c texstore.c varray.c vtxfmt.c

# Math sources
PATHS.math=	math
SRCS.math= \
	m_debug_clip.c m_debug_norm.c m_debug_xform.c m_eval.c m_matrix.c \
	m_translate.c m_vector.c m_xform.c

# VBO sources
PATHS.vbo=	vbo
SRCS.vbo= \
	vbo_context.c vbo_exec.c vbo_exec_api.c	vbo_exec_array.c \
	vbo_exec_draw.c vbo_exec_eval.c vbo_rebase.c vbo_split.c \
	vbo_split_copy.c vbo_split_inplace.c vbo_save.c vbo_save_api.c \
	vbo_save_draw.c vbo_save_loopback.c 

COPTS.vbo_save_draw.c=	-Wno-error

# TNL sources
PATHS.tnl=	tnl
INCLUDES.tnl=	shader
SRCS.tnl= \
	t_context.c t_draw.c t_pipeline.c t_vb_cull.c t_vb_fog.c t_vb_light.c \
	t_vb_normals.c t_vb_points.c t_vb_program.c t_vb_render.c \
	t_vb_texgen.c t_vb_texmat.c t_vb_vertex.c t_vertex.c t_vertex_sse.c \
	t_vertex_generic.c t_vp_build.c

# Shader sources
PATHS.shader=	shader shader/grammar
INCLUDES.shader=	shader/slang shader/grammar
SRCS.shader= \
	arbprogparse.c arbprogram.c atifragshader.c grammar_mesa.c \
	nvfragparse.c nvprogram.c nvvertparse.c prog_debug.c prog_execute.c \
	prog_instruction.c prog_parameter.c prog_print.c prog_statevars.c \
	program.c programopt.c shader_api.c

# Software raster sources
PATHS.swrast=	swrast swrast_setup
INCLUDES.swrast=	shader
SRCS.swrast= \
	s_aaline.c s_aatriangle.c s_accum.c s_alpha.c s_atifragshader.c \
	s_bitmap.c s_blend.c s_blit.c s_buffers.c s_copypix.c s_context.c \
	s_depth.c s_drawpix.c s_feedback.c s_fog.c s_fragprog.c s_imaging.c \
	s_lines.c s_logic.c s_masking.c s_points.c s_readpix.c s_span.c \
	s_stencil.c s_texcombine.c s_texfilter.c s_texstore.c s_triangle.c \
	s_zoom.c ss_context.c ss_triangle.c 

# Shader language sources
PATHS.slang=	shader/slang
INCLUDES.slang=	shader shader/grammar
SRCS.slang= \
	slang_builtin.c	slang_codegen.c	slang_compile.c \
	slang_compile_function.c slang_compile_operation.c \
	slang_compile_struct.c slang_compile_variable.c slang_emit.c \
	slang_ir.c slang_label.c slang_library_noise.c slang_link.c \
	slang_log.c slang_mem.c slang_preprocess.c slang_print.c \
	slang_simplify.c slang_storage.c slang_typeinfo.c slang_vartable.c \
	slang_utility.c

# GL API sources
PATHS.glapi=	glapi main
SRCS.glapi= \
	dispatch.c glapi.c glthread.c

# Common driver sources
PATHS.common=	drivers/common
INCLUDES.common=	shader
SRCS.common= \
	driverfuncs.c

# OSMesa driver sources
PATHS.osmesa=	drivers/osmesa
INCLUDES.osmesa=	shader
SRCS.osmesa= \
	osmesa.c

.for _mod_ in ${MESA_SRC_MODULES}

SRCS+=	${SRCS.${_mod_}}

. for _path_ in ${PATHS.${_mod_}}
.PATH:	${X11SRCDIR.MesaLib}/src/mesa/${_path_}
. endfor

. for _path_ in ${INCLUDES.${_mod_}}
CPPFLAGS+=	-I${X11SRCDIR.MesaLib}/src/mesa/${_path_}
. endfor

.endfor

.for _path_ in ${INCLUDES.all}
CPPFLAGS+=	-I${X11SRCDIR.MesaLib}/src/mesa/${_path_}
.endfor

.include <bsd.x11.mk>
.include <bsd.lib.mk>
