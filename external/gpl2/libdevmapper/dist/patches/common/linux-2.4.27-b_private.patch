--- linux-2.4.27/fs/buffer.c	2004-10-14 11:06:55.000000000 -0500
+++ linux/fs/buffer.c	2004-10-14 14:21:05.173812484 -0500
@@ -799,6 +799,7 @@
 	bh->b_list = BUF_CLEAN;
 	bh->b_end_io = handler;
 	bh->b_private = private;
+	bh->b_journal_head = NULL;
 }
 
 void end_buffer_io_async(struct buffer_head * bh, int uptodate)
--- linux-2.4.27/fs/jbd/journal.c	2004-10-14 11:06:55.000000000 -0500
+++ linux/fs/jbd/journal.c	2004-10-14 14:21:05.188810355 -0500
@@ -1804,9 +1804,9 @@
 
 		if (buffer_jbd(bh)) {
 			/* Someone did it for us! */
-			J_ASSERT_BH(bh, bh->b_private != NULL);
+ 			J_ASSERT_BH(bh, bh->b_journal_head != NULL);
 			journal_free_journal_head(jh);
-			jh = bh->b_private;
+ 			jh = bh->b_journal_head;
 		} else {
 			/*
 			 * We actually don't need jh_splice_lock when
@@ -1814,7 +1814,7 @@
 			 */
 			spin_lock(&jh_splice_lock);
 			set_bit(BH_JBD, &bh->b_state);
-			bh->b_private = jh;
+			bh->b_journal_head = jh;
 			jh->b_bh = bh;
 			atomic_inc(&bh->b_count);
 			spin_unlock(&jh_splice_lock);
@@ -1823,7 +1823,7 @@
 	}
 	jh->b_jcount++;
 	spin_unlock(&journal_datalist_lock);
-	return bh->b_private;
+	return bh->b_journal_head;
 }
 
 /*
@@ -1856,7 +1856,7 @@
 			J_ASSERT_BH(bh, jh2bh(jh) == bh);
 			BUFFER_TRACE(bh, "remove journal_head");
 			spin_lock(&jh_splice_lock);
-			bh->b_private = NULL;
+			bh->b_journal_head = NULL;
 			jh->b_bh = NULL;	/* debug, really */
 			clear_bit(BH_JBD, &bh->b_state);
 			__brelse(bh);
--- linux-2.4.27/include/linux/fs.h	2004-10-14 11:07:15.000000000 -0500
+++ linux/include/linux/fs.h	2004-10-14 14:21:05.211807091 -0500
@@ -266,7 +266,7 @@
 	struct page *b_page;		/* the page this bh is mapped to */
 	void (*b_end_io)(struct buffer_head *bh, int uptodate); /* I/O completion */
  	void *b_private;		/* reserved for b_end_io */
-
+ 	void *b_journal_head;		/* ext3 journal_heads */
 	unsigned long b_rsector;	/* Real buffer location on disk */
 	wait_queue_head_t b_wait;
 
--- linux-2.4.27/include/linux/jbd.h	2004-10-14 11:07:14.000000000 -0500
+++ linux/include/linux/jbd.h	2004-10-14 14:21:05.221805672 -0500
@@ -311,7 +311,7 @@
 
 static inline struct journal_head *bh2jh(struct buffer_head *bh)
 {
-	return bh->b_private;
+	return bh->b_journal_head;
 }
 
 #define HAVE_JOURNAL_CALLBACK_STATUS
