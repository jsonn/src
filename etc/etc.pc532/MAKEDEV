#!/bin/sh -
#
# Copyright (c) 1990 The Regents of the University of California.
# All rights reserved.
#
# Written and contributed by W. Jolitz 12/90
#
# Redistribution and use in source and binary forms are permitted provided
# that: (1) source distributions retain this entire copyright notice and
# comment, and (2) distributions including binaries display the following
# acknowledgement:  ``This product includes software developed by the
# University of California, Berkeley and its contributors'' in the
# documentation or other materials provided with the distribution and in
# all advertising materials mentioning features or use of this software.
# Neither the name of the University nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
#
#	@(#)MAKEDEV	5.2 (Berkeley) 6/22/90
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the 'standard' number of each type.
#	std	standard devices
#	local	configuration specific devices
#
# Tapes:
#	st*	SCSI tapes
#
# Disks:
#	sd*	SCSI disks
#	cd*	SCSI CD-ROM		(XXX - not yet)
#	mcd*	Mitsumi CD-ROM
#	vnd*	"file" pseudo-disks	(XXX - not yet)
#
# Terminal ports:
#	tty*	serial ports
#
# Pseudo terminals:
#	pty*	set of 16 master and slave pseudo terminals
#
# Call units:
#
# Special purpose devices:
#	bpf*	packet filter				(XXX - not yet)
#	lkm	loadable kernel modules interface	(XXX - not yet)
#

PATH=/sbin:/usr/sbin:/bin:/usr/bin
umask 77
for i
do
case $i in

all)
	sh MAKEDEV std sd0 sd1 sd2 st0 st1
	sh MAKEDEV tty0 tty1 tty2 tty3 tty4 tty5 tty6 tty7 pty0
	sh MAKEDEV local
# Unknown which of the following will eventually be done ....
#	sh MAKEDEV ch0 cd0 cd1
#	sh MAKEDEV mcd0 vnd0 vnd1 vnd2 vnd3 
#	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 lkm
#	sh MAKEDEV mms0 lms0
	;;

std)
	rm -f console drum mem kmem null zero io tty klog stdin stdout stderr
	mknod console		c 0 0
	mknod drum		c 4 0	; chmod 640 drum ; chgrp kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chgrp kmem kmem
	mknod mem		c 2 0	; chmod 640 mem	; chgrp kmem mem
	mknod null		c 2 2	; chmod 666 null
	mknod zero		c 2 12	; chmod 666 zero
	mknod io		c 2 14	; chmod 640 io ; chgrp kmem io
	mknod tty		c 1 0	; chmod 666 tty
	mknod klog		c 7 0	; chmod 600 klog
	mknod stdin		c 11 0	; chmod 666 stdin
	mknod stdout		c 11 1	; chmod 666 stdout
	mknod stderr		c 11 2	; chmod 666 stderr
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
	 		printf("mknod %d c 11 %d;", i, i)}'`)
	chown -R bin.bin fd
	chmod 555 fd
	chmod 666 fd/*
	;;


sd*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	name=sd; blk=0; chr=3;
	rm -f $name$unit? r$name$unit?
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 8 + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 8 + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 8 + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 8 + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 8 + 7`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 8 + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 8 + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 8 + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 8 + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 8 + 7`
		chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
	;;

tty*)
	unit=`expr $i : '...\(.*\)'`
	rm -f tty0$unit
	mknod tty0$unit c 8 $unit
	chown uucp.wheel tty0$unit
	;;

pty*)
	class=`expr $i : 'pty\(.*\)'`
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
	4) offset=64 name=t;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4)
		umask 0
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
			for (i = 0; i < 16; i++)
				printf("rm -f tty%s%x; mknod tty%s%x c 5 %d; \
				    rm -f pty%s%x; mknod pty%s%x c 6 %d; ", \
				    n, i, n, i, b+i, n, i, n, i, b+i); }'`
		umask 77
		if [ $class = 1 ]; then
			mv ttyqf ttyv0; mv ptyqf ptyv0
		fi
		;;
	esac
	;;

st*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	st*) name=st;  chr=10; blk=2;;
	esac
	rm -f $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}	b $blk `expr $unit '*' 16 + 0`
		mknod n${name}${unit}	b $blk `expr $unit '*' 16 + 1`
		mknod e${name}${unit}	b $blk `expr $unit '*' 16 + 2`
		mknod en${name}${unit}	b $blk `expr $unit '*' 16 + 3`
		mknod r${name}${unit}	c $chr `expr $unit '*' 16 + 0`
		mknod nr${name}${unit}	c $chr `expr $unit '*' 16 + 1`
		mknod er${name}${unit}	c $chr `expr $unit '*' 16 + 2`
		mknod enr${name}${unit}	c $chr `expr $unit '*' 16 + 3`
		chgrp operator ${name}${unit} n${name}${unit} \
			e$name$unit en$name$unit \
			r${name}${unit} nr${name}${unit} \
			er${name}${unit} enr${name}${unit} 
		chmod 640 ${name}${unit} n${name}${unit} \
			e$name$unit en$name$unit \
			r${name}${unit} nr${name}${unit} \
			er${name}${unit} enr${name}${unit} 
		;;
	*)
		echo bad unit for tape in: $i
		;;
	esac
	umask 77
	;;

#ch*)
#	umask 2 ; unit=`expr $i : '..\(.*\)'`
#	case $i in
#	ch*) name=ch;  chr=17;;
#	esac
#	rm -f $name$unit
#	case $unit in
#	0|1|2|3|4|5|6)
#		mknod ${name}${unit}	c $chr `expr $unit '*' 16 + 0`
#		chgrp operator ${name}${unit}
#		chmod 640 ${name}${unit}
#		;;
#	*)
#		echo bad unit for media changer in: $i
#		;;
#	esac
#	umask 77
#	;;

#cd*|mcd*)
#	umask 2 ; unit=`expr $i : '.*cd\(.*\)'`
#	case $i in
#	cd*) name=cd; blk=4; chr=12;;
#	mcd*) name=mcd; blk=7; chr=39;;
#	esac
#	rm -f $name$unit? r$name$unit?
#	case $unit in
#	0|1|2|3|4|5|6)
#		mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
#		mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
#		mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
#		mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
#		chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
#		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
#		;;
#	*)
#		echo bad unit for disk in: $i
#		;;
#	esac
#	umask 77
#	;;

# vnode disk driver ???
vnd*)
	unit=`expr $i : '...\(.*\)'`
	name=vnd; blk=5; chr=13
	rm -f ${name}${unit}c r${name}${unit}c
	mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + 2`
	mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + 2`
	chgrp operator ${name}${unit}c r${name}${unit}c
	chmod 640 ${name}${unit}c r${name}${unit}c
	;;

#bpf*)
#	unit=`expr $i : 'bpf\(.*\)'`
#	rm -f bpf$unit
#	mknod bpf$unit c 23 $unit
#	chown root.wheel bpf$unit
#	;;
#
#lkm)
#	rm -f lkm
#	mknod lkm c 28 0
#	chown root.kmem lkm
#	chmod 640 lkm
#	;;

local)
	umask 0
	sh MAKEDEV.local
	;;

esac
done
