#!/bin/sh -
#
#	$NetBSD: MAKEDEV,v 1.11.2.1 1995/11/07 08:24:41 thorpej Exp $
#
# Copyright (c) 1990 The Regents of the University of California.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	@(#)MAKEDEV	5.5 (Berkeley) 5/28/91
#
# Device "make" file.  Valid arguments:
#	std	standard devices
#	local	configuration specific devices
# Tapes:
#	ct*	HP300 HP-IB cartridge tape
#	mt*	(Magnetic) 9-track reel tape
#	st*	Exabyte tape
# Disks:
#	ccd*	"concatenated" pseudo-disks
#	rd*	HP300 HP-IB disks
#	sd*	HP300 SCSI disks
#	vnd*	"file" pseudo-disks
# Terminal multiplexors:
#	dca*	HP200/300 single port serial interface
#	dcm*	HP200/300 4 port serial mux interface
# Pseudo terminals:
#	pty*	set of 16 master and slave pseudo terminals
# Printers:
# Call units:
# Special purpose devices:
#	fd	file descriptors
#	grf*	raw interface to HP300 graphics devices
#	ite*	terminal emulator interface to HP300 graphics devices
#	hil	HP300 HIL input devices
#	bpf*	packet filter
#	tun*	network tunnel driver
#	lkm	loadable kernel modules interface
#

PATH=/sbin:/bin/:/usr/bin:/usr/sbin
umask 77
for i
do
case $i in

all)
	sh MAKEDEV std fd ct0 ct1 st0 st1 ccd0 ccd1 ccd2 rd0 rd1 rd2
	sh MAKEDEV sd0 sd1 sd2 pty0 vnd0 vnd1 vnd2 vnd3
	sh MAKEDEV hil grf0 ite0 dca0 dcm0 dcm1 dcm2 dcm3
	sh MAKEDEV bpf0 bpf1 bpf2 bpf3 tun0 tun1 tun2 tun3 lkm
	sh MAKEDEV local
	;;

std)
	rm -f console drum kmem mem null zero tty klog stdin stdout stderr
	mknod console		c 0 0
	mknod drum		c 3 0	; chmod 640 drum ; chgrp kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chgrp kmem kmem
	mknod mem		c 2 0	; chmod 640 mem ; chgrp kmem mem
	mknod null		c 2 2	; chmod 666 null
	mknod zero		c 2 12	; chmod 666 zero
	mknod tty		c 1 0	; chmod 666 tty
	mknod klog		c 6 0	; chmod 600 klog
	mknod stdin		c 21 0	; chmod 666 stdin
	mknod stdout		c 21 1	; chmod 666 stdout
	mknod stderr		c 21 2	; chmod 666 stderr
	;;

fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
			printf("mknod %d c 21 %d;", i, i)}'`)
	chown -R bin.bin fd
	chmod 555 fd
	chmod 666 fd/*
	;;

ct*|mt*|st*)
	umask 0 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	ct*) name=ct; blk=0; chr=7;;
	mt*) name=mt; blk=1; chr=16;;
	st*) name=st; blk=6; chr=20;;
	esac
	case $unit in
	0|1|2|3|4|5|6|7)
		four=`expr $unit + 4` ; eight=`expr $unit + 8`
		twelve=`expr $unit + 12`; twenty=`expr $unit + 20`
		#
		# block devices don't work so don't make them
		#rm -f ${name}${unit} ${name}${four} ${name}${eight} \
		#    ${name}${twelve} n${name}${unit} n${name}${eight}
		#mknod ${name}${unit}	b $blk $unit
		#mknod ${name}${four}	b $blk $four
		#mknod ${name}${eight}	b $blk $eight
		#mknod ${name}${twelve}	b $blk $twelve
		#mknod n${name}${unit}	b $blk $four ;: sanity w/pdp11 v7
		#mknod n${name}${eight}	b $blk $twelve ;: ditto
		#
		rm -f r${name}${unit} r${name}${four} r${name}${eight} \
		    r${name}${twelve} nr${name}${unit} nr${name}${eight}
		mknod r${name}${unit}	c $chr $unit
		mknod r${name}${four}	c $chr $four
		mknod r${name}${eight}	c $chr $eight
		mknod r${name}${twelve}	c $chr $twelve
		ln r${name}${four} nr${name}${unit} ;: sanity w/pdp11 v7
		ln r${name}${twelve} nr${name}${eight} ;: ditto
		;;
	*)
		echo bad unit for tape in: $1
		;;
	esac
	umask 77
	;;

bpf*)
	unit=`expr $i : 'bpf\(.*\)'`
	rm -f bpf$unit
	mknod bpf$unit c 22 $unit
	chmod 600 bpf$unit
	chown root.wheel bpf$unit
	;;

tun*)
	unit=`expr $i : 'tun\(.*\)'`
	rm -f tun$unit
	mknod tun$unit c 23 $unit
	chmod 600 tun$unit
	chown root.wheel tun$unit
	;;

ccd*|fd*|rd*|sd*|vnd*)
	umask 2 ; unit=`expr $i : '.*d\(.*\)'`
	case $i in
	rd*) name=rd; blk=2; chr=9;;
	sd*) name=sd; blk=4; chr=8;;
	ccd*) name=ccd; blk=5; chr=17;;
	vnd*) name=vnd; blk=6; chr=19;;
	esac
	case $unit in
	0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|\
	17|18|19|20|21|22|23|24|25|26|27|28|29|30|31)
		rm -f $name$unit? r$name$unit?
		mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 8 + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 8 + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 8 + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 8 + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 8 + 7`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 8 + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 8 + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 8 + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 8 + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 8 + 7`
		chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
	;;

dca*)
	# XXX What about dca cards?
	unit=`expr $i : 'dca\(.*\)'`
	case $unit in
	0)
		rm -f tty0
		mknod tty0 c 12 0
		;;
	*)
		echo bad unit for dca in: $i
		;;
	esac
	;;

dcm*)
	unit=`expr $i : 'dcm\(.*\)'`
	case $unit in
	0|1|2|3)
		eval `echo $unit | awk ' { unit = $1; u = 4 * $1 } END {
		for (i = 0; i < 4; i++)
		printf("rm -f tty0%x; mknod tty0%x c 15 %d; ",u+i,u+i,u+i); }'`
	;;
	*)
		echo bad unit for dcm in: $i
		;;
	esac
	;;

ite*)
	unit=`expr $i : 'ite\(.*\)'`
	case $unit in
	0|1|2|3)
		rm -f ttye${unit}
		mknod ttye${unit} c 13 ${unit}
		;;
	*)
		echo bad unit for ite in: $i
		;;
	esac
	;;

grf*)
	unit=`expr $i : 'grf\(.*\)'`
	case $unit in
	0|1|2|3)
		rm -f grf${unit}
		mknod grf${unit} c 10 ${unit}; chmod 666 grf${unit}
#		echo "grf${unit}: use MAKEDEV.hpux to make HP-UX names for device"
		;;
	*)
		echo bad unit for grf in: $i
		;;
	esac
	;;

hil)
	for unit in 0 1 2 3 4 5 6 7
	do
		rm -f hil${unit} locator keyboard
		mknod hil${unit} c 14 ${unit}
		if [ -f /usr/sbin/hilinfo ]
		then
			case `/usr/sbin/hilinfo -t hil${unit}` in
			mouse)
				if [ ! -f locator ]
				then
					ln hil${unit} locator
				fi
				;;
			keyboard)
				if [ ! -f keyboard ]
				then
					ln hil${unit} keyboard
				fi
				;;
			*)
				;;
			esac
		fi
	done
	if [ ! -f /usr/sbin/hilinfo ]
	then
		ln hil1 keyboard
		ln hil3 locator
	fi
	chmod 666 hil*
#	echo "hil: use MAKEDEV.hpux to make HP-UX names for devices"
	;;

lkm)
	rm -f lkm
	mknod lkm c 24 0
	chown root.kmem lkm
	chmod 640 lkm
	;;

pty*)
	class=`expr $i : 'pty\(.*\)'`
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
	4) offset=64 name=t;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4)
		umask 0
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
			for (i = 0; i < 16; i++)
				printf("rm -f tty%s%x pty%s%x; \
					mknod tty%s%x c 4 %d; \
					mknod pty%s%x c 5 %d; ", \
					n, i, n, i, n, i, b+i, n, i, b+i); }'`
		umask 77
		if [ $class = 1 ]; then
			mv ttyqf ttyv0; mv ptyqf ptyv0
		fi
		;;
	esac
	;;

local)
	umask 0
	sh MAKEDEV.local
	;;
*)
	echo $i: unknown device
	;;
esac
done
