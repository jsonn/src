#!/bin/sh -
#
#	$NetBSD: MAKEDEV,v 1.12.2.5 1997/12/15 00:24:16 mellon Exp $
#
#	from: @(#)MAKEDEV	8.1 (Berkeley) 6/9/93
#

# Device "make" file.  Valid arguments:
#	std	standard devices
#	local	configuration specific devices
# Tapes:
#	tz*	SCSI tapes, DEC TK50 cartridge tape
# Disks:
#	rz*	SCSI disks
#	vnd*	"file" pseudo-disks
#	ccd*	concatenated disk driver
# Terminal multiplexors:
#	dc*	4 channel serial interface (keyboard, mouse, modem, printer)
#	scc*	82530 serial interface
# Pseudo terminals:
#	pty*	set of 16 master and slave pseudo terminals
# Printers:
# Call units:
# Special purpose devices:
#	bpf*	packet filter
#	lkm	loadable kernel modules interface    (unsupported in 1.3_ALPHA)
#	tun*	network tunnel driver
#	ipl	IP packet filter
#	random	Random number generator
# Platform-specific devices:
#	NOTE: /dev/mouse should be a link to one of these for X windows.
#	fb*	generic framebuffer pseudo-device
#
# The following names are reserved for future use:
#	pm*	raw interface to PMAX graphics devices
#	cfb*	raw interface to turbochannel PMAG-BA color frame buffer
#	xcfb*	raw interface to maxine graphics devices
#	mfb*	raw interface to mono graphics devices
#	px*	raw interface to i860-accelerated framebuffers
#	sd*, st*, cd*, ss*, uk*  -- MI scsi devices
#	fdc*	Baseboard 2.88 floppy disk on Personal DECstations
#	audio*	phone-quality audio on Personal  DECstations
#


PATH=/sbin:/bin/:/usr/bin:/usr/sbin
umask 77
for i
do
case $i in

all)
	sh $0 std fd rz0 rz1 rz2 rz3 rz4 tz0 tz1
	sh $0 rz8 rz9 rz10 rz11 rz12 tz2 tz3
	sh $0 dc0 scc0 
	sh $0 pty0 vnd0 vnd1 vnd2 vnd3 ccd0 ccd1 ccd2 ccd3
	sh $0 tun0 tun1 tun2 tun3
	sh $0 bpf0 bpf1 bpf2 bpf3
	sh $0 fb0 fb1 fb2
	sh $0 mouse
	sh $0 ipl random
#	sh $0 lkm local			# XXX no lkm driver in 1.3_ALPHA(?)
#	sh $0 audio pm0 cfb0 xcfb0 mfb0 sfb0
#	sh $0 cd0 			 # no MI scsi yet
	;;

std)
	rm -f console drum tty kmem mem
	rm -f null zero klog stdin stdout stderr
	mknod console		c 0 0
	mknod drum		c 1 0	; chmod 640 drum ; chgrp kmem drum
	mknod tty		c 2 0	; chmod 666 tty
	mknod kmem		c 3 1	; chmod 640 kmem ; chgrp kmem kmem
	mknod mem		c 3 0	; chmod 640 mem ; chgrp kmem mem
	mknod null		c 3 2	; chmod 666 null
	mknod zero		c 3 12	; chmod 666 zero
	mknod klog		c 6 0	; chmod 600 klog
	mknod stdin		c 7 0	; chmod 666 stdin
	mknod stdout		c 7 1	; chmod 666 stdout
	mknod stderr		c 7 2	; chmod 666 stderr
	;;

fd)
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	n=0
	while [ $n -lt 64 ]; do
		mknod fd/$n c 7 $n
		n=$(($n + 1))
	done
	chown -R root.wheel fd
	chmod 755 fd
	chmod 666 fd/*
	;;

tz*)
	case $i in
	tz*) unit=${i#tz}; chr=10;;
	esac
	case $unit in
	[0-6])
		rm -f rmt$unit nrmt$unit rmth$unit nrmth$unit
		mknod rmt$unit c $chr   $(($unit * 16 + 0))
		mknod nrmt$unit c $chr  $(($unit * 16 + 1))
		mknod rmth$unit c $chr  $(($unit * 16 + 2))
		mknod nrmth$unit c $chr $(($unit * 16 + 3))
		chgrp operator rmt$unit nrmt$unit rmth$unit nrmth$unit
		chmod 660 rmt$unit nrmt$unit rmth$unit nrmth$unit
		;;
	*)
		echo bad unit for tape in: $i
		;;
	esac
	;;

bpf*|tun*)
	case $i in
	bpf*) name=bpf;	unit=${i#bpf};	chr=12;;
	tun*) name=tun;	unit=${i#tun};	chr=90;;
	esac
	rm -f $name$unit
	mknod $name$unit c $chr $unit
	chmod 600 $name$unit
	chown root.wheel $name$unit
	;;

lkm)
#	rm -f lkm
#	mknod lkm c 90 0
#	chown root.kmem lkm
#	chmod 640 lkm
	;;

rz*|vnd*|ccd*)
	case $i in
	rz*) name=rz;	unit=${i#rz};	blk=21; chr=56;;
	vnd*) name=vnd;	unit=${i#vnd};	blk=2; chr=11;;
	ccd*) name=ccd;	unit=${i#ccd};	blk=24; chr=87;;
	esac
	case $unit in
	[0-6]|8|9|1[0-4])
		rm -f ${name}${unit}[a-h] r${name}${unit}[a-h]
		mknod ${name}${unit}a	b $blk $(($unit * 8 + 0))
		mknod ${name}${unit}b	b $blk $(($unit * 8 + 1))
		mknod ${name}${unit}c	b $blk $(($unit * 8 + 2))
		mknod ${name}${unit}d	b $blk $(($unit * 8 + 3))
		mknod ${name}${unit}e	b $blk $(($unit * 8 + 4))
		mknod ${name}${unit}f	b $blk $(($unit * 8 + 5))
		mknod ${name}${unit}g	b $blk $(($unit * 8 + 6))
		mknod ${name}${unit}h	b $blk $(($unit * 8 + 7))
		mknod r${name}${unit}a	c $chr $(($unit * 8 + 0))
		mknod r${name}${unit}b	c $chr $(($unit * 8 + 1))
		mknod r${name}${unit}c	c $chr $(($unit * 8 + 2))
		mknod r${name}${unit}d	c $chr $(($unit * 8 + 3))
		mknod r${name}${unit}e	c $chr $(($unit * 8 + 4))
		mknod r${name}${unit}f	c $chr $(($unit * 8 + 5))
		mknod r${name}${unit}g	c $chr $(($unit * 8 + 6))
		mknod r${name}${unit}h	c $chr $(($unit * 8 + 7))
		chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	;;

# Serial devices: dc*, scc*.
#
#     Create dc* devices as /dev/ttyD[0-3],
#     for compatibility with NetBSD's vax  dc/dz driver.
dc*|dz*)
	case $i in
	dc*|dz*)	name=dc;	unit=${i#dc};	chr=16;;
	esac
	case $unit in
	0)
		rm -f ttyD[0123]
		mknod ttyD0 c $chr 0
		mknod ttyD1 c $chr 1
		mknod ttyD2 c $chr 2
		mknod ttyD3 c $chr 3
		;;
	*)
		echo bad unit for $name in: $i
		;;
	esac
	;;

# Make scc devices as /dev/tty[abcd],
# for compatibility with NetBSD's MI zs tty  driver.
#
scc*|zs*)
	case $i in
	scc*)	name=scc;	unit=${i#scc};	chr=17;;
	zs*)	name=scc;	unit=${i#zs};	chr=17;;
	esac
	case $unit in
	0|1)
		rm -f tty[abcd]
		mknod ttya c $chr 0
		mknod ttyb c $chr 1
		mknod ttyc c $chr 2
		mknod ttyd c $chr 3
		;;
	*)
		echo bad unit for $name in: $i
		;;
	esac
	;;

fb*)
	unit=${i#fb}
	rm -f fb$unit
	mknod fb$unit c 86 $unit
	chmod 666 fb$unit
	;;

mouse)
	rm -f mouse
	ln -s fb0 mouse
	;;

# NOTE:
# framebuffer-specific devices pm*, cfb*, xfb*, sfb* ,mfb* are not 
# supported in 1.2.  Use the generic fb device intsead.
# the names and device entries are reserved for compatilibity reasons.
#
pm*|cfb*|xcfb*|mfb*)
	case $i in
	pm*)	name=pm;	unit=${i#pm};	chr=8;;
	cfb*)	name=cfb;	unit=${i#cfb};	chr=13;;
	xcfb*)	name=xcfb;	unit=${i#xcfb};	chr=14;;
	mfb*)	name=mfb;	unit=${i#mfb};	chr=18;;
	esac
	case $unit in
	0)
		rm -f $name$unit
		mknod $name$unit c $chr 0
		;;
	*)
		echo bad unit for $name in: $i
		;;
	esac
	;;

pty*)
	class=${i#pty}
	case $class in
	0)      name=p;;
	1)      name=q;;
	2)      name=r;;
	3)      name=s;;
	4)      name=t;;
	5)      name=u;;
	6)      name=v;;
	7)      name=w;;
	8)      name=x;;
	9)      name=y;;
	10)     name=z;;
	11)     name=P;;
	12)     name=Q;;
	13)     name=R;;
	14)     name=S;;
	15)     name=T;;
	*)      echo "$0: $i: pty unit must be between 0 and 15"
	        continue ;;
	esac
	rm -f tty$name[0-9a-f] pty$name[0-9a-f]
	for j in 0 1 2 3 4 5 6 7 8 9 a b c d e f
	do
		case $j in
		[0-9])  jn=$j ;;
		a)      jn=10 ;;
		b)      jn=11 ;;
		c)      jn=12 ;;
		d)      jn=13 ;;
		e)      jn=14 ;;
		f)      jn=15 ;;
		esac
		unit=$(($class * 16 + $jn))
		mknod tty$name$j c 4 $unit
		mknod pty$name$j c 5 $unit
	done
        chgrp wheel tty$name? pty$name?
        chmod 666 tty$name? pty$name?
	;;

ipl)
	rm -f ipl ipnat ipstate ipauth
	mknod ipl c 91 0
	mknod ipnat c 91 1
	mknod ipstate c 91 2
	mknod ipauth c 91 3
	chown root.wheel ipl ipnat ipstate ipauth
	chmod 600 ipl ipnat ipstate ipauth
	;;

random)
	rm -f random urandom
	mknod random c 92 0
	mknod urandom c 92 1
	chown root.wheel random urandom
	chmod 444 random
	chmod 644 urandom
	;;

local)
	umask 0
	sh $0.local all
	umask 77
	;;

*)
	echo $i: unknown device
	;;

esac
done
