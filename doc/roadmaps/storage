$NetBSD: storage,v 1.2.2.1 2009/01/26 05:15:53 snj Exp $

NetBSD Storage Roadmap
======================

This is a small roadmap document, and deals with the storage and file
systems side of the operating system.

NetBSD 5.0 will ship with the following storage elements in place:

1. puffs/putter
2. ReFUSE
3. rump
4. RAIDframe
5. iSCSI target
6. iSCSI initiator
7. cgd
8. fss
9. journalling functionality for ffs
10. read/write support for UDF file systems

The following elements and projects are pencilled in for 6.0, but
please do not rely on them being there.

11. devfs
12. logical volume management
13. a native port of Sun's ZFS
14. ReFUSE-lowlevel
15. web-based management tools for storage subsystems
16. support for flash devices - NAND and MMC/SD

The timescales for 6.0 are not known at the present time, but we would
expect to branch 6.0 late in 2009, with a view to a 6.0 release in
early 2010.


Some explanations
=================

11. devfs
---------

Devfs will allow device special files (the files used to access
devices) to be created dynamically as and when they are attached to
the system.  This will greatly reduce the number of files in a /dev
directory and removes the need to run the MAKEDEV script when support
for new devices is added to the NetBSD kernel.  NetBSD's devfs
implementation will also allow multiple instances of the file system
to be mounted simultaneously, which is very useful for chroot jails.

Responsible: mjf

9. Journalling Functionality for FFS
-------------------------------------

Contributed by Wasabi Systems, Inc, technical review on tech-kern
in March 2008, merged to HEAD in July 2008, will be in NetBSD 5.0.

12. Logical Volume Management
-----------------------------

Based on the Linux lvm2 and devmapper software, with a new kernel component
for NetBSD written. Merged in 5.99.5 sources, will be in 6.0.

Responsible: haad, martin

13. Native port of Sun's ZFS
----------------------------

Mostly completed by ad@, this is the FreeBSD port of Sun's ZFS, with
modifications to make it compile on NetBSD 5.0 by ad@, and based on
the original Sun code for the block layer, rather than the GEOM-based
layer.

Responsible: ad, many others

14. ReFUSE-lowlevel
-------------------

FUSE has two interfaces, the normal high-level one, and a lower-level
interface which is closer to the way standard file systems operate. This
adds the low-level functionality in the same way that ReFUSE adds the
high-level functionality

Responsible: pooka, agc

15. Web-based Management tools for Storage Subsystems
-----------------------------------------------------

Standard tools for managing the storage subsystems that NetBSD provides,
using a standard web-server as the basic user interface on the storage
device, allowing remote management by a standard web browser.

Responsible: agc


Alistair Crooks
Sun 25 Jan 2009 20:55:12 PST
