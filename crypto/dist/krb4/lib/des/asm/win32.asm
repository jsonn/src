	; Don't even think of reading this code
	; It was automatically generated by des-som2.pl
	; Which is a perl program used to generate the x86 assember for
	; any of elf, a.out, Win32, or Solaris
	; It can be found in SSLeay 0.6.5+ or in libdes 3.26+
	; eric <eay@mincom.oz.au>
	; The inner loop instruction sequence and the IP/FP modifications
	; are from Svend Olaf Mikkelsen <svolaf@inet.uni-c.dk>

	; 
	TITLE	dx86xxxx.asm
        .386
.model FLAT
_TEXT	SEGMENT
PUBLIC	_des_encrypt
EXTRN	_des_SPtrans:DWORD
_des_encrypt PROC NEAR
	push	ebp
	push	ebx
	push	esi
	push	edi
	; 
	; Load the 2 words
	mov	esi,		DWORD PTR 20[esp]
	xor	ecx,		ecx
	mov	eax,		DWORD PTR [esi]
	mov	ebx,		DWORD PTR 28[esp]
	mov	edi,		DWORD PTR 4[esi]
	; 
	; IP
	rol	eax,		4
	mov	esi,		eax
	xor	eax,		edi
	and	eax,		0f0f0f0f0h
	xor	esi,		eax
	xor	edi,		eax
	; 
	rol	edi,		20
	mov	eax,		edi
	xor	edi,		esi
	and	edi,		0fff0000fh
	xor	eax,		edi
	xor	esi,		edi
	; 
	rol	eax,		14
	mov	edi,		eax
	xor	eax,		esi
	and	eax,		033333333h
	xor	edi,		eax
	xor	esi,		eax
	; 
	rol	esi,		22
	mov	eax,		esi
	xor	esi,		edi
	and	esi,		003fc03fch
	xor	eax,		esi
	xor	edi,		esi
	; 
	rol	eax,		9
	mov	esi,		eax
	xor	eax,		edi
	and	eax,		0aaaaaaaah
	xor	esi,		eax
	xor	edi,		eax
	; 
	rol	edi,		1
	cmp	ebx,		0
	mov	ebp,		DWORD PTR 24[esp]
	je	$L000start_decrypt
	; 
	; Round 0
	mov	eax,		DWORD PTR [ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 4[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 1
	mov	eax,		DWORD PTR 8[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 12[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 2
	mov	eax,		DWORD PTR 16[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 20[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 3
	mov	eax,		DWORD PTR 24[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 28[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 4
	mov	eax,		DWORD PTR 32[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 36[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 5
	mov	eax,		DWORD PTR 40[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 44[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 6
	mov	eax,		DWORD PTR 48[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 52[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 7
	mov	eax,		DWORD PTR 56[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 60[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 8
	mov	eax,		DWORD PTR 64[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 68[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 9
	mov	eax,		DWORD PTR 72[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 76[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 10
	mov	eax,		DWORD PTR 80[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 84[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 11
	mov	eax,		DWORD PTR 88[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 92[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 12
	mov	eax,		DWORD PTR 96[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 100[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 13
	mov	eax,		DWORD PTR 104[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 108[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 14
	mov	eax,		DWORD PTR 112[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 116[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 15
	mov	eax,		DWORD PTR 120[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 124[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	jmp	$L001end
$L000start_decrypt:
	; 
	; Round 15
	mov	eax,		DWORD PTR 120[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 124[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 14
	mov	eax,		DWORD PTR 112[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 116[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 13
	mov	eax,		DWORD PTR 104[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 108[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 12
	mov	eax,		DWORD PTR 96[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 100[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 11
	mov	eax,		DWORD PTR 88[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 92[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 10
	mov	eax,		DWORD PTR 80[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 84[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 9
	mov	eax,		DWORD PTR 72[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 76[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 8
	mov	eax,		DWORD PTR 64[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 68[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 7
	mov	eax,		DWORD PTR 56[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 60[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 6
	mov	eax,		DWORD PTR 48[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 52[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 5
	mov	eax,		DWORD PTR 40[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 44[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 4
	mov	eax,		DWORD PTR 32[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 36[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 3
	mov	eax,		DWORD PTR 24[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 28[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 2
	mov	eax,		DWORD PTR 16[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 20[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 1
	mov	eax,		DWORD PTR 8[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 12[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 0
	mov	eax,		DWORD PTR [ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 4[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
$L001end:
	; 
	; FP
	mov	edx,		DWORD PTR 20[esp]
	ror	esi,		1
	mov	eax,		edi
	xor	edi,		esi
	and	edi,		0aaaaaaaah
	xor	eax,		edi
	xor	esi,		edi
	; 
	rol	eax,		23
	mov	edi,		eax
	xor	eax,		esi
	and	eax,		003fc03fch
	xor	edi,		eax
	xor	esi,		eax
	; 
	rol	edi,		10
	mov	eax,		edi
	xor	edi,		esi
	and	edi,		033333333h
	xor	eax,		edi
	xor	esi,		edi
	; 
	rol	esi,		18
	mov	edi,		esi
	xor	esi,		eax
	and	esi,		0fff0000fh
	xor	edi,		esi
	xor	eax,		esi
	; 
	rol	edi,		12
	mov	esi,		edi
	xor	edi,		eax
	and	edi,		0f0f0f0f0h
	xor	esi,		edi
	xor	eax,		edi
	; 
	ror	eax,		4
	mov	DWORD PTR [edx],eax
	mov	DWORD PTR 4[edx],esi
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
_des_encrypt ENDP
_TEXT	ENDS
_TEXT	SEGMENT
PUBLIC	_des_encrypt2
EXTRN	_des_SPtrans:DWORD
_des_encrypt2 PROC NEAR
	push	ebp
	push	ebx
	push	esi
	push	edi
	; 
	; Load the 2 words
	mov	eax,		DWORD PTR 20[esp]
	xor	ecx,		ecx
	mov	esi,		DWORD PTR [eax]
	mov	ebx,		DWORD PTR 28[esp]
	rol	esi,		3
	mov	edi,		DWORD PTR 4[eax]
	rol	edi,		3
	cmp	ebx,		0
	mov	ebp,		DWORD PTR 24[esp]
	je	$L002start_decrypt
	; 
	; Round 0
	mov	eax,		DWORD PTR [ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 4[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 1
	mov	eax,		DWORD PTR 8[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 12[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 2
	mov	eax,		DWORD PTR 16[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 20[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 3
	mov	eax,		DWORD PTR 24[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 28[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 4
	mov	eax,		DWORD PTR 32[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 36[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 5
	mov	eax,		DWORD PTR 40[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 44[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 6
	mov	eax,		DWORD PTR 48[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 52[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 7
	mov	eax,		DWORD PTR 56[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 60[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 8
	mov	eax,		DWORD PTR 64[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 68[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 9
	mov	eax,		DWORD PTR 72[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 76[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 10
	mov	eax,		DWORD PTR 80[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 84[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 11
	mov	eax,		DWORD PTR 88[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 92[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 12
	mov	eax,		DWORD PTR 96[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 100[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 13
	mov	eax,		DWORD PTR 104[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 108[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 14
	mov	eax,		DWORD PTR 112[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 116[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 15
	mov	eax,		DWORD PTR 120[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 124[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	jmp	$L003end
$L002start_decrypt:
	; 
	; Round 15
	mov	eax,		DWORD PTR 120[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 124[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 14
	mov	eax,		DWORD PTR 112[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 116[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 13
	mov	eax,		DWORD PTR 104[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 108[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 12
	mov	eax,		DWORD PTR 96[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 100[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 11
	mov	eax,		DWORD PTR 88[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 92[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 10
	mov	eax,		DWORD PTR 80[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 84[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 9
	mov	eax,		DWORD PTR 72[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 76[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 8
	mov	eax,		DWORD PTR 64[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 68[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 7
	mov	eax,		DWORD PTR 56[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 60[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 6
	mov	eax,		DWORD PTR 48[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 52[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 5
	mov	eax,		DWORD PTR 40[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 44[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 4
	mov	eax,		DWORD PTR 32[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 36[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 3
	mov	eax,		DWORD PTR 24[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 28[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 2
	mov	eax,		DWORD PTR 16[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 20[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
	; 
	; Round 1
	mov	eax,		DWORD PTR 8[ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 12[ebp]
	xor	eax,		esi
	xor	edx,		esi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	edi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	edi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	edi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	edi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	edi,		ebx
	; 
	; Round 0
	mov	eax,		DWORD PTR [ebp]
	xor	ebx,		ebx
	mov	edx,		DWORD PTR 4[ebp]
	xor	eax,		edi
	xor	edx,		edi
	and	eax,		0fcfcfcfch
	and	edx,		0cfcfcfcfh
	mov	bl,		al
	mov	cl,		ah
	ror	edx,		4
	mov	ebp,		DWORD PTR _des_SPtrans[ebx]
	mov	bl,		dl
	xor	esi,		ebp
	mov	ebp,		DWORD PTR _des_SPtrans[0200h+ecx]
	xor	esi,		ebp
	mov	cl,		dh
	shr	eax,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0100h+ebx]
	xor	esi,		ebp
	mov	bl,		ah
	shr	edx,		16
	mov	ebp,		DWORD PTR _des_SPtrans[0300h+ecx]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	mov	cl,		dh
	and	eax,		0ffh
	and	edx,		0ffh
	mov	ebx,		DWORD PTR _des_SPtrans[0600h+ebx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0700h+ecx]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0400h+eax]
	xor	esi,		ebx
	mov	ebx,		DWORD PTR _des_SPtrans[0500h+edx]
	xor	esi,		ebx
$L003end:
	; 
	; Fixup
	ror	edi,		3
	mov	eax,		DWORD PTR 20[esp]
	ror	esi,		3
	mov	DWORD PTR [eax],edi
	mov	DWORD PTR 4[eax],esi
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
_des_encrypt2 ENDP
_TEXT	ENDS
_TEXT	SEGMENT
PUBLIC	_des_encrypt3
EXTRN	_des_SPtrans:DWORD
_des_encrypt3 PROC NEAR
	push	ebp
	push	ebx
	push	esi
	push	edi
	; 
	; Load the data words
	mov	ebx,		DWORD PTR 20[esp]
	mov	edi,		DWORD PTR [ebx]
	mov	esi,		DWORD PTR 4[ebx]
	; 
	; IP
	rol	edi,		4
	mov	edx,		edi
	xor	edi,		esi
	and	edi,		0f0f0f0f0h
	xor	edx,		edi
	xor	esi,		edi
	; 
	rol	esi,		20
	mov	edi,		esi
	xor	esi,		edx
	and	esi,		0fff0000fh
	xor	edi,		esi
	xor	edx,		esi
	; 
	rol	edi,		14
	mov	esi,		edi
	xor	edi,		edx
	and	edi,		033333333h
	xor	esi,		edi
	xor	edx,		edi
	; 
	rol	edx,		22
	mov	edi,		edx
	xor	edx,		esi
	and	edx,		003fc03fch
	xor	edi,		edx
	xor	esi,		edx
	; 
	rol	edi,		9
	mov	edx,		edi
	xor	edi,		esi
	and	edi,		0aaaaaaaah
	xor	edx,		edi
	xor	esi,		edi
	; 
	ror	edx,		3
	ror	esi,		2
	mov	DWORD PTR 4[ebx],esi
	mov	eax,		DWORD PTR 24[esp]
	mov	DWORD PTR [ebx],edx
	mov	edi,		DWORD PTR 28[esp]
	mov	esi,		DWORD PTR 32[esp]
	push	1
	push	eax
	push	ebx
	call	_des_encrypt2
	push	0
	push	edi
	push	ebx
	call	_des_encrypt2
	push	1
	push	esi
	push	ebx
	call	_des_encrypt2
	mov	edi,		DWORD PTR [ebx]
	add	esp,		36
	mov	esi,		DWORD PTR 4[ebx]
	; 
	; FP
	rol	esi,		2
	rol	edi,		3
	mov	eax,		edi
	xor	edi,		esi
	and	edi,		0aaaaaaaah
	xor	eax,		edi
	xor	esi,		edi
	; 
	rol	eax,		23
	mov	edi,		eax
	xor	eax,		esi
	and	eax,		003fc03fch
	xor	edi,		eax
	xor	esi,		eax
	; 
	rol	edi,		10
	mov	eax,		edi
	xor	edi,		esi
	and	edi,		033333333h
	xor	eax,		edi
	xor	esi,		edi
	; 
	rol	esi,		18
	mov	edi,		esi
	xor	esi,		eax
	and	esi,		0fff0000fh
	xor	edi,		esi
	xor	eax,		esi
	; 
	rol	edi,		12
	mov	esi,		edi
	xor	edi,		eax
	and	edi,		0f0f0f0f0h
	xor	esi,		edi
	xor	eax,		edi
	; 
	ror	eax,		4
	mov	DWORD PTR [ebx],eax
	mov	DWORD PTR 4[ebx],esi
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
_des_encrypt3 ENDP
_TEXT	ENDS
_TEXT	SEGMENT
PUBLIC	_des_decrypt3
EXTRN	_des_SPtrans:DWORD
_des_decrypt3 PROC NEAR
	push	ebp
	push	ebx
	push	esi
	push	edi
	; 
	; Load the data words
	mov	ebx,		DWORD PTR 20[esp]
	mov	edi,		DWORD PTR [ebx]
	mov	esi,		DWORD PTR 4[ebx]
	; 
	; IP
	rol	edi,		4
	mov	edx,		edi
	xor	edi,		esi
	and	edi,		0f0f0f0f0h
	xor	edx,		edi
	xor	esi,		edi
	; 
	rol	esi,		20
	mov	edi,		esi
	xor	esi,		edx
	and	esi,		0fff0000fh
	xor	edi,		esi
	xor	edx,		esi
	; 
	rol	edi,		14
	mov	esi,		edi
	xor	edi,		edx
	and	edi,		033333333h
	xor	esi,		edi
	xor	edx,		edi
	; 
	rol	edx,		22
	mov	edi,		edx
	xor	edx,		esi
	and	edx,		003fc03fch
	xor	edi,		edx
	xor	esi,		edx
	; 
	rol	edi,		9
	mov	edx,		edi
	xor	edi,		esi
	and	edi,		0aaaaaaaah
	xor	edx,		edi
	xor	esi,		edi
	; 
	ror	edx,		3
	ror	esi,		2
	mov	DWORD PTR 4[ebx],esi
	mov	esi,		DWORD PTR 24[esp]
	mov	DWORD PTR [ebx],edx
	mov	edi,		DWORD PTR 28[esp]
	mov	eax,		DWORD PTR 32[esp]
	push	0
	push	eax
	push	ebx
	call	_des_encrypt2
	push	1
	push	edi
	push	ebx
	call	_des_encrypt2
	push	0
	push	esi
	push	ebx
	call	_des_encrypt2
	mov	edi,		DWORD PTR [ebx]
	add	esp,		36
	mov	esi,		DWORD PTR 4[ebx]
	; 
	; FP
	rol	esi,		2
	rol	edi,		3
	mov	eax,		edi
	xor	edi,		esi
	and	edi,		0aaaaaaaah
	xor	eax,		edi
	xor	esi,		edi
	; 
	rol	eax,		23
	mov	edi,		eax
	xor	eax,		esi
	and	eax,		003fc03fch
	xor	edi,		eax
	xor	esi,		eax
	; 
	rol	edi,		10
	mov	eax,		edi
	xor	edi,		esi
	and	edi,		033333333h
	xor	eax,		edi
	xor	esi,		edi
	; 
	rol	esi,		18
	mov	edi,		esi
	xor	esi,		eax
	and	esi,		0fff0000fh
	xor	edi,		esi
	xor	eax,		esi
	; 
	rol	edi,		12
	mov	esi,		edi
	xor	edi,		eax
	and	edi,		0f0f0f0f0h
	xor	esi,		edi
	xor	eax,		edi
	; 
	ror	eax,		4
	mov	DWORD PTR [ebx],eax
	mov	DWORD PTR 4[ebx],esi
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
_des_decrypt3 ENDP
_TEXT	ENDS
END
