#!/usr/bin/awk -f
#
# Copyright (c)2000 Citrus Project,
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	$Id: compile_time,v 1.1.2.1 2000/05/28 22:41:21 minoura Exp $
#

BEGIN {
    FS = "\t";
    # initialize to C locale
    split("Sun Mon Tue Wed Thu Fri Sat", abday, " ");
    split("Sunday Monday Tuesday Wednesday Thursday Friday Saturday",
	  day, " ");
    split("Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec", abmon, " ");
    split("January February March April May June July August September October November December",
	  mon, " ");
    am_pm[1] = "AM"; am_pm[2] = "PM";
    d_t_fmt = "%a %b %e %H:%M:%S %Y";
    d_fmt = "%m/%d/%y";
    t_fmt = "%H:%M:%S";
    t_fmt_ampm = "%I:%M:%S %p";

    # optional;
    era = "\"+:0:0000/01/01:+*:AD:%EC %Ey\";\"+:1:-0001/12/31:-*:BC:%Ey %EC\"";
    era_d_fmt = "%m/%d/%EY";
    era_t_fmt = "";
    era_d_t_fmt = "";
    alt_digits = "";
}

/^abday\t/ {
    split($2, abday, ";");
}

/^day\t/ {
    split($2, day, ";");
}

/^abmon\t/ {
    split($2, abmon, ";");
}

/^mon\t/ {
    split($2, mon, ";");
}

/^am_pm\t/ {
    split($2, am_pm, ";");
}

/^d_t_fmt\t/ {
    d_t_fmt = $2;
}

/^d_fmt\t/ {
    d_t_fmt = $2;
}

/^t_fmt\t/ {
    d_t_fmt = $2;
}

/^t_fmt_ampm\t/ {
    d_t_fmt = $2;
}

END {
    if (era_d_fmt == "") era_d_fmt = d_fmt;
    if (era_t_fmt == "") era_t_fmt = t_fmt;
    if (era_d_t_fmt == "") era_d_t_fmt = d_fmt t_fmt;

    printf "1.0\n";		# version
    for (i = 1; i <= 7; i++) printf "%s\n", abday[i];
    for (i = 1; i <= 7; i++) printf "%s\n", day[i];
    for (i = 1; i <= 12; i++) printf "%s\n", abmon[i];
    for (i = 1; i <= 12; i++) printf "%s\n", mon[i];
    for (i = 1; i <= 2; i++) printf "%s\n", am_pm[i];
    printf "%s\n", d_t_fmt;
    printf "%s\n", d_fmt;
    printf "%s\n", t_fmt;
    printf "%s\n", t_fmt_ampm;

    # no era-/alt-representations
}
