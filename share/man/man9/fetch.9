.\"	$NetBSD: fetch.9,v 1.4.4.1 1997/11/11 14:05:05 mrg Exp $
.\"
.\" Copyright (c) 1996 Jason R. Thorpe.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed by Kenneth Stailey.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed for the NetBSD Project
.\"	by Jason R. Thorpe.
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
.\" BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
.\" AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
.\" OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd Jan 7, 1996
.Dt FETCH 9
.Os NetBSD
.Sh NAME
.Nm fetch ,
.Nm fubyte     ,
.Nm fuibyte ,
.Nm fusword ,
.Nm fuswintr ,
.Nm fuword ,
.Nm fuiword
.Nd fetch data from user-space
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/systm.h>
.Ft int
.Fn fubyte "void *base"
.Ft int
.Fn fusword "void *base"
.Ft int
.Fn fuswintr "void *base"
.Ft int
.Fn fuword "void *base"
.Sh DESCRIPTION
The
.Nm
functions are designed to copy small amounts of data from user-space.
.Pp
The
.Nm
routines provide the following functionality:
.Bl -tag -width "fuswintr()"
.It Fn fubyte
Fetches a byte of data from the user-space address
.Fa base .
.It Fn fusword
Fetches a short word of data from the user-space address
.Fa base .
.It Fn fuswintr
Fetches a short word of data from the user-space address
.Fa base .
This function is safe to call during an interrupt context.
.It Fn fuword
Fetches a word of data from the user-space address
.Fa base .
.El
.Sh RETURN VALUES
The
.Nm
functions return the data fetched or -1 on failure.
Note that these functions all do "unsigned" access, and
therefore will never sign extend byte or short values.
This prevents ambiguity with the error return value
for all functions except
.Fn fuword .
.Sh BUGS
.Pp
The function
.Fn fuword
has no way to unambiguously signal an error, because the
data it reads might legetimately be the same as the -1
used to indicate an error.  The other functions do not
have this problem because the unsigned values returned
by those can never match the -1 error return value.
.Sh SEE ALSO
.Xr copy 9 ,
.Xr store 9 .
