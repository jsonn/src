.\" $NetBSD: time.9,v 1.6.2.1 2001/04/26 12:50:45 he Exp $
.\"
.\" Copyright (c) 1994 Christopher G. Demetriou
.\" All rights reserved.
.\" 
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"          This product includes software developed for the
.\"          NetBSD Project.  See http://www.netbsd.org/ for
.\"          information about NetBSD.
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\" 
.\" <<Id: LICENSE,v 1.2 2000/06/14 15:57:33 cgd Exp>>
.\"
.Dd November 13, 1995
.Dt TIME 9
.Os
.Sh NAME
.Nm boottime ,
.Nm mono_time ,
.Nm runtime ,
.Nm time
.Nd system time variables
.Sh SYNOPSIS
.Va extern struct timeval boottime;
.br
.Va extern volatile struct timeval mono_time;
.br
.Va extern struct timeval runtime;
.br
.Va extern volatile struct timeval time;
.Sh DESCRIPTION
The
.Va time
variable is the system's
.Dq wall time
clock.
It is set at boot by
.Xr inittodr 9 ,
and is updated by the
.Xr settimeofday 2
system call and by periodic clock interrupts.
.Pp
The
.Va boottime
variable holds the system boot time.  It is set from
.Va time
at system boot, and is updated when the system time is adjusted
with
.Xr settimeofday 2 .
.Pp
The
.Va runtime
variable holds the time that the system switched to the
current process.
It is set after each context switch, 
and is updated when the system time is adjusted with
.Xr settimeofday 2 .
Because
.Va runtime
is used for system accounting, it is set with the high-resolution
.Xr microtime 9
function, rather than being copied from
.Va time .
.Pp
The
.Va mono_time
variable is a monotonically increasing system clock.  It is set
from
.Va time
at boot, and is updated by the periodic timer interrupt.  (It is
not updated by
.Xr settimeofday 2 .)
.Pp
All of these variables contain times
expressed in seconds and microseconds since midnight (0 hour),
January 1, 1970.
.Pp
Clock interrupts should be blocked
when reading or writing
.Va time
or
.Va mono_time ,
because those variables are updated by
.Fn hardclock .
.Va boottime
and
.Va runtime
may be read and written without special precautions.
.Sh SEE ALSO
.Xr hz 9 ,
.Xr hardclock 9 ,
.Xr inittodr 9 ,
.Xr microtime 9 ,
.Xr settimeofday 2
.Sh BUGS
.Va runtime
should not be updated when the system time is
changed with
.Xr settimeofday 2 ,
because it is used for resource accounting.
.Pp
The notion of having a single
.Va runtime
variable obviously won't be appropriate in multiprocessor systems.
