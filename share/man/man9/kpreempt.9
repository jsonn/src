.\"	$NetBSD: kpreempt.9,v 1.3.2.2 2010/02/16 19:21:31 rmind Exp $
.\"
.\" Copyright (c)2008 YAMAMOTO Takashi,
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" ------------------------------------------------------------
.Dd February 16, 2010
.Dt KPREEMPT 9
.Os
.\" ------------------------------------------------------------
.Sh NAME
.Nm kpreempt
.Nd control kernel preemption
.\" ------------------------------------------------------------
.Sh SYNOPSIS
.In sys/systm.h
.\" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.Ft void
.Fn kpreempt_disable \
"void"
.Ft void
.Fn kpreempt_enable \
"void"
.Ft bool
.Fn kpreempt_disabled \
"void"
.\" ------------------------------------------------------------
.Sh DESCRIPTION
These functions are used to control kernel preemption of the calling LWP.
.Pp
On architectures where kernel preemption is not supported natively, these
functions may still be used.
.Pp
It should be noted that kernel preemption is also disabled when holding
the interrupt priority level above IPL_NONE, e.g. using
.Xr spl 9
or spinning
.Xr mutex 9
calls or holding kernel_lock (indicating that the code is not MT safe).
.Pp
.Fn kpreempt_disable
disables kernel preemption of the calling LWP.
Note that disabling kernel preemption can prevent LWPs with higher priorities
from running.
.Pp
.Fn kpreempt_enable
enables kernel preemption of the calling LWP, which was previously disabled by
.Fn kpreempt_disable .
.Pp
.Fn kpreempt_disable
and
.Fn kpreempt_enable
can be nested.
.Pp
.Fn kpreempt_disabled
returns
.Dv true
if preemption of the calling LWP is disabled.
It is only for diagnostic purpose.
.\" ------------------------------------------------------------
.\" .Sh RETURN VALUES
.\" ------------------------------------------------------------
.Sh SEE ALSO
.Xr intro 9 ,
.Xr mutex 9 ,
.Xr spl 9
