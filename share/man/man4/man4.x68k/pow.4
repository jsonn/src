.\"	$NetBSD: pow.4,v 1.13.2.1 2009/05/13 19:19:13 jym Exp $
.\"
.\" Copyright (c) 1995 MINOURA Makoto.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"    This product includes software developed by Minoura Makoto.
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd December 20, 2008
.Dt POW 4 x68k
.Os
.Sh NAME
.Nm pow
.Nd X68k power switch device
.Sh DESCRIPTION
File
.Pa /dev/pow0
is a device used to access the x68k power switch / bootstrap information and
the RTC alarm timer.
The following operations are allowed using the
.Xr ioctl 2
system call:
.Pp
.Bl -tag -width POWIOCGPOWERINFO -compact -offset indent
.It POWIOGPOWERINFO
Get power switch status
.It POWIOGALARMINFO
Get RTC alarm timer status
.It POWIOSALARMINFO
Set RTC alarm timer
.El
.Pp
Any power switch events are reported to
.Xr powerd 8 .
.Sh GETTING POWER SWITCH STATUS
.Bd -literal -offset indent
#include \*[Lt]sys/ioctl.h\*[Gt]
#include \*[Lt]machine/powioctl.h\*[Gt]

ioctl (fd, POWIOCGPOWERINFO, \*[Am]powerinfo);
struct x68k_powerinfo powerinfo;
.Ed
.Pp
Returns the power switch status etc. in the following structure.
.Bd -literal -offset indent
struct x68k_powerinfo {
	int pow_switch_boottime;
	int pow_switch_current;
	time_t pow_boottime;
	unsigned int pow_bootcount;
	time_t pow_usedtotal;
};
.Ed
.Pp
The members of the structure mean:
.Bl -hang
.It pow_switch_boottime :
The power switch status at the system start time.
The status can be checked by testing for the following definitions
with the logical
.Dq and
(\*[Am]):
.Pp
.Bl -tag -compact -width POW_EXTERNALSW
.It POW_ALARMSW
True if the system started by the RTC alarm timer
.It POW_EXTERNALSW
True if the EXPWON signal of the I/O slot is on
.It POW_FRONTSW
True if the front power switch is on
.El
.Pp
EXPWON-related information is not tested.
.It pow_switch_current :
Current power switch status.
See above.
.It pow_boottime :
The time when
.Nx
started.
.It pow_bootcount , pow_usedtotal :
Host's boot information from the system memory switch.
Total usage in count (pow_bootcount) and second (pow_usedtotal).
.El
.Sh ACCESSING RTC ALARM TIMER
.Ss Getting the alarm timer
.Bd -literal -offset indent
#include \*[Lt]sys/ioctl.h\*[Gt]
#include \*[Lt]machine/powioctl.h\*[Gt]

ioctl (fd, POWIOCGALARMINFO, \*[Am]alarminfo);
struct x68k_alarminfo alarminfo;
.Ed
.Pp
Returns x68k's alarm timer information in the following structure.
.Bd -literal -offset indent
struct x68k_alarminfo {
	int al_enable;
	unsigned int al_ontime;
	int al_dowhat;
	time_t al_offtime;
};
.Ed
.Pp
The members mean:
.Bl -hang
.It al_enable :
True if the alarm timer is enable.
.It al_ontime :
Internal expression of the alarm timer.
See
.Dq C Compiler PRO-68K Programmers' Manual
Chapter 3 Section ALARMSET.
.It al_dowhat :
What to do when started by the alarm timer.
See
.Dq Programmers' manual .
.It al_offtime :
Display the time in seconds since the alarm is activated until
the power is turned off (though the resolution is resolved to minutes).
Be cautious when using IOCS and the like as these require minute
time units.
0 indicates an infinity.
.El
.Ss Setting the alarm timer
.Bd -literal -offset indent
ioctl (fd, POWIOCSALARMINFO, \*[Am]alarminfo);
struct x68k_alarminfo alarminfo;
.Ed
.Pp
Sets the alarm timer according to the argument
.Ar alarminfo
(see above).
.Sh SEE ALSO
.Xr ioctl 2 ,
.Xr powerd 8 ,
.Xr rtcalarm 8
.Rs
.%T C Compiler PRO-68K Programmers' Manual', Chapter 3 IOCS Calls, Section ALARMSET
.%I Sharp
.Re
.Sh AUTHORS
.An Minoura Makoto Aq minoura@flab.fujitsu.co.jp
.Ss SPECIAL THANKS
Liam Hahne Minn
.Aq hahne@sail.t.u-tokyo.ac.jp
.Sh BUGS
The file
.Pa /dev/pow0
can only be opened by one process at a time.
