.\"	$NetBSD: aout2hux.1,v 1.2 1999/03/17 16:38:12 minoura Exp $
.Dd Aug 13, 1998
.Dt AOUT2HUX 1
.Os
.Sh NAME
.Nm aout2hux
.Nd convert a.out executable to Human68k .x format
.Sh SYNOPSIS
.Nm
.Op Fl o Ar output_file
.Ar aout1
.Ar loadaddr1
.Ar aout2
.Ar loadaddr2
.Sh DESCRIPTION
.Nm
reads two
.Xr a.out 5
format executables with different load addresses
and generate Human68k
.Sq Li \&.x
format executable.
.Pp
The input a.out files must be static
.Dv OMAGIC
/
.Dv NMAGIC
m68k executable.
Two a.out executables must be created from the same objects,
and have different loading addresses.
Each of the load address must be a hexadecimal number.
Load address shall be multiple of 4 for
.Xr as 1
and
.Xr ld 1
of
.Nx Ns Tn /m68k .
.Pp
If the output file is not specified by
.Fl o
option, the name
.Pa out.x
is used.
.Sh FILES
.Bl -tag -width out.xxxx -compact
.It Pa out.x
default output file.
.El
.Sh EXAMPLES
The following command sequence creates a Human68k executable
.Pa foo.x
from object files
.Pa a.o
and
.Pa b.o :
.Bd -literal -offset indent
cc -N -nostdlib -static -Wl,-T,0        -o aout1 a.o b.o
cc -N -nostdlib -static -Wl,-T,10203040 -o aout2 a.o b.o
aout2hux -o foo.x aout1 0 aout2 10203040
.Ed
.Pp
This example uses 0x0 and 0x10203040 as the load addresses.
.Sh SEE ALSO
.Xr as 1 ,
.Xr cc 1 ,
.Xr ld 1 ,
.Xr a.out 5
.Sh BUGS
Symbol and debugging information is not converted.
.Pp
The generated executable is not so effective as that of
Human68k native compiler.
.Sh HISTORY
The
.Nm
utility first appeared in
.Nx 1.4 .
